{"uid":"90c94eb9788d5a5e","name":"Validate Council Output [WakefieldCityCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"532d749d88b4b8fb0bc694b350a3d71a","time":{"start":1690939543582,"stop":1690939544528,"duration":946},"status":"failed","statusMessage":"IndexError: list index out of range","statusTrace":"request = <FixtureRequest for <Function test_scenario_outline[WakefieldCityCouncil]>>\n_pytest_bdd_example = {'council': 'WakefieldCityCouncil'}\n\n    @pytest.mark.usefixtures(*func_args)\n    def scenario_wrapper(request: FixtureRequest, _pytest_bdd_example: dict[str, str]) -> Any:\n        scenario = templated_scenario.render(_pytest_bdd_example)\n>       _execute_scenario(feature, scenario, request)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/pytest_bdd/scenario.py:187: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/pytest_bdd/scenario.py:157: in _execute_scenario\n    _execute_step_function(request, scenario, step, step_func)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/pytest_bdd/scenario.py:127: in _execute_step_function\n    return_value = call_fixture_func(fixturefunc=step_func, request=request, kwargs=kwargs)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\nuk_bin_collection/tests/step_defs/test_validate_council.py:62: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:58: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:71: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:59: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:70: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <WakefieldCityCouncil.CouncilClass object at 0x7f373e56be50>, page = ''\nkwargs = {'paon': None, 'postcode': None, 'uprn': '63035490', 'usrn': None}\nuser_uprn = '63035490'\nheaders = {'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36'}\nparams = {'uprn': '63035490'}\ns = <requests.sessions.Session object at 0x7f373e56bd00>\nwakefield_session = <Response [200]>, response = <Response [404]>\nsoup = <!DOCTYPE html>\n\n<html lang=\"en-gb\">\n<head>\n<title>Page not found - Wakefield Council</title>\n<meta charset=\"utf-8\"/>\n...e?SWJIYLWA=719d34d31c8e3a6e6fffd425f7e032f3&amp;ns=2&amp;cb=1778541456\" type=\"text/javascript\"></script></body>\n</html>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        # UPRN passed in as an argument\n        user_uprn = kwargs.get(\"uprn\")\n        check_uprn(user_uprn)\n    \n        # cookies = {\n        #    'visid_incap_2049675':    'xZCc/tFgSzaFmZD7XkN3koJGuGMAAAAAQUIPAAAAAAB7QGC8d+Jmlk0i3y06Zer6',\n        #    'WSS_FullScreenMode':     'false',\n        #    'incap_ses_1184_2049675': 'a2ZQQ9lCM3wa4+23mWpuEHnAuGMAAAAAfl4ebLXAvItl6dCfbMEWoQ==',\n        # }\n        headers = {\n            \"User-Agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36\"\n        }\n    \n        params = {\n            \"uprn\": user_uprn,\n        }\n    \n        requests.packages.urllib3.disable_warnings()\n        s = requests.Session()  # gets cookies and keeps them\n    \n        wakefield_session = s.get(\"https://www.wakefield.gov.uk/\", headers=headers)\n        # Make a GET for the data with correct params and cookies\n        response = s.get(\n            \"https://www.wakefield.gov.uk/site/Where-I-Live-Results\",\n            params=params,\n            headers=headers,\n            verify=False,\n        )\n    \n        # Have BS4 process the page\n        soup = BeautifulSoup(response.text, features=\"html.parser\")\n        soup.prettify()\n        data = {\"bins\": []}\n    \n        # Start a tuple for collections with (TYPE:DATE). Add the first for the bin types since they're separate\n        # elements on the page. All dates are parsed from text to datetime\n        collections = [\n            (\n                \"Household waste\",\n                datetime.strptime(\n>                   soup.select(\n                        \"#ctl00_PlaceHolderMain_Waste_output > div:nth-child(4) > \"\n                        \"div:nth-child(3) > div:nth-child(2)\"\n                    )[0].text,\n                    \"%d/%m/%Y\",\n                ),\n            ),\n            (\n                \"Mixed recycling\",\n                datetime.strptime(\n                    soup.select(\n                        \"#ctl00_PlaceHolderMain_Waste_output > div:nth-child(6) > \"\n                        \"div:nth-child(3) > div:nth-child(2)\"\n                    )[0].text,\n                    \"%d/%m/%Y\",\n                ),\n            ),\n        ]\nE       IndexError: list index out of range\n\nuk_bin_collection/uk_bin_collection/councils/WakefieldCityCouncil.py:59: IndexError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"IndexError: list index out of range","statusTrace":"request = <FixtureRequest for <Function test_scenario_outline[WakefieldCityCouncil]>>\n_pytest_bdd_example = {'council': 'WakefieldCityCouncil'}\n\n    @pytest.mark.usefixtures(*func_args)\n    def scenario_wrapper(request: FixtureRequest, _pytest_bdd_example: dict[str, str]) -> Any:\n        scenario = templated_scenario.render(_pytest_bdd_example)\n>       _execute_scenario(feature, scenario, request)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/pytest_bdd/scenario.py:187: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/pytest_bdd/scenario.py:157: in _execute_scenario\n    _execute_step_function(request, scenario, step, step_func)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/pytest_bdd/scenario.py:127: in _execute_step_function\n    return_value = call_fixture_func(fixturefunc=step_func, request=request, kwargs=kwargs)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\nuk_bin_collection/tests/step_defs/test_validate_council.py:62: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:58: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:71: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:59: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:70: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <WakefieldCityCouncil.CouncilClass object at 0x7f373e56be50>, page = ''\nkwargs = {'paon': None, 'postcode': None, 'uprn': '63035490', 'usrn': None}\nuser_uprn = '63035490'\nheaders = {'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36'}\nparams = {'uprn': '63035490'}\ns = <requests.sessions.Session object at 0x7f373e56bd00>\nwakefield_session = <Response [200]>, response = <Response [404]>\nsoup = <!DOCTYPE html>\n\n<html lang=\"en-gb\">\n<head>\n<title>Page not found - Wakefield Council</title>\n<meta charset=\"utf-8\"/>\n...e?SWJIYLWA=719d34d31c8e3a6e6fffd425f7e032f3&amp;ns=2&amp;cb=1778541456\" type=\"text/javascript\"></script></body>\n</html>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        # UPRN passed in as an argument\n        user_uprn = kwargs.get(\"uprn\")\n        check_uprn(user_uprn)\n    \n        # cookies = {\n        #    'visid_incap_2049675':    'xZCc/tFgSzaFmZD7XkN3koJGuGMAAAAAQUIPAAAAAAB7QGC8d+Jmlk0i3y06Zer6',\n        #    'WSS_FullScreenMode':     'false',\n        #    'incap_ses_1184_2049675': 'a2ZQQ9lCM3wa4+23mWpuEHnAuGMAAAAAfl4ebLXAvItl6dCfbMEWoQ==',\n        # }\n        headers = {\n            \"User-Agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36\"\n        }\n    \n        params = {\n            \"uprn\": user_uprn,\n        }\n    \n        requests.packages.urllib3.disable_warnings()\n        s = requests.Session()  # gets cookies and keeps them\n    \n        wakefield_session = s.get(\"https://www.wakefield.gov.uk/\", headers=headers)\n        # Make a GET for the data with correct params and cookies\n        response = s.get(\n            \"https://www.wakefield.gov.uk/site/Where-I-Live-Results\",\n            params=params,\n            headers=headers,\n            verify=False,\n        )\n    \n        # Have BS4 process the page\n        soup = BeautifulSoup(response.text, features=\"html.parser\")\n        soup.prettify()\n        data = {\"bins\": []}\n    \n        # Start a tuple for collections with (TYPE:DATE). Add the first for the bin types since they're separate\n        # elements on the page. All dates are parsed from text to datetime\n        collections = [\n            (\n                \"Household waste\",\n                datetime.strptime(\n>                   soup.select(\n                        \"#ctl00_PlaceHolderMain_Waste_output > div:nth-child(4) > \"\n                        \"div:nth-child(3) > div:nth-child(2)\"\n                    )[0].text,\n                    \"%d/%m/%Y\",\n                ),\n            ),\n            (\n                \"Mixed recycling\",\n                datetime.strptime(\n                    soup.select(\n                        \"#ctl00_PlaceHolderMain_Waste_output > div:nth-child(6) > \"\n                        \"div:nth-child(3) > div:nth-child(2)\"\n                    )[0].text,\n                    \"%d/%m/%Y\",\n                ),\n            ),\n        ]\nE       IndexError: list index out of range\n\nuk_bin_collection/uk_bin_collection/councils/WakefieldCityCouncil.py:59: IndexError","steps":[{"name":"Given the council: WakefieldCityCouncil","time":{"start":1690939543582,"stop":1690939543583,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"When we scrape the data from WakefieldCityCouncil","time":{"start":1690939543583,"stop":1690939544528,"duration":945},"status":"failed","statusMessage":"list index out of range","statusTrace":"IndexError: list index out of range\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[],"parameters":[],"stepsCount":2,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az256-765"},{"name":"thread","value":"2303-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"WakefieldCityCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":18,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":18},"items":[{"uid":"a1c530e17ac85791","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/839//#testresult/a1c530e17ac85791","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1690854235100,"stop":1690854235846,"duration":746}},{"uid":"1ac490c19feac1f5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/838//#testresult/1ac490c19feac1f5","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1690766957949,"stop":1690766958799,"duration":850}},{"uid":"cb2a86f085b39e9f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/837//#testresult/cb2a86f085b39e9f","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1690680699494,"stop":1690680700828,"duration":1334}},{"uid":"72cdda402201fda7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/836//#testresult/72cdda402201fda7","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1690594015795,"stop":1690594016919,"duration":1124}},{"uid":"504bb0c0c781ddd4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/835//#testresult/504bb0c0c781ddd4","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1690563594624,"stop":1690563595670,"duration":1046}},{"uid":"a686890ec92c7591","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/833//#testresult/a686890ec92c7591","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1690562888378,"stop":1690562889575,"duration":1197}},{"uid":"3ab699b5cf20680","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/832//#testresult/3ab699b5cf20680","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1690507586713,"stop":1690507587670,"duration":957}},{"uid":"c9791d1d3c97325f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/831//#testresult/c9791d1d3c97325f","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1690421134561,"stop":1690421135588,"duration":1027}},{"uid":"f34f69b9bebb6760","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/830//#testresult/f34f69b9bebb6760","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1690335678864,"stop":1690335679590,"duration":726}},{"uid":"274f8857c20a1342","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/829//#testresult/274f8857c20a1342","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1690249812210,"stop":1690249812888,"duration":678}},{"uid":"11bba2daaa4e7166","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/828//#testresult/11bba2daaa4e7166","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1690162904598,"stop":1690162906153,"duration":1555}},{"uid":"727e76d754c7391","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/827//#testresult/727e76d754c7391","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1690123620533,"stop":1690123621216,"duration":683}},{"uid":"5a9633b72062db8b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/824//#testresult/5a9633b72062db8b","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1690107061312,"stop":1690107062026,"duration":714}},{"uid":"8a2ec0716aadba9e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/822//#testresult/8a2ec0716aadba9e","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1690076882651,"stop":1690076883342,"duration":691}},{"uid":"1ba51c35ce333dc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/821//#testresult/1ba51c35ce333dc","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1690027528308,"stop":1690027529315,"duration":1007}},{"uid":"49be330284482dc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/820//#testresult/49be330284482dc","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1690025969878,"stop":1690025970791,"duration":913}},{"uid":"841d09c6ae75eead","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/813//#testresult/841d09c6ae75eead","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1689841217441,"stop":1689841218289,"duration":848}}]},"tags":[]},"source":"90c94eb9788d5a5e.json","parameterValues":["WakefieldCityCouncil"]}