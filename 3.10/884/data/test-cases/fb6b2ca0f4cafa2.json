{"uid":"fb6b2ca0f4cafa2","name":"Validate Council Output [CroydonCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"cc336f6dd92ae6b8042805cd6f13d13e","time":{"start":1693790041105,"stop":1693790042956,"duration":1851},"status":"failed","statusMessage":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","statusTrace":"request = <FixtureRequest for <Function test_scenario_outline[CroydonCouncil]>>\n_pytest_bdd_example = {'council': 'CroydonCouncil'}\n\n    @pytest.mark.usefixtures(*func_args)\n    def scenario_wrapper(request: FixtureRequest, _pytest_bdd_example: dict[str, str]) -> Any:\n        scenario = templated_scenario.render(_pytest_bdd_example)\n>       _execute_scenario(feature, scenario, request)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/pytest_bdd/scenario.py:187: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/pytest_bdd/scenario.py:157: in _execute_scenario\n    _execute_step_function(request, scenario, step, step_func)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/pytest_bdd/scenario.py:127: in _execute_step_function\n    return_value = call_fixture_func(fixturefunc=step_func, request=request, kwargs=kwargs)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\nuk_bin_collection/tests/step_defs/test_validate_council.py:62: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:58: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:71: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:59: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:70: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/CroydonCouncil.py:256: in parse_data\n    collection_data = get_collection_data(s, base_url, csrf_token, address_id)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = <requests.sessions.Session object at 0x7f14b8129300>\nbase_url = 'https://service.croydon.gov.uk'\ncsrf_token = '79bd024ddd0413620d1b50e25aaa626fe273001a', address_id = '96383'\n\n    def get_collection_data(\n        s: requests.session, base_url: str, csrf_token: str, address_id: str\n    ) -> str:\n        \"\"\"\n        Gets the collection data\n            :rtype: str\n            :param s: requests.session() to use\n            :param base_url: Base URL to use\n            :param csrf_token: CSRF token to use\n            :param address_id: Address id to use\n            :param retries: Retries count\n            :return: Collection data\n        \"\"\"\n        collection_data = \"\"\n        if address_id != \"0\":\n            form_data = {\n                \"form_check\": csrf_token,\n                \"submitted_page_id\": \"PAG0000898EECEC1\",\n                \"submitted_widget_group_id\": \"PWG0002644EECEC1\",\n                \"submitted_widget_group_type\": \"modify\",\n                \"submission_token\": \"63e9126bacd815.12997577\",\n                \"payload[PAG0000898EECEC1][PWG0002644EECEC1][PCL0005629EECEC1][formtable]\"\n                \"[C_63e9126bacfb3][PCF0020408EECEC1]\": address_id,\n                \"payload[PAG0000898EECEC1][PWG0002644EECEC1][PCL0005629EECEC1][formtable]\"\n                \"[C_63e9126bacfb3][PCF0021449EECEC1]\": \"1\",\n                \"payload[PAG0000898EECEC1][PWG0002644EECEC1][PCL0005629EECEC1][formtable]\"\n                \"[C_63e9126bacfb3][PCF0020072EECEC1]\": \"Next\",\n                \"submit_fragment_id\": \"PCF0020072EECEC1\",\n                \"_session_storage\": json.dumps({\"_global\": get_session_storage_global()}),\n                \"_update_page_content_request\": 1,\n                \"form_check_ajax\": csrf_token,\n            }\n            response = s.post(\n                base_url\n                + \"/wasteservices/w/webpage/bin-day-enter-address?webpage_subpage_id=PAG0000898EECEC1\"\n                \"&webpage_token=faab02e1f62a58f7bad4c2ae5b8622e19846b97dde2a76f546c4bb1230cee044\",\n                headers=get_headers(base_url, \"POST\"),\n                data=form_data,\n            )\n            if response.status_code == 200 and len(response.text) > 0:\n                json_response = json.loads(response.text)\n                form_data = {\n                    \"_dummy\": 1,\n                    \"_session_storage\": json.dumps(\n                        {\"_global\": get_session_storage_global()}\n                    ),\n                    \"_update_page_content_request\": 1,\n                    \"form_check_ajax\": csrf_token,\n                }\n                response = s.post(\n                    base_url + json_response[\"redirect_url\"],\n                    headers=get_headers(base_url, \"POST\"),\n                    data=form_data,\n                )\n                if response.status_code == 200 and len(response.text) > 0:\n                    json_response = json.loads(response.text)\n                    collection_data = json_response[\"data\"]\n                else:\n                    raise ValueError(\"Code 4: Failed to get bin data.\")\n            else:\n>               raise ValueError(\n                    \"Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.\"\n                )\nE               ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.\n\nuk_bin_collection/uk_bin_collection/councils/CroydonCouncil.py:229: ValueError","flaky":true,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","statusTrace":"request = <FixtureRequest for <Function test_scenario_outline[CroydonCouncil]>>\n_pytest_bdd_example = {'council': 'CroydonCouncil'}\n\n    @pytest.mark.usefixtures(*func_args)\n    def scenario_wrapper(request: FixtureRequest, _pytest_bdd_example: dict[str, str]) -> Any:\n        scenario = templated_scenario.render(_pytest_bdd_example)\n>       _execute_scenario(feature, scenario, request)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/pytest_bdd/scenario.py:187: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/pytest_bdd/scenario.py:157: in _execute_scenario\n    _execute_step_function(request, scenario, step, step_func)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/pytest_bdd/scenario.py:127: in _execute_step_function\n    return_value = call_fixture_func(fixturefunc=step_func, request=request, kwargs=kwargs)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\nuk_bin_collection/tests/step_defs/test_validate_council.py:62: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:58: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:71: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:59: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:70: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/CroydonCouncil.py:256: in parse_data\n    collection_data = get_collection_data(s, base_url, csrf_token, address_id)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = <requests.sessions.Session object at 0x7f14b8129300>\nbase_url = 'https://service.croydon.gov.uk'\ncsrf_token = '79bd024ddd0413620d1b50e25aaa626fe273001a', address_id = '96383'\n\n    def get_collection_data(\n        s: requests.session, base_url: str, csrf_token: str, address_id: str\n    ) -> str:\n        \"\"\"\n        Gets the collection data\n            :rtype: str\n            :param s: requests.session() to use\n            :param base_url: Base URL to use\n            :param csrf_token: CSRF token to use\n            :param address_id: Address id to use\n            :param retries: Retries count\n            :return: Collection data\n        \"\"\"\n        collection_data = \"\"\n        if address_id != \"0\":\n            form_data = {\n                \"form_check\": csrf_token,\n                \"submitted_page_id\": \"PAG0000898EECEC1\",\n                \"submitted_widget_group_id\": \"PWG0002644EECEC1\",\n                \"submitted_widget_group_type\": \"modify\",\n                \"submission_token\": \"63e9126bacd815.12997577\",\n                \"payload[PAG0000898EECEC1][PWG0002644EECEC1][PCL0005629EECEC1][formtable]\"\n                \"[C_63e9126bacfb3][PCF0020408EECEC1]\": address_id,\n                \"payload[PAG0000898EECEC1][PWG0002644EECEC1][PCL0005629EECEC1][formtable]\"\n                \"[C_63e9126bacfb3][PCF0021449EECEC1]\": \"1\",\n                \"payload[PAG0000898EECEC1][PWG0002644EECEC1][PCL0005629EECEC1][formtable]\"\n                \"[C_63e9126bacfb3][PCF0020072EECEC1]\": \"Next\",\n                \"submit_fragment_id\": \"PCF0020072EECEC1\",\n                \"_session_storage\": json.dumps({\"_global\": get_session_storage_global()}),\n                \"_update_page_content_request\": 1,\n                \"form_check_ajax\": csrf_token,\n            }\n            response = s.post(\n                base_url\n                + \"/wasteservices/w/webpage/bin-day-enter-address?webpage_subpage_id=PAG0000898EECEC1\"\n                \"&webpage_token=faab02e1f62a58f7bad4c2ae5b8622e19846b97dde2a76f546c4bb1230cee044\",\n                headers=get_headers(base_url, \"POST\"),\n                data=form_data,\n            )\n            if response.status_code == 200 and len(response.text) > 0:\n                json_response = json.loads(response.text)\n                form_data = {\n                    \"_dummy\": 1,\n                    \"_session_storage\": json.dumps(\n                        {\"_global\": get_session_storage_global()}\n                    ),\n                    \"_update_page_content_request\": 1,\n                    \"form_check_ajax\": csrf_token,\n                }\n                response = s.post(\n                    base_url + json_response[\"redirect_url\"],\n                    headers=get_headers(base_url, \"POST\"),\n                    data=form_data,\n                )\n                if response.status_code == 200 and len(response.text) > 0:\n                    json_response = json.loads(response.text)\n                    collection_data = json_response[\"data\"]\n                else:\n                    raise ValueError(\"Code 4: Failed to get bin data.\")\n            else:\n>               raise ValueError(\n                    \"Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.\"\n                )\nE               ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.\n\nuk_bin_collection/uk_bin_collection/councils/CroydonCouncil.py:229: ValueError","steps":[{"name":"Given the council: CroydonCouncil","time":{"start":1693790041105,"stop":1693790041106,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"When we scrape the data from CroydonCouncil","time":{"start":1693790041106,"stop":1693790042955,"duration":1849},"status":"failed","statusMessage":"Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","statusTrace":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az176-369"},{"name":"thread","value":"2084-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"CroydonCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":37,"broken":0,"skipped":0,"passed":18,"unknown":0,"total":55},"items":[{"uid":"f91e46ad11064c18","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/883//#testresult/f91e46ad11064c18","status":"failed","statusDetails":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","time":{"start":1693703792659,"stop":1693703794478,"duration":1819}},{"uid":"58cc5373f3642519","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/882//#testresult/58cc5373f3642519","status":"failed","statusDetails":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","time":{"start":1693617031946,"stop":1693617033556,"duration":1610}},{"uid":"a14f8f1049f8f7c4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/881//#testresult/a14f8f1049f8f7c4","status":"passed","time":{"start":1693531036751,"stop":1693531041248,"duration":4497}},{"uid":"93927edd1cf9e88","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/880//#testresult/93927edd1cf9e88","status":"failed","statusDetails":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","time":{"start":1693444391993,"stop":1693444393821,"duration":1828}},{"uid":"5791462b88769b00","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/879//#testresult/5791462b88769b00","status":"failed","statusDetails":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","time":{"start":1693357958328,"stop":1693357959835,"duration":1507}},{"uid":"9070300b79f5e61d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/878//#testresult/9070300b79f5e61d","status":"failed","statusDetails":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","time":{"start":1693271578778,"stop":1693271580572,"duration":1794}},{"uid":"414b5b5bfd65d9f8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/877//#testresult/414b5b5bfd65d9f8","status":"failed","statusDetails":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","time":{"start":1693185216723,"stop":1693185218838,"duration":2115}},{"uid":"1e284c8438961523","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/876//#testresult/1e284c8438961523","status":"failed","statusDetails":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","time":{"start":1693098969566,"stop":1693098970975,"duration":1409}},{"uid":"a958e25905c76547","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/875//#testresult/a958e25905c76547","status":"failed","statusDetails":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","time":{"start":1693012189896,"stop":1693012191467,"duration":1571}},{"uid":"8f139b62756ec85d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/874//#testresult/8f139b62756ec85d","status":"failed","statusDetails":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","time":{"start":1692925967893,"stop":1692925970050,"duration":2157}},{"uid":"be69531924934fae","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/873//#testresult/be69531924934fae","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'attrs'","time":{"start":1692839462682,"stop":1692839466833,"duration":4151}},{"uid":"972c73909d78cf40","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/871//#testresult/972c73909d78cf40","status":"failed","statusDetails":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","time":{"start":1692753078715,"stop":1692753080053,"duration":1338}},{"uid":"de5a83a7710afaad","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/870//#testresult/de5a83a7710afaad","status":"passed","time":{"start":1692666716418,"stop":1692666720196,"duration":3778}},{"uid":"227687d529d4256a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/869//#testresult/227687d529d4256a","status":"failed","statusDetails":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","time":{"start":1692624233387,"stop":1692624234726,"duration":1339}},{"uid":"36d5ab27948d9b3f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/867//#testresult/36d5ab27948d9b3f","status":"failed","statusDetails":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","time":{"start":1692580271766,"stop":1692580273073,"duration":1307}},{"uid":"1e308c836b35c6a2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/866//#testresult/1e308c836b35c6a2","status":"passed","time":{"start":1692494042809,"stop":1692494046966,"duration":4157}},{"uid":"ab18721fa315df2e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/865//#testresult/ab18721fa315df2e","status":"passed","time":{"start":1692407321480,"stop":1692407326051,"duration":4571}},{"uid":"bdb1b3e0ab352186","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/864//#testresult/bdb1b3e0ab352186","status":"passed","time":{"start":1692321040129,"stop":1692321044383,"duration":4254}},{"uid":"42d58bc891f537e9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/863//#testresult/42d58bc891f537e9","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'attrs'","time":{"start":1692294221207,"stop":1692294225589,"duration":4382}},{"uid":"1692c06a7e645f84","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/861//#testresult/1692c06a7e645f84","status":"failed","statusDetails":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","time":{"start":1692234603967,"stop":1692234605514,"duration":1547}}]},"tags":[]},"source":"fb6b2ca0f4cafa2.json","parameterValues":["CroydonCouncil"]}