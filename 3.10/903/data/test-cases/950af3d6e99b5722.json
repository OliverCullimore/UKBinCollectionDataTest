{"uid":"950af3d6e99b5722","name":"Validate Council Output [StHelensBC]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"aefb4666f5cfa7265d9db53c16df38b6","time":{"start":1694481284626,"stop":1694481287519,"duration":2893},"status":"failed","statusMessage":"ValueError: time data 'Fri 22 Sept 2023' does not match format '%a %d %b %Y'","statusTrace":"request = <FixtureRequest for <Function test_scenario_outline[StHelensBC]>>\n_pytest_bdd_example = {'council': 'StHelensBC'}\n\n    @pytest.mark.usefixtures(*func_args)\n    def scenario_wrapper(request: FixtureRequest, _pytest_bdd_example: dict[str, str]) -> Any:\n        scenario = templated_scenario.render(_pytest_bdd_example)\n>       _execute_scenario(feature, scenario, request)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/pytest_bdd/scenario.py:187: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/pytest_bdd/scenario.py:157: in _execute_scenario\n    _execute_step_function(request, scenario, step, step_func)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/pytest_bdd/scenario.py:127: in _execute_step_function\n    return_value = call_fixture_func(fixturefunc=step_func, request=request, kwargs=kwargs)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\nuk_bin_collection/tests/step_defs/test_validate_council.py:62: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:58: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:71: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:59: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:70: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/StHelensBC.py:43: in parse_data\n    collection_date = datetime.strptime(bin_date.get_text(strip=True), \"%a %d %b %Y\")\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/_strptime.py:568: in _strptime_datetime\n    tt, fraction, gmtoff_fraction = _strptime(data_string, format)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndata_string = 'Fri 22 Sept 2023', format = '%a %d %b %Y'\n\n    def _strptime(data_string, format=\"%a %b %d %H:%M:%S %Y\"):\n        \"\"\"Return a 2-tuple consisting of a time struct and an int containing\n        the number of microseconds based on the input string and the\n        format string.\"\"\"\n    \n        for index, arg in enumerate([data_string, format]):\n            if not isinstance(arg, str):\n                msg = \"strptime() argument {} must be str, not {}\"\n                raise TypeError(msg.format(index, type(arg)))\n    \n        global _TimeRE_cache, _regex_cache\n        with _cache_lock:\n            locale_time = _TimeRE_cache.locale_time\n            if (_getlang() != locale_time.lang or\n                time.tzname != locale_time.tzname or\n                time.daylight != locale_time.daylight):\n                _TimeRE_cache = TimeRE()\n                _regex_cache.clear()\n                locale_time = _TimeRE_cache.locale_time\n            if len(_regex_cache) > _CACHE_MAX_SIZE:\n                _regex_cache.clear()\n            format_regex = _regex_cache.get(format)\n            if not format_regex:\n                try:\n                    format_regex = _TimeRE_cache.compile(format)\n                # KeyError raised when a bad format is found; can be specified as\n                # \\\\, in which case it was a stray % but with a space after it\n                except KeyError as err:\n                    bad_directive = err.args[0]\n                    if bad_directive == \"\\\\\":\n                        bad_directive = \"%\"\n                    del err\n                    raise ValueError(\"'%s' is a bad directive in format '%s'\" %\n                                        (bad_directive, format)) from None\n                # IndexError only occurs when the format string is \"%\"\n                except IndexError:\n                    raise ValueError(\"stray %% in format '%s'\" % format) from None\n                _regex_cache[format] = format_regex\n        found = format_regex.match(data_string)\n        if not found:\n>           raise ValueError(\"time data %r does not match format %r\" %\n                             (data_string, format))\nE           ValueError: time data 'Fri 22 Sept 2023' does not match format '%a %d %b %Y'\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/_strptime.py:349: ValueError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"ValueError: time data 'Fri 22 Sept 2023' does not match format '%a %d %b %Y'","statusTrace":"request = <FixtureRequest for <Function test_scenario_outline[StHelensBC]>>\n_pytest_bdd_example = {'council': 'StHelensBC'}\n\n    @pytest.mark.usefixtures(*func_args)\n    def scenario_wrapper(request: FixtureRequest, _pytest_bdd_example: dict[str, str]) -> Any:\n        scenario = templated_scenario.render(_pytest_bdd_example)\n>       _execute_scenario(feature, scenario, request)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/pytest_bdd/scenario.py:187: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/pytest_bdd/scenario.py:157: in _execute_scenario\n    _execute_step_function(request, scenario, step, step_func)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/pytest_bdd/scenario.py:127: in _execute_step_function\n    return_value = call_fixture_func(fixturefunc=step_func, request=request, kwargs=kwargs)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\nuk_bin_collection/tests/step_defs/test_validate_council.py:62: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:58: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:71: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:59: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:70: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/StHelensBC.py:43: in parse_data\n    collection_date = datetime.strptime(bin_date.get_text(strip=True), \"%a %d %b %Y\")\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/_strptime.py:568: in _strptime_datetime\n    tt, fraction, gmtoff_fraction = _strptime(data_string, format)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndata_string = 'Fri 22 Sept 2023', format = '%a %d %b %Y'\n\n    def _strptime(data_string, format=\"%a %b %d %H:%M:%S %Y\"):\n        \"\"\"Return a 2-tuple consisting of a time struct and an int containing\n        the number of microseconds based on the input string and the\n        format string.\"\"\"\n    \n        for index, arg in enumerate([data_string, format]):\n            if not isinstance(arg, str):\n                msg = \"strptime() argument {} must be str, not {}\"\n                raise TypeError(msg.format(index, type(arg)))\n    \n        global _TimeRE_cache, _regex_cache\n        with _cache_lock:\n            locale_time = _TimeRE_cache.locale_time\n            if (_getlang() != locale_time.lang or\n                time.tzname != locale_time.tzname or\n                time.daylight != locale_time.daylight):\n                _TimeRE_cache = TimeRE()\n                _regex_cache.clear()\n                locale_time = _TimeRE_cache.locale_time\n            if len(_regex_cache) > _CACHE_MAX_SIZE:\n                _regex_cache.clear()\n            format_regex = _regex_cache.get(format)\n            if not format_regex:\n                try:\n                    format_regex = _TimeRE_cache.compile(format)\n                # KeyError raised when a bad format is found; can be specified as\n                # \\\\, in which case it was a stray % but with a space after it\n                except KeyError as err:\n                    bad_directive = err.args[0]\n                    if bad_directive == \"\\\\\":\n                        bad_directive = \"%\"\n                    del err\n                    raise ValueError(\"'%s' is a bad directive in format '%s'\" %\n                                        (bad_directive, format)) from None\n                # IndexError only occurs when the format string is \"%\"\n                except IndexError:\n                    raise ValueError(\"stray %% in format '%s'\" % format) from None\n                _regex_cache[format] = format_regex\n        found = format_regex.match(data_string)\n        if not found:\n>           raise ValueError(\"time data %r does not match format %r\" %\n                             (data_string, format))\nE           ValueError: time data 'Fri 22 Sept 2023' does not match format '%a %d %b %Y'\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/_strptime.py:349: ValueError","steps":[{"name":"Given the council: StHelensBC","time":{"start":1694481284626,"stop":1694481284626,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"When we scrape the data from StHelensBC","time":{"start":1694481284627,"stop":1694481287519,"duration":2892},"status":"failed","statusMessage":"time data 'Fri 22 Sept 2023' does not match format '%a %d %b %Y'","statusTrace":"ValueError: time data 'Fri 22 Sept 2023' does not match format '%a %d %b %Y'\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az189-157"},{"name":"thread","value":"2101-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"StHelensBC"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":54,"broken":0,"skipped":0,"passed":11,"unknown":0,"total":65},"items":[{"uid":"c243b6e5090fb764","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/902//#testresult/c243b6e5090fb764","status":"failed","statusDetails":"ValueError: time data 'Fri 22 Sept 2023' does not match format '%a %d %b %Y'","time":{"start":1694395015809,"stop":1694395019389,"duration":3580}},{"uid":"f0231fd9ee68338a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/901//#testresult/f0231fd9ee68338a","status":"failed","statusDetails":"ValueError: time data 'Fri 22 Sept 2023' does not match format '%a %d %b %Y'","time":{"start":1694365407927,"stop":1694365413897,"duration":5970}},{"uid":"6ede5fdcbd805b4b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/899//#testresult/6ede5fdcbd805b4b","status":"failed","statusDetails":"ValueError: time data 'Fri 22 Sept 2023' does not match format '%a %d %b %Y'","time":{"start":1694308811437,"stop":1694308819628,"duration":8191}},{"uid":"e92989e6a22360c3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/891//#testresult/e92989e6a22360c3","status":"failed","statusDetails":"ValueError: time data 'Fri 22 Sept 2023' does not match format '%a %d %b %Y'","time":{"start":1694240533671,"stop":1694240539446,"duration":5775}},{"uid":"d3a01a2ef9ca5aea","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/890//#testresult/d3a01a2ef9ca5aea","status":"failed","statusDetails":"ValueError: time data 'Fri 22 Sept 2023' does not match format '%a %d %b %Y'","time":{"start":1694222036354,"stop":1694222039464,"duration":3110}},{"uid":"147619b380cfd0e5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/889//#testresult/147619b380cfd0e5","status":"failed","statusDetails":"ValueError: time data 'Fri 8 Sept 2023' does not match format '%a %d %b %Y'","time":{"start":1694135836239,"stop":1694135837211,"duration":972}},{"uid":"a6204ad8a673e54","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/888//#testresult/a6204ad8a673e54","status":"failed","statusDetails":"ValueError: time data 'Fri 8 Sept 2023' does not match format '%a %d %b %Y'","time":{"start":1694049437465,"stop":1694049443279,"duration":5814}},{"uid":"2f1eea3449168058","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/887//#testresult/2f1eea3449168058","status":"failed","statusDetails":"ValueError: time data 'Fri 8 Sept 2023' does not match format '%a %d %b %Y'","time":{"start":1693962978496,"stop":1693962979121,"duration":625}},{"uid":"b0776b5d7b1c2cdf","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/885//#testresult/b0776b5d7b1c2cdf","status":"failed","statusDetails":"ValueError: time data 'Fri 8 Sept 2023' does not match format '%a %d %b %Y'","time":{"start":1693876547076,"stop":1693876548051,"duration":975}},{"uid":"bfcfabce01ccefb2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/884//#testresult/bfcfabce01ccefb2","status":"failed","statusDetails":"ValueError: time data 'Fri 8 Sept 2023' does not match format '%a %d %b %Y'","time":{"start":1693790293104,"stop":1693790294091,"duration":987}},{"uid":"6f0413c7c6cb1a75","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/883//#testresult/6f0413c7c6cb1a75","status":"failed","statusDetails":"ValueError: time data 'Fri 8 Sept 2023' does not match format '%a %d %b %Y'","time":{"start":1693704039557,"stop":1693704047820,"duration":8263}},{"uid":"476af5d7a1a1172","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/882//#testresult/476af5d7a1a1172","status":"failed","statusDetails":"ValueError: time data 'Fri 8 Sept 2023' does not match format '%a %d %b %Y'","time":{"start":1693617279470,"stop":1693617285354,"duration":5884}},{"uid":"a0fcbb80da6472c7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/881//#testresult/a0fcbb80da6472c7","status":"failed","statusDetails":"ValueError: time data 'Fri 8 Sept 2023' does not match format '%a %d %b %Y'","time":{"start":1693531245947,"stop":1693531246561,"duration":614}},{"uid":"9e6782760097dbe4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/880//#testresult/9e6782760097dbe4","status":"failed","statusDetails":"ValueError: time data 'Fri 8 Sept 2023' does not match format '%a %d %b %Y'","time":{"start":1693444633869,"stop":1693444634777,"duration":908}},{"uid":"8d51eb4a67a52a3f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/879//#testresult/8d51eb4a67a52a3f","status":"failed","statusDetails":"ValueError: time data 'Fri 8 Sept 2023' does not match format '%a %d %b %Y'","time":{"start":1693358148640,"stop":1693358156566,"duration":7926}},{"uid":"7fa2141593f8bd8b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/878//#testresult/7fa2141593f8bd8b","status":"failed","statusDetails":"requests.exceptions.ConnectTimeout: HTTPSConnectionPool(host='secure.sthelens.net', port=443): Max retries exceeded with url: /website/CollectionDates.nsf/servlet.xsp/NextCollections?source=1&refid=39081672 (Caused by ConnectTimeoutError(<urllib3.connection.HTTPSConnection object at 0x7fc78841cf10>, 'Connection to secure.sthelens.net timed out. (connect timeout=None)'))","time":{"start":1693271819354,"stop":1693271949903,"duration":130549}},{"uid":"760c6b71eb1fbb34","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/877//#testresult/760c6b71eb1fbb34","status":"failed","statusDetails":"requests.exceptions.ConnectTimeout: HTTPSConnectionPool(host='secure.sthelens.net', port=443): Max retries exceeded with url: /website/CollectionDates.nsf/servlet.xsp/NextCollections?source=1&refid=39081672 (Caused by ConnectTimeoutError(<urllib3.connection.HTTPSConnection object at 0x7f3ad3430760>, 'Connection to secure.sthelens.net timed out. (connect timeout=None)'))","time":{"start":1693185463375,"stop":1693185594642,"duration":131267}},{"uid":"53fe1bd3c22cf180","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/876//#testresult/53fe1bd3c22cf180","status":"failed","statusDetails":"requests.exceptions.ConnectTimeout: HTTPSConnectionPool(host='secure.sthelens.net', port=443): Max retries exceeded with url: /website/CollectionDates.nsf/servlet.xsp/NextCollections?source=1&refid=39081672 (Caused by ConnectTimeoutError(<urllib3.connection.HTTPSConnection object at 0x7f42cf92d930>, 'Connection to secure.sthelens.net timed out. (connect timeout=None)'))","time":{"start":1693099173107,"stop":1693099303484,"duration":130377}},{"uid":"bdd14e157d091f92","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/875//#testresult/bdd14e157d091f92","status":"failed","statusDetails":"requests.exceptions.ConnectTimeout: HTTPSConnectionPool(host='secure.sthelens.net', port=443): Max retries exceeded with url: /website/CollectionDates.nsf/servlet.xsp/NextCollections?source=1&refid=39081672 (Caused by ConnectTimeoutError(<urllib3.connection.HTTPSConnection object at 0x7f856e6fedd0>, 'Connection to secure.sthelens.net timed out. (connect timeout=None)'))","time":{"start":1693012460105,"stop":1693012589673,"duration":129568}},{"uid":"5f577ad9f03caf99","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/874//#testresult/5f577ad9f03caf99","status":"failed","statusDetails":"ValueError: time data 'Fri 8 Sept 2023' does not match format '%a %d %b %Y'","time":{"start":1692926211702,"stop":1692926212695,"duration":993}}]},"tags":[]},"source":"950af3d6e99b5722.json","parameterValues":["StHelensBC"]}