{"uid":"16f59015e163ff8c","name":"Validate Council Output [SouthOxfordshireCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"dd90c8e7bdfef60ba64401e6c2135205","time":{"start":1692666839810,"stop":1692666843266,"duration":3456},"status":"failed","statusMessage":"ValueError: Error parsing bin data: time data 'Your usual collection day is different this weekSaturday 2 September 2023' does not match format '%A %d %B %Y'","statusTrace":"self = <SouthOxfordshireCouncil.CouncilClass object at 0x7f2227c9c400>\npage = ''\nkwargs = {'paon': None, 'postcode': None, 'uprn': '10033002851', 'usrn': None}\nuser_uprn = '10033002851', cookies = {'SVBINZONE': 'SOUTH%3AUPRN%4010033002851'}\nheaders = {'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8', 'Accept-Language': 'en-GB,en;q=0.7', 'Cache-Control': 'max-age=0', 'Connection': 'keep-alive', ...}\nparams = {'SOVA_TAG': 'SOUTH', 'ebd': '0'}, response = <Response [200]>\nsoup = <!DOCTYPE html>\n\n<html lang=\"EN\">\n<!-- \n Powered by Verj.io\n www.verj.io\n -->\n<head>\n<meta content=\"text/html; charset...\":null,\"end\":null},\"scrollClassIdentifiers\":null,\"scrollX\":null,\"scrollY\":null}' id=\"ebDynamic\"></div>\n</body>\n</html>\n\ndata = {'bins': [{'collectionDate': '25/08/2023', 'type': 'Green bin, textiles, food bin and garden waste bin'}]}\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        user_uprn = kwargs.get(\"uprn\")\n        check_uprn(user_uprn)\n    \n        # UPRN is passed in via a cookie. Set cookies/params and GET the page\n        cookies = {\n            # 'JSESSIONID': '96F2A15C14569B2ED2BBEB140FE86532',\n            \"SVBINZONE\": f\"SOUTH%3AUPRN%40{user_uprn}\",\n        }\n        headers = {\n            \"Accept\": \"text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8\",\n            \"Accept-Language\": \"en-GB,en;q=0.7\",\n            \"Cache-Control\": \"max-age=0\",\n            \"Connection\": \"keep-alive\",\n            \"Referer\": \"https://eform.southoxon.gov.uk/ebase/BINZONE_DESKTOP.eb?SOVA_TAG=SOUTH&ebd=0&ebz=1_1668467255368\",\n            \"Sec-Fetch-Dest\": \"document\",\n            \"Sec-Fetch-Mode\": \"navigate\",\n            \"Sec-Fetch-Site\": \"same-origin\",\n            \"Sec-Fetch-User\": \"?1\",\n            \"Sec-GPC\": \"1\",\n            \"Upgrade-Insecure-Requests\": \"1\",\n            \"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/107.0.0.0 Safari/537.36\",\n        }\n        params = {\n            \"SOVA_TAG\": \"SOUTH\",\n            \"ebd\": \"0\",\n            # 'ebz':      '1_1668467255368',\n        }\n        requests.packages.urllib3.disable_warnings()\n        response = requests.get(\n            \"https://eform.southoxon.gov.uk/ebase/BINZONE_DESKTOP.eb\",\n            params=params,\n            headers=headers,\n            cookies=cookies,\n        )\n    \n        # Parse response text for super speedy finding\n        soup = BeautifulSoup(response.text, features=\"html.parser\")\n        soup.prettify()\n    \n        data = {\"bins\": []}\n    \n        # Page has slider info side by side, which are two instances of this class\n        for bin in soup.find_all(\"div\", {\"class\": \"binextra\"}):\n            bin_info = bin.text.split(\"-\")\n            try:\n                # No date validation since year isn't included on webpage\n                bin_date = get_next_occurrence_from_day_month(\n>                   datetime.strptime(bin_info[0].strip() + \" \" + datetime.today().strftime(\"%Y\"),\n                                      \"%A %d %B %Y\")).strftime(date_format)\n\nuk_bin_collection/uk_bin_collection/councils/SouthOxfordshireCouncil.py:64: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/_strptime.py:568: in _strptime_datetime\n    tt, fraction, gmtoff_fraction = _strptime(data_string, format)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndata_string = 'Your usual collection day is different this weekSaturday 2 September 2023'\nformat = '%A %d %B %Y'\n\n    def _strptime(data_string, format=\"%a %b %d %H:%M:%S %Y\"):\n        \"\"\"Return a 2-tuple consisting of a time struct and an int containing\n        the number of microseconds based on the input string and the\n        format string.\"\"\"\n    \n        for index, arg in enumerate([data_string, format]):\n            if not isinstance(arg, str):\n                msg = \"strptime() argument {} must be str, not {}\"\n                raise TypeError(msg.format(index, type(arg)))\n    \n        global _TimeRE_cache, _regex_cache\n        with _cache_lock:\n            locale_time = _TimeRE_cache.locale_time\n            if (_getlang() != locale_time.lang or\n                time.tzname != locale_time.tzname or\n                time.daylight != locale_time.daylight):\n                _TimeRE_cache = TimeRE()\n                _regex_cache.clear()\n                locale_time = _TimeRE_cache.locale_time\n            if len(_regex_cache) > _CACHE_MAX_SIZE:\n                _regex_cache.clear()\n            format_regex = _regex_cache.get(format)\n            if not format_regex:\n                try:\n                    format_regex = _TimeRE_cache.compile(format)\n                # KeyError raised when a bad format is found; can be specified as\n                # \\\\, in which case it was a stray % but with a space after it\n                except KeyError as err:\n                    bad_directive = err.args[0]\n                    if bad_directive == \"\\\\\":\n                        bad_directive = \"%\"\n                    del err\n                    raise ValueError(\"'%s' is a bad directive in format '%s'\" %\n                                        (bad_directive, format)) from None\n                # IndexError only occurs when the format string is \"%\"\n                except IndexError:\n                    raise ValueError(\"stray %% in format '%s'\" % format) from None\n                _regex_cache[format] = format_regex\n        found = format_regex.match(data_string)\n        if not found:\n>           raise ValueError(\"time data %r does not match format %r\" %\n                             (data_string, format))\nE           ValueError: time data 'Your usual collection day is different this weekSaturday 2 September 2023' does not match format '%A %d %B %Y'\n\n/opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/_strptime.py:349: ValueError\n\nDuring handling of the above exception, another exception occurred:\n\nrequest = <FixtureRequest for <Function test_scenario_outline[SouthOxfordshireCouncil]>>\n_pytest_bdd_example = {'council': 'SouthOxfordshireCouncil'}\n\n    @pytest.mark.usefixtures(*func_args)\n    def scenario_wrapper(request: FixtureRequest, _pytest_bdd_example: dict[str, str]) -> Any:\n        scenario = templated_scenario.render(_pytest_bdd_example)\n>       _execute_scenario(feature, scenario, request)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/pytest_bdd/scenario.py:187: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/pytest_bdd/scenario.py:157: in _execute_scenario\n    _execute_step_function(request, scenario, step, step_func)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/pytest_bdd/scenario.py:127: in _execute_step_function\n    return_value = call_fixture_func(fixturefunc=step_func, request=request, kwargs=kwargs)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\nuk_bin_collection/tests/step_defs/test_validate_council.py:62: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:58: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:71: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:59: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:70: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <SouthOxfordshireCouncil.CouncilClass object at 0x7f2227c9c400>\npage = ''\nkwargs = {'paon': None, 'postcode': None, 'uprn': '10033002851', 'usrn': None}\nuser_uprn = '10033002851', cookies = {'SVBINZONE': 'SOUTH%3AUPRN%4010033002851'}\nheaders = {'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8', 'Accept-Language': 'en-GB,en;q=0.7', 'Cache-Control': 'max-age=0', 'Connection': 'keep-alive', ...}\nparams = {'SOVA_TAG': 'SOUTH', 'ebd': '0'}, response = <Response [200]>\nsoup = <!DOCTYPE html>\n\n<html lang=\"EN\">\n<!-- \n Powered by Verj.io\n www.verj.io\n -->\n<head>\n<meta content=\"text/html; charset...\":null,\"end\":null},\"scrollClassIdentifiers\":null,\"scrollX\":null,\"scrollY\":null}' id=\"ebDynamic\"></div>\n</body>\n</html>\n\ndata = {'bins': [{'collectionDate': '25/08/2023', 'type': 'Green bin, textiles, food bin and garden waste bin'}]}\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        user_uprn = kwargs.get(\"uprn\")\n        check_uprn(user_uprn)\n    \n        # UPRN is passed in via a cookie. Set cookies/params and GET the page\n        cookies = {\n            # 'JSESSIONID': '96F2A15C14569B2ED2BBEB140FE86532',\n            \"SVBINZONE\": f\"SOUTH%3AUPRN%40{user_uprn}\",\n        }\n        headers = {\n            \"Accept\": \"text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8\",\n            \"Accept-Language\": \"en-GB,en;q=0.7\",\n            \"Cache-Control\": \"max-age=0\",\n            \"Connection\": \"keep-alive\",\n            \"Referer\": \"https://eform.southoxon.gov.uk/ebase/BINZONE_DESKTOP.eb?SOVA_TAG=SOUTH&ebd=0&ebz=1_1668467255368\",\n            \"Sec-Fetch-Dest\": \"document\",\n            \"Sec-Fetch-Mode\": \"navigate\",\n            \"Sec-Fetch-Site\": \"same-origin\",\n            \"Sec-Fetch-User\": \"?1\",\n            \"Sec-GPC\": \"1\",\n            \"Upgrade-Insecure-Requests\": \"1\",\n            \"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/107.0.0.0 Safari/537.36\",\n        }\n        params = {\n            \"SOVA_TAG\": \"SOUTH\",\n            \"ebd\": \"0\",\n            # 'ebz':      '1_1668467255368',\n        }\n        requests.packages.urllib3.disable_warnings()\n        response = requests.get(\n            \"https://eform.southoxon.gov.uk/ebase/BINZONE_DESKTOP.eb\",\n            params=params,\n            headers=headers,\n            cookies=cookies,\n        )\n    \n        # Parse response text for super speedy finding\n        soup = BeautifulSoup(response.text, features=\"html.parser\")\n        soup.prettify()\n    \n        data = {\"bins\": []}\n    \n        # Page has slider info side by side, which are two instances of this class\n        for bin in soup.find_all(\"div\", {\"class\": \"binextra\"}):\n            bin_info = bin.text.split(\"-\")\n            try:\n                # No date validation since year isn't included on webpage\n                bin_date = get_next_occurrence_from_day_month(\n                    datetime.strptime(bin_info[0].strip() + \" \" + datetime.today().strftime(\"%Y\"),\n                                      \"%A %d %B %Y\")).strftime(date_format)\n                bin_type = str.capitalize(bin_info[1].strip())\n            except Exception as ex:\n>               raise ValueError(f\"Error parsing bin data: {ex}\")\nE               ValueError: Error parsing bin data: time data 'Your usual collection day is different this weekSaturday 2 September 2023' does not match format '%A %d %B %Y'\n\nuk_bin_collection/uk_bin_collection/councils/SouthOxfordshireCouncil.py:68: ValueError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"ValueError: Error parsing bin data: time data 'Your usual collection day is different this weekSaturday 2 September 2023' does not match format '%A %d %B %Y'","statusTrace":"self = <SouthOxfordshireCouncil.CouncilClass object at 0x7f2227c9c400>\npage = ''\nkwargs = {'paon': None, 'postcode': None, 'uprn': '10033002851', 'usrn': None}\nuser_uprn = '10033002851', cookies = {'SVBINZONE': 'SOUTH%3AUPRN%4010033002851'}\nheaders = {'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8', 'Accept-Language': 'en-GB,en;q=0.7', 'Cache-Control': 'max-age=0', 'Connection': 'keep-alive', ...}\nparams = {'SOVA_TAG': 'SOUTH', 'ebd': '0'}, response = <Response [200]>\nsoup = <!DOCTYPE html>\n\n<html lang=\"EN\">\n<!-- \n Powered by Verj.io\n www.verj.io\n -->\n<head>\n<meta content=\"text/html; charset...\":null,\"end\":null},\"scrollClassIdentifiers\":null,\"scrollX\":null,\"scrollY\":null}' id=\"ebDynamic\"></div>\n</body>\n</html>\n\ndata = {'bins': [{'collectionDate': '25/08/2023', 'type': 'Green bin, textiles, food bin and garden waste bin'}]}\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        user_uprn = kwargs.get(\"uprn\")\n        check_uprn(user_uprn)\n    \n        # UPRN is passed in via a cookie. Set cookies/params and GET the page\n        cookies = {\n            # 'JSESSIONID': '96F2A15C14569B2ED2BBEB140FE86532',\n            \"SVBINZONE\": f\"SOUTH%3AUPRN%40{user_uprn}\",\n        }\n        headers = {\n            \"Accept\": \"text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8\",\n            \"Accept-Language\": \"en-GB,en;q=0.7\",\n            \"Cache-Control\": \"max-age=0\",\n            \"Connection\": \"keep-alive\",\n            \"Referer\": \"https://eform.southoxon.gov.uk/ebase/BINZONE_DESKTOP.eb?SOVA_TAG=SOUTH&ebd=0&ebz=1_1668467255368\",\n            \"Sec-Fetch-Dest\": \"document\",\n            \"Sec-Fetch-Mode\": \"navigate\",\n            \"Sec-Fetch-Site\": \"same-origin\",\n            \"Sec-Fetch-User\": \"?1\",\n            \"Sec-GPC\": \"1\",\n            \"Upgrade-Insecure-Requests\": \"1\",\n            \"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/107.0.0.0 Safari/537.36\",\n        }\n        params = {\n            \"SOVA_TAG\": \"SOUTH\",\n            \"ebd\": \"0\",\n            # 'ebz':      '1_1668467255368',\n        }\n        requests.packages.urllib3.disable_warnings()\n        response = requests.get(\n            \"https://eform.southoxon.gov.uk/ebase/BINZONE_DESKTOP.eb\",\n            params=params,\n            headers=headers,\n            cookies=cookies,\n        )\n    \n        # Parse response text for super speedy finding\n        soup = BeautifulSoup(response.text, features=\"html.parser\")\n        soup.prettify()\n    \n        data = {\"bins\": []}\n    \n        # Page has slider info side by side, which are two instances of this class\n        for bin in soup.find_all(\"div\", {\"class\": \"binextra\"}):\n            bin_info = bin.text.split(\"-\")\n            try:\n                # No date validation since year isn't included on webpage\n                bin_date = get_next_occurrence_from_day_month(\n>                   datetime.strptime(bin_info[0].strip() + \" \" + datetime.today().strftime(\"%Y\"),\n                                      \"%A %d %B %Y\")).strftime(date_format)\n\nuk_bin_collection/uk_bin_collection/councils/SouthOxfordshireCouncil.py:64: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/_strptime.py:568: in _strptime_datetime\n    tt, fraction, gmtoff_fraction = _strptime(data_string, format)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndata_string = 'Your usual collection day is different this weekSaturday 2 September 2023'\nformat = '%A %d %B %Y'\n\n    def _strptime(data_string, format=\"%a %b %d %H:%M:%S %Y\"):\n        \"\"\"Return a 2-tuple consisting of a time struct and an int containing\n        the number of microseconds based on the input string and the\n        format string.\"\"\"\n    \n        for index, arg in enumerate([data_string, format]):\n            if not isinstance(arg, str):\n                msg = \"strptime() argument {} must be str, not {}\"\n                raise TypeError(msg.format(index, type(arg)))\n    \n        global _TimeRE_cache, _regex_cache\n        with _cache_lock:\n            locale_time = _TimeRE_cache.locale_time\n            if (_getlang() != locale_time.lang or\n                time.tzname != locale_time.tzname or\n                time.daylight != locale_time.daylight):\n                _TimeRE_cache = TimeRE()\n                _regex_cache.clear()\n                locale_time = _TimeRE_cache.locale_time\n            if len(_regex_cache) > _CACHE_MAX_SIZE:\n                _regex_cache.clear()\n            format_regex = _regex_cache.get(format)\n            if not format_regex:\n                try:\n                    format_regex = _TimeRE_cache.compile(format)\n                # KeyError raised when a bad format is found; can be specified as\n                # \\\\, in which case it was a stray % but with a space after it\n                except KeyError as err:\n                    bad_directive = err.args[0]\n                    if bad_directive == \"\\\\\":\n                        bad_directive = \"%\"\n                    del err\n                    raise ValueError(\"'%s' is a bad directive in format '%s'\" %\n                                        (bad_directive, format)) from None\n                # IndexError only occurs when the format string is \"%\"\n                except IndexError:\n                    raise ValueError(\"stray %% in format '%s'\" % format) from None\n                _regex_cache[format] = format_regex\n        found = format_regex.match(data_string)\n        if not found:\n>           raise ValueError(\"time data %r does not match format %r\" %\n                             (data_string, format))\nE           ValueError: time data 'Your usual collection day is different this weekSaturday 2 September 2023' does not match format '%A %d %B %Y'\n\n/opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/_strptime.py:349: ValueError\n\nDuring handling of the above exception, another exception occurred:\n\nrequest = <FixtureRequest for <Function test_scenario_outline[SouthOxfordshireCouncil]>>\n_pytest_bdd_example = {'council': 'SouthOxfordshireCouncil'}\n\n    @pytest.mark.usefixtures(*func_args)\n    def scenario_wrapper(request: FixtureRequest, _pytest_bdd_example: dict[str, str]) -> Any:\n        scenario = templated_scenario.render(_pytest_bdd_example)\n>       _execute_scenario(feature, scenario, request)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/pytest_bdd/scenario.py:187: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/pytest_bdd/scenario.py:157: in _execute_scenario\n    _execute_step_function(request, scenario, step, step_func)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/pytest_bdd/scenario.py:127: in _execute_step_function\n    return_value = call_fixture_func(fixturefunc=step_func, request=request, kwargs=kwargs)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\nuk_bin_collection/tests/step_defs/test_validate_council.py:62: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:58: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:71: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:59: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:70: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <SouthOxfordshireCouncil.CouncilClass object at 0x7f2227c9c400>\npage = ''\nkwargs = {'paon': None, 'postcode': None, 'uprn': '10033002851', 'usrn': None}\nuser_uprn = '10033002851', cookies = {'SVBINZONE': 'SOUTH%3AUPRN%4010033002851'}\nheaders = {'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8', 'Accept-Language': 'en-GB,en;q=0.7', 'Cache-Control': 'max-age=0', 'Connection': 'keep-alive', ...}\nparams = {'SOVA_TAG': 'SOUTH', 'ebd': '0'}, response = <Response [200]>\nsoup = <!DOCTYPE html>\n\n<html lang=\"EN\">\n<!-- \n Powered by Verj.io\n www.verj.io\n -->\n<head>\n<meta content=\"text/html; charset...\":null,\"end\":null},\"scrollClassIdentifiers\":null,\"scrollX\":null,\"scrollY\":null}' id=\"ebDynamic\"></div>\n</body>\n</html>\n\ndata = {'bins': [{'collectionDate': '25/08/2023', 'type': 'Green bin, textiles, food bin and garden waste bin'}]}\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        user_uprn = kwargs.get(\"uprn\")\n        check_uprn(user_uprn)\n    \n        # UPRN is passed in via a cookie. Set cookies/params and GET the page\n        cookies = {\n            # 'JSESSIONID': '96F2A15C14569B2ED2BBEB140FE86532',\n            \"SVBINZONE\": f\"SOUTH%3AUPRN%40{user_uprn}\",\n        }\n        headers = {\n            \"Accept\": \"text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8\",\n            \"Accept-Language\": \"en-GB,en;q=0.7\",\n            \"Cache-Control\": \"max-age=0\",\n            \"Connection\": \"keep-alive\",\n            \"Referer\": \"https://eform.southoxon.gov.uk/ebase/BINZONE_DESKTOP.eb?SOVA_TAG=SOUTH&ebd=0&ebz=1_1668467255368\",\n            \"Sec-Fetch-Dest\": \"document\",\n            \"Sec-Fetch-Mode\": \"navigate\",\n            \"Sec-Fetch-Site\": \"same-origin\",\n            \"Sec-Fetch-User\": \"?1\",\n            \"Sec-GPC\": \"1\",\n            \"Upgrade-Insecure-Requests\": \"1\",\n            \"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/107.0.0.0 Safari/537.36\",\n        }\n        params = {\n            \"SOVA_TAG\": \"SOUTH\",\n            \"ebd\": \"0\",\n            # 'ebz':      '1_1668467255368',\n        }\n        requests.packages.urllib3.disable_warnings()\n        response = requests.get(\n            \"https://eform.southoxon.gov.uk/ebase/BINZONE_DESKTOP.eb\",\n            params=params,\n            headers=headers,\n            cookies=cookies,\n        )\n    \n        # Parse response text for super speedy finding\n        soup = BeautifulSoup(response.text, features=\"html.parser\")\n        soup.prettify()\n    \n        data = {\"bins\": []}\n    \n        # Page has slider info side by side, which are two instances of this class\n        for bin in soup.find_all(\"div\", {\"class\": \"binextra\"}):\n            bin_info = bin.text.split(\"-\")\n            try:\n                # No date validation since year isn't included on webpage\n                bin_date = get_next_occurrence_from_day_month(\n                    datetime.strptime(bin_info[0].strip() + \" \" + datetime.today().strftime(\"%Y\"),\n                                      \"%A %d %B %Y\")).strftime(date_format)\n                bin_type = str.capitalize(bin_info[1].strip())\n            except Exception as ex:\n>               raise ValueError(f\"Error parsing bin data: {ex}\")\nE               ValueError: Error parsing bin data: time data 'Your usual collection day is different this weekSaturday 2 September 2023' does not match format '%A %d %B %Y'\n\nuk_bin_collection/uk_bin_collection/councils/SouthOxfordshireCouncil.py:68: ValueError","steps":[{"name":"Given the council: SouthOxfordshireCouncil","time":{"start":1692666839810,"stop":1692666839811,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"When we scrape the data from SouthOxfordshireCouncil","time":{"start":1692666839811,"stop":1692666843266,"duration":3455},"status":"failed","statusMessage":"Error parsing bin data: time data 'Your usual collection day is different this weekSaturday 2 September 2023' does not match format '%A %d %B %Y'","statusTrace":"ValueError: Error parsing bin data: time data 'Your usual collection day is different this weekSaturday 2 September 2023' does not match format '%A %d %B %Y'\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[],"parameters":[],"stepsCount":2,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az354-270"},{"name":"thread","value":"2223-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"SouthOxfordshireCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":5,"broken":0,"skipped":0,"passed":37,"unknown":0,"total":42},"items":[{"uid":"e8d3e5057592425c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/869//#testresult/e8d3e5057592425c","status":"failed","statusDetails":"ValueError: Error parsing bin data: time data 'Your usual collection day is different this weekSaturday 2 September 2023' does not match format '%A %d %B %Y'","time":{"start":1692624321177,"stop":1692624324389,"duration":3212}},{"uid":"37d69bcab58f39db","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/867//#testresult/37d69bcab58f39db","status":"failed","statusDetails":"ValueError: Error parsing bin data: time data 'Your usual collection day is different this weekSaturday 2 September 2023' does not match format '%A %d %B %Y'","time":{"start":1692580370767,"stop":1692580374597,"duration":3830}},{"uid":"843648e9708406b4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/866//#testresult/843648e9708406b4","status":"passed","time":{"start":1692494160745,"stop":1692494163939,"duration":3194}},{"uid":"7fb04eecbd762960","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/865//#testresult/7fb04eecbd762960","status":"passed","time":{"start":1692407516587,"stop":1692407519861,"duration":3274}},{"uid":"6db67cbb5f483da6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/864//#testresult/6db67cbb5f483da6","status":"passed","time":{"start":1692321175340,"stop":1692321178664,"duration":3324}},{"uid":"252013c80e845b1c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/863//#testresult/252013c80e845b1c","status":"passed","time":{"start":1692294307799,"stop":1692294411341,"duration":103542}},{"uid":"6f1e4a06ec195e9e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/861//#testresult/6f1e4a06ec195e9e","status":"passed","time":{"start":1692234733887,"stop":1692234737516,"duration":3629}},{"uid":"c273e92c5853a17d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/860//#testresult/c273e92c5853a17d","status":"passed","time":{"start":1692208556222,"stop":1692208560446,"duration":4224}},{"uid":"3935b584bffc3c3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/859//#testresult/3935b584bffc3c3","status":"passed","time":{"start":1692148344002,"stop":1692148450591,"duration":106589}},{"uid":"2ad9b1b94b41b7e7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/858//#testresult/2ad9b1b94b41b7e7","status":"passed","time":{"start":1692061979999,"stop":1692061984232,"duration":4233}},{"uid":"89f29b3519c0e60e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/856//#testresult/89f29b3519c0e60e","status":"passed","time":{"start":1691975618991,"stop":1691975739970,"duration":120979}},{"uid":"a3d71570adf0ddb5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/855//#testresult/a3d71570adf0ddb5","status":"passed","time":{"start":1691889353743,"stop":1691889474872,"duration":121129}},{"uid":"d7ccb7bd1b6f4400","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/854//#testresult/d7ccb7bd1b6f4400","status":"passed","time":{"start":1691802673418,"stop":1691802676847,"duration":3429}},{"uid":"3f574bb6661d5286","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/853//#testresult/3f574bb6661d5286","status":"passed","time":{"start":1691716291969,"stop":1691716396322,"duration":104353}},{"uid":"5653f051a3bdda10","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/852//#testresult/5653f051a3bdda10","status":"passed","time":{"start":1691630848145,"stop":1691630851605,"duration":3460}},{"uid":"d9dbedcecfe192d6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/851//#testresult/d9dbedcecfe192d6","status":"passed","time":{"start":1691612013728,"stop":1691612016916,"duration":3188}},{"uid":"32ffab40ea6d74b4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/847//#testresult/32ffab40ea6d74b4","status":"passed","time":{"start":1691544402378,"stop":1691544405623,"duration":3245}},{"uid":"cea41949de293be1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/846//#testresult/cea41949de293be1","status":"passed","time":{"start":1691457793155,"stop":1691457797575,"duration":4420}},{"uid":"1e19470fb393f3a7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/845//#testresult/1e19470fb393f3a7","status":"passed","time":{"start":1691371677944,"stop":1691371781262,"duration":103318}},{"uid":"96d7f8c4a4cdf0b4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/844//#testresult/96d7f8c4a4cdf0b4","status":"passed","time":{"start":1691284867609,"stop":1691284872009,"duration":4400}}]},"tags":[]},"source":"16f59015e163ff8c.json","parameterValues":["SouthOxfordshireCouncil"]}