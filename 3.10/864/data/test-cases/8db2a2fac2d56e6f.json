{"uid":"8db2a2fac2d56e6f","name":"Validate Council Output [WakefieldCityCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"532d749d88b4b8fb0bc694b350a3d71a","time":{"start":1692321234388,"stop":1692321235092,"duration":704},"status":"failed","statusMessage":"IndexError: list index out of range","statusTrace":"request = <FixtureRequest for <Function test_scenario_outline[WakefieldCityCouncil]>>\n_pytest_bdd_example = {'council': 'WakefieldCityCouncil'}\n\n    @pytest.mark.usefixtures(*func_args)\n    def scenario_wrapper(request: FixtureRequest, _pytest_bdd_example: dict[str, str]) -> Any:\n        scenario = templated_scenario.render(_pytest_bdd_example)\n>       _execute_scenario(feature, scenario, request)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/pytest_bdd/scenario.py:187: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/pytest_bdd/scenario.py:157: in _execute_scenario\n    _execute_step_function(request, scenario, step, step_func)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/pytest_bdd/scenario.py:127: in _execute_step_function\n    return_value = call_fixture_func(fixturefunc=step_func, request=request, kwargs=kwargs)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\nuk_bin_collection/tests/step_defs/test_validate_council.py:62: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:58: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:71: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:59: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:70: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <WakefieldCityCouncil.CouncilClass object at 0x7f62f4bb42b0>, page = ''\nkwargs = {'paon': None, 'postcode': None, 'uprn': '63035490', 'usrn': None}\nuser_uprn = '63035490'\nheaders = {'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36'}\nparams = {'uprn': '63035490'}\ns = <requests.sessions.Session object at 0x7f62f4bb7130>\nwakefield_session = <Response [200]>, response = <Response [404]>\nsoup = <!DOCTYPE html>\n\n<html lang=\"en-gb\">\n<head>\n<title>Page not found - Wakefield Council</title>\n<meta charset=\"utf-8\"/>\n...rce?SWJIYLWA=719d34d31c8e3a6e6fffd425f7e032f3&amp;ns=2&amp;cb=39155596\" type=\"text/javascript\"></script></body>\n</html>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        # UPRN passed in as an argument\n        user_uprn = kwargs.get(\"uprn\")\n        check_uprn(user_uprn)\n    \n        # cookies = {\n        #    'visid_incap_2049675':    'xZCc/tFgSzaFmZD7XkN3koJGuGMAAAAAQUIPAAAAAAB7QGC8d+Jmlk0i3y06Zer6',\n        #    'WSS_FullScreenMode':     'false',\n        #    'incap_ses_1184_2049675': 'a2ZQQ9lCM3wa4+23mWpuEHnAuGMAAAAAfl4ebLXAvItl6dCfbMEWoQ==',\n        # }\n        headers = {\n            \"User-Agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36\"\n        }\n    \n        params = {\n            \"uprn\": user_uprn,\n        }\n    \n        requests.packages.urllib3.disable_warnings()\n        s = requests.Session()  # gets cookies and keeps them\n    \n        wakefield_session = s.get(\"https://www.wakefield.gov.uk/\", headers=headers)\n        # Make a GET for the data with correct params and cookies\n        response = s.get(\n            \"https://www.wakefield.gov.uk/site/Where-I-Live-Results\",\n            params=params,\n            headers=headers,\n            verify=False,\n        )\n    \n        # Have BS4 process the page\n        soup = BeautifulSoup(response.text, features=\"html.parser\")\n        soup.prettify()\n        data = {\"bins\": []}\n    \n        # Start a tuple for collections with (TYPE:DATE). Add the first for the bin types since they're separate\n        # elements on the page. All dates are parsed from text to datetime\n        collections = [\n            (\n                \"Household waste\",\n                datetime.strptime(\n>                   soup.select(\n                        \"#ctl00_PlaceHolderMain_Waste_output > div:nth-child(4) > \"\n                        \"div:nth-child(3) > div:nth-child(2)\"\n                    )[0].text,\n                    \"%d/%m/%Y\",\n                ),\n            ),\n            (\n                \"Mixed recycling\",\n                datetime.strptime(\n                    soup.select(\n                        \"#ctl00_PlaceHolderMain_Waste_output > div:nth-child(6) > \"\n                        \"div:nth-child(3) > div:nth-child(2)\"\n                    )[0].text,\n                    \"%d/%m/%Y\",\n                ),\n            ),\n        ]\nE       IndexError: list index out of range\n\nuk_bin_collection/uk_bin_collection/councils/WakefieldCityCouncil.py:59: IndexError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"IndexError: list index out of range","statusTrace":"request = <FixtureRequest for <Function test_scenario_outline[WakefieldCityCouncil]>>\n_pytest_bdd_example = {'council': 'WakefieldCityCouncil'}\n\n    @pytest.mark.usefixtures(*func_args)\n    def scenario_wrapper(request: FixtureRequest, _pytest_bdd_example: dict[str, str]) -> Any:\n        scenario = templated_scenario.render(_pytest_bdd_example)\n>       _execute_scenario(feature, scenario, request)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/pytest_bdd/scenario.py:187: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/pytest_bdd/scenario.py:157: in _execute_scenario\n    _execute_step_function(request, scenario, step, step_func)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/pytest_bdd/scenario.py:127: in _execute_step_function\n    return_value = call_fixture_func(fixturefunc=step_func, request=request, kwargs=kwargs)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\nuk_bin_collection/tests/step_defs/test_validate_council.py:62: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:58: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:71: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:59: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:70: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <WakefieldCityCouncil.CouncilClass object at 0x7f62f4bb42b0>, page = ''\nkwargs = {'paon': None, 'postcode': None, 'uprn': '63035490', 'usrn': None}\nuser_uprn = '63035490'\nheaders = {'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36'}\nparams = {'uprn': '63035490'}\ns = <requests.sessions.Session object at 0x7f62f4bb7130>\nwakefield_session = <Response [200]>, response = <Response [404]>\nsoup = <!DOCTYPE html>\n\n<html lang=\"en-gb\">\n<head>\n<title>Page not found - Wakefield Council</title>\n<meta charset=\"utf-8\"/>\n...rce?SWJIYLWA=719d34d31c8e3a6e6fffd425f7e032f3&amp;ns=2&amp;cb=39155596\" type=\"text/javascript\"></script></body>\n</html>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        # UPRN passed in as an argument\n        user_uprn = kwargs.get(\"uprn\")\n        check_uprn(user_uprn)\n    \n        # cookies = {\n        #    'visid_incap_2049675':    'xZCc/tFgSzaFmZD7XkN3koJGuGMAAAAAQUIPAAAAAAB7QGC8d+Jmlk0i3y06Zer6',\n        #    'WSS_FullScreenMode':     'false',\n        #    'incap_ses_1184_2049675': 'a2ZQQ9lCM3wa4+23mWpuEHnAuGMAAAAAfl4ebLXAvItl6dCfbMEWoQ==',\n        # }\n        headers = {\n            \"User-Agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36\"\n        }\n    \n        params = {\n            \"uprn\": user_uprn,\n        }\n    \n        requests.packages.urllib3.disable_warnings()\n        s = requests.Session()  # gets cookies and keeps them\n    \n        wakefield_session = s.get(\"https://www.wakefield.gov.uk/\", headers=headers)\n        # Make a GET for the data with correct params and cookies\n        response = s.get(\n            \"https://www.wakefield.gov.uk/site/Where-I-Live-Results\",\n            params=params,\n            headers=headers,\n            verify=False,\n        )\n    \n        # Have BS4 process the page\n        soup = BeautifulSoup(response.text, features=\"html.parser\")\n        soup.prettify()\n        data = {\"bins\": []}\n    \n        # Start a tuple for collections with (TYPE:DATE). Add the first for the bin types since they're separate\n        # elements on the page. All dates are parsed from text to datetime\n        collections = [\n            (\n                \"Household waste\",\n                datetime.strptime(\n>                   soup.select(\n                        \"#ctl00_PlaceHolderMain_Waste_output > div:nth-child(4) > \"\n                        \"div:nth-child(3) > div:nth-child(2)\"\n                    )[0].text,\n                    \"%d/%m/%Y\",\n                ),\n            ),\n            (\n                \"Mixed recycling\",\n                datetime.strptime(\n                    soup.select(\n                        \"#ctl00_PlaceHolderMain_Waste_output > div:nth-child(6) > \"\n                        \"div:nth-child(3) > div:nth-child(2)\"\n                    )[0].text,\n                    \"%d/%m/%Y\",\n                ),\n            ),\n        ]\nE       IndexError: list index out of range\n\nuk_bin_collection/uk_bin_collection/councils/WakefieldCityCouncil.py:59: IndexError","steps":[{"name":"Given the council: WakefieldCityCouncil","time":{"start":1692321234388,"stop":1692321234389,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"When we scrape the data from WakefieldCityCouncil","time":{"start":1692321234389,"stop":1692321235092,"duration":703},"status":"failed","statusMessage":"list index out of range","statusTrace":"IndexError: list index out of range\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[],"parameters":[],"stepsCount":2,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az1032-974"},{"name":"thread","value":"2119-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"WakefieldCityCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":37,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":37},"items":[{"uid":"ba95f989b45f2c6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/863//#testresult/ba95f989b45f2c6","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1692294443912,"stop":1692294445142,"duration":1230}},{"uid":"85cb18322b541ce6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/861//#testresult/85cb18322b541ce6","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1692234835874,"stop":1692234836979,"duration":1105}},{"uid":"94eb3888d8bf4b7e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/860//#testresult/94eb3888d8bf4b7e","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1692208710219,"stop":1692208711408,"duration":1189}},{"uid":"4f7e6984c0d02c33","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/859//#testresult/4f7e6984c0d02c33","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1692148524619,"stop":1692148525538,"duration":919}},{"uid":"dc5524181a2c2300","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/858//#testresult/dc5524181a2c2300","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1692062134322,"stop":1692062135329,"duration":1007}},{"uid":"6859c75b2dc4104","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/856//#testresult/6859c75b2dc4104","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1691975791767,"stop":1691975792711,"duration":944}},{"uid":"30fbe70b86e7369a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/855//#testresult/30fbe70b86e7369a","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1691889582800,"stop":1691889583851,"duration":1051}},{"uid":"f007e23d5a1178f8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/854//#testresult/f007e23d5a1178f8","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1691802828155,"stop":1691802828872,"duration":717}},{"uid":"26f3df987260e2e8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/853//#testresult/26f3df987260e2e8","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1691716545844,"stop":1691716546691,"duration":847}},{"uid":"760ce2da6900a1bd","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/852//#testresult/760ce2da6900a1bd","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1691630979509,"stop":1691630980724,"duration":1215}},{"uid":"3c80acb4e052f84a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/851//#testresult/3c80acb4e052f84a","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1691612112779,"stop":1691612113488,"duration":709}},{"uid":"bf985251d408a4e6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/847//#testresult/bf985251d408a4e6","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1691544524725,"stop":1691544525929,"duration":1204}},{"uid":"aaca1578ed6bc39f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/846//#testresult/aaca1578ed6bc39f","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1691457938573,"stop":1691457939443,"duration":870}},{"uid":"b6a883329a9e437c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/845//#testresult/b6a883329a9e437c","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1691371789336,"stop":1691371790526,"duration":1190}},{"uid":"b25e66e688becfd2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/844//#testresult/b25e66e688becfd2","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1691285031126,"stop":1691285032082,"duration":956}},{"uid":"84acab2c67b1f692","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/843//#testresult/84acab2c67b1f692","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1691198719274,"stop":1691198720004,"duration":730}},{"uid":"dfd6346ee65fb2a7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/842//#testresult/dfd6346ee65fb2a7","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1691112519042,"stop":1691112521111,"duration":2069}},{"uid":"b622dce1e03c3d73","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/841//#testresult/b622dce1e03c3d73","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1691026104835,"stop":1691026106084,"duration":1249}},{"uid":"90c94eb9788d5a5e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/840//#testresult/90c94eb9788d5a5e","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1690939543582,"stop":1690939544528,"duration":946}},{"uid":"a1c530e17ac85791","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/839//#testresult/a1c530e17ac85791","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1690854235100,"stop":1690854235846,"duration":746}}]},"tags":[]},"source":"8db2a2fac2d56e6f.json","parameterValues":["WakefieldCityCouncil"]}