{"uid":"214aedb63cd3811a","name":"Validate Council Output [BexleyCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"b14d94c00a7a02b15ede5862fe9627b6","time":{"start":1694049153159,"stop":1694049153726,"duration":567},"status":"failed","statusMessage":"ValueError: Error parsing API. Please check your email is correct and registered on the @Home app.","statusTrace":"request = <FixtureRequest for <Function test_scenario_outline[BexleyCouncil]>>\n_pytest_bdd_example = {'council': 'BexleyCouncil'}\n\n    @pytest.mark.usefixtures(*func_args)\n    def scenario_wrapper(request: FixtureRequest, _pytest_bdd_example: dict[str, str]) -> Any:\n        scenario = templated_scenario.render(_pytest_bdd_example)\n>       _execute_scenario(feature, scenario, request)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/pytest_bdd/scenario.py:187: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/pytest_bdd/scenario.py:157: in _execute_scenario\n    _execute_step_function(request, scenario, step, step_func)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/pytest_bdd/scenario.py:127: in _execute_step_function\n    return_value = call_fixture_func(fixturefunc=step_func, request=request, kwargs=kwargs)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\nuk_bin_collection/tests/step_defs/test_validate_council.py:62: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:58: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:71: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:59: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:70: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <BexleyCouncil.CouncilClass object at 0x7f8c45283c40>, page = ''\nkwargs = {'paon': None, 'postcode': None, 'uprn': 'spamstorage@live.co.uk', 'usrn': None}\nuser_email = 'spamstorage@live.co.uk'\nheaders = {'Connection': 'Keep-Alive', 'X-country': 'gb', 'X-email': 'spamstorage@live.co.uk'}\nresponse = <Response [400]>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        # User email from @Home app as UPRN\n        user_email = kwargs.get(\"uprn\")\n        headers = {\n            \"X-country\": \"gb\",\n            \"X-email\": user_email,\n            \"Connection\": \"Keep-Alive\",\n        }\n    \n        # Sniffed from the app\n        requests.packages.urllib3.disable_warnings()\n        response = requests.get(\n            \"https://services.athomeapp.net/ServiceData/GetUserRoundJson\",\n            headers=headers,\n        )\n    \n        # 200 is OK. Sometimes it times out and gives this, but I'm not parsing HTTP codes\n        if response.status_code != 200:\n>           raise ValueError(\n                \"Error parsing API. Please check your email is correct and registered on the @Home app.\"\n            )\nE           ValueError: Error parsing API. Please check your email is correct and registered on the @Home app.\n\nuk_bin_collection/uk_bin_collection/councils/BexleyCouncil.py:34: ValueError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"ValueError: Error parsing API. Please check your email is correct and registered on the @Home app.","statusTrace":"request = <FixtureRequest for <Function test_scenario_outline[BexleyCouncil]>>\n_pytest_bdd_example = {'council': 'BexleyCouncil'}\n\n    @pytest.mark.usefixtures(*func_args)\n    def scenario_wrapper(request: FixtureRequest, _pytest_bdd_example: dict[str, str]) -> Any:\n        scenario = templated_scenario.render(_pytest_bdd_example)\n>       _execute_scenario(feature, scenario, request)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/pytest_bdd/scenario.py:187: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/pytest_bdd/scenario.py:157: in _execute_scenario\n    _execute_step_function(request, scenario, step, step_func)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/pytest_bdd/scenario.py:127: in _execute_step_function\n    return_value = call_fixture_func(fixturefunc=step_func, request=request, kwargs=kwargs)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\nuk_bin_collection/tests/step_defs/test_validate_council.py:62: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:58: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:71: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:59: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:70: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <BexleyCouncil.CouncilClass object at 0x7f8c45283c40>, page = ''\nkwargs = {'paon': None, 'postcode': None, 'uprn': 'spamstorage@live.co.uk', 'usrn': None}\nuser_email = 'spamstorage@live.co.uk'\nheaders = {'Connection': 'Keep-Alive', 'X-country': 'gb', 'X-email': 'spamstorage@live.co.uk'}\nresponse = <Response [400]>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        # User email from @Home app as UPRN\n        user_email = kwargs.get(\"uprn\")\n        headers = {\n            \"X-country\": \"gb\",\n            \"X-email\": user_email,\n            \"Connection\": \"Keep-Alive\",\n        }\n    \n        # Sniffed from the app\n        requests.packages.urllib3.disable_warnings()\n        response = requests.get(\n            \"https://services.athomeapp.net/ServiceData/GetUserRoundJson\",\n            headers=headers,\n        )\n    \n        # 200 is OK. Sometimes it times out and gives this, but I'm not parsing HTTP codes\n        if response.status_code != 200:\n>           raise ValueError(\n                \"Error parsing API. Please check your email is correct and registered on the @Home app.\"\n            )\nE           ValueError: Error parsing API. Please check your email is correct and registered on the @Home app.\n\nuk_bin_collection/uk_bin_collection/councils/BexleyCouncil.py:34: ValueError","steps":[{"name":"Given the council: BexleyCouncil","time":{"start":1694049153159,"stop":1694049153160,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"When we scrape the data from BexleyCouncil","time":{"start":1694049153160,"stop":1694049153726,"duration":566},"status":"failed","statusMessage":"Error parsing API. Please check your email is correct and registered on the @Home app.","statusTrace":"ValueError: Error parsing API. Please check your email is correct and registered on the @Home app.\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az244-550"},{"name":"thread","value":"2075-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"BexleyCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":6,"broken":0,"skipped":0,"passed":52,"unknown":0,"total":58},"items":[{"uid":"ecb4fb8abc5dd1bc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/887//#testresult/ecb4fb8abc5dd1bc","status":"failed","statusDetails":"ValueError: Error parsing API. Please check your email is correct and registered on the @Home app.","time":{"start":1693962733398,"stop":1693962733842,"duration":444}},{"uid":"8a0359d3f45795d8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/885//#testresult/8a0359d3f45795d8","status":"failed","statusDetails":"ValueError: Error parsing API. Please check your email is correct and registered on the @Home app.","time":{"start":1693876270464,"stop":1693876271098,"duration":634}},{"uid":"61a4cb5530dadd0c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/884//#testresult/61a4cb5530dadd0c","status":"passed","time":{"start":1693790000311,"stop":1693790001413,"duration":1102}},{"uid":"1cc7cbcccb93fad9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/883//#testresult/1cc7cbcccb93fad9","status":"passed","time":{"start":1693703751320,"stop":1693703752146,"duration":826}},{"uid":"a94c666f67556679","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/882//#testresult/a94c666f67556679","status":"passed","time":{"start":1693616990766,"stop":1693616991825,"duration":1059}},{"uid":"c53e3468ea51b62c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/881//#testresult/c53e3468ea51b62c","status":"passed","time":{"start":1693531002708,"stop":1693531003605,"duration":897}},{"uid":"9c77cd52fb4f438a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/880//#testresult/9c77cd52fb4f438a","status":"passed","time":{"start":1693444346376,"stop":1693444347383,"duration":1007}},{"uid":"2c8b67d59653a904","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/879//#testresult/2c8b67d59653a904","status":"passed","time":{"start":1693357945970,"stop":1693357946797,"duration":827}},{"uid":"7be8d58455bd82f1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/878//#testresult/7be8d58455bd82f1","status":"passed","time":{"start":1693271539393,"stop":1693271540372,"duration":979}},{"uid":"72f876835e9f38c1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/877//#testresult/72f876835e9f38c1","status":"passed","time":{"start":1693185165274,"stop":1693185166356,"duration":1082}},{"uid":"6490ce353da5222e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/876//#testresult/6490ce353da5222e","status":"passed","time":{"start":1693098932902,"stop":1693098933718,"duration":816}},{"uid":"92d0da9b52692849","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/875//#testresult/92d0da9b52692849","status":"passed","time":{"start":1693012149839,"stop":1693012150708,"duration":869}},{"uid":"2cbd2e2653a3c69a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/874//#testresult/2cbd2e2653a3c69a","status":"passed","time":{"start":1692925933078,"stop":1692925934042,"duration":964}},{"uid":"a83f3d3d22753470","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/873//#testresult/a83f3d3d22753470","status":"passed","time":{"start":1692839425272,"stop":1692839426048,"duration":776}},{"uid":"6c6c9433ee849901","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/871//#testresult/6c6c9433ee849901","status":"passed","time":{"start":1692753039199,"stop":1692753039972,"duration":773}},{"uid":"2fbaec49cda2672e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/870//#testresult/2fbaec49cda2672e","status":"passed","time":{"start":1692666683470,"stop":1692666684188,"duration":718}},{"uid":"f7fedc41548996c6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/869//#testresult/f7fedc41548996c6","status":"passed","time":{"start":1692624195000,"stop":1692624195841,"duration":841}},{"uid":"1c0584c4582992bc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/867//#testresult/1c0584c4582992bc","status":"passed","time":{"start":1692580234880,"stop":1692580235627,"duration":747}},{"uid":"ebbd9166856a5de7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/866//#testresult/ebbd9166856a5de7","status":"passed","time":{"start":1692494007600,"stop":1692494008509,"duration":909}},{"uid":"38898ac3217eda8b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/865//#testresult/38898ac3217eda8b","status":"passed","time":{"start":1692407289589,"stop":1692407290551,"duration":962}}]},"tags":[]},"source":"214aedb63cd3811a.json","parameterValues":["BexleyCouncil"]}