{"uid":"48ed53642cbe9637","name":"Validate Council Output [WakefieldCityCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"532d749d88b4b8fb0bc694b350a3d71a","time":{"start":1694049462797,"stop":1694049463644,"duration":847},"status":"failed","statusMessage":"IndexError: list index out of range","statusTrace":"request = <FixtureRequest for <Function test_scenario_outline[WakefieldCityCouncil]>>\n_pytest_bdd_example = {'council': 'WakefieldCityCouncil'}\n\n    @pytest.mark.usefixtures(*func_args)\n    def scenario_wrapper(request: FixtureRequest, _pytest_bdd_example: dict[str, str]) -> Any:\n        scenario = templated_scenario.render(_pytest_bdd_example)\n>       _execute_scenario(feature, scenario, request)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/pytest_bdd/scenario.py:187: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/pytest_bdd/scenario.py:157: in _execute_scenario\n    _execute_step_function(request, scenario, step, step_func)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/pytest_bdd/scenario.py:127: in _execute_step_function\n    return_value = call_fixture_func(fixturefunc=step_func, request=request, kwargs=kwargs)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\nuk_bin_collection/tests/step_defs/test_validate_council.py:62: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:58: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:71: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:59: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:70: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <WakefieldCityCouncil.CouncilClass object at 0x7fd4e63d0910>, page = ''\nkwargs = {'paon': None, 'postcode': None, 'uprn': '63035490', 'usrn': None}\nuser_uprn = '63035490'\nheaders = {'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36'}\nparams = {'uprn': '63035490'}\ns = <requests.sessions.Session object at 0x7fd4e63d1b10>\nwakefield_session = <Response [200]>, response = <Response [404]>\nsoup = <!DOCTYPE html>\n\n<html lang=\"en-gb\">\n<head>\n<title>Page not found - Wakefield Council</title>\n<meta charset=\"utf-8\"/>\n...e?SWJIYLWA=719d34d31c8e3a6e6fffd425f7e032f3&amp;ns=2&amp;cb=1970334045\" type=\"text/javascript\"></script></body>\n</html>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        # UPRN passed in as an argument\n        user_uprn = kwargs.get(\"uprn\")\n        check_uprn(user_uprn)\n    \n        # cookies = {\n        #    'visid_incap_2049675':    'xZCc/tFgSzaFmZD7XkN3koJGuGMAAAAAQUIPAAAAAAB7QGC8d+Jmlk0i3y06Zer6',\n        #    'WSS_FullScreenMode':     'false',\n        #    'incap_ses_1184_2049675': 'a2ZQQ9lCM3wa4+23mWpuEHnAuGMAAAAAfl4ebLXAvItl6dCfbMEWoQ==',\n        # }\n        headers = {\n            \"User-Agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36\"\n        }\n    \n        params = {\n            \"uprn\": user_uprn,\n        }\n    \n        requests.packages.urllib3.disable_warnings()\n        s = requests.Session()  # gets cookies and keeps them\n    \n        wakefield_session = s.get(\"https://www.wakefield.gov.uk/\", headers=headers)\n        # Make a GET for the data with correct params and cookies\n        response = s.get(\n            \"https://www.wakefield.gov.uk/site/Where-I-Live-Results\",\n            params=params,\n            headers=headers,\n            verify=False,\n        )\n    \n        # Have BS4 process the page\n        soup = BeautifulSoup(response.text, features=\"html.parser\")\n        soup.prettify()\n        data = {\"bins\": []}\n    \n        # Start a tuple for collections with (TYPE:DATE). Add the first for the bin types since they're separate\n        # elements on the page. All dates are parsed from text to datetime\n        collections = [\n            (\n                \"Household waste\",\n                datetime.strptime(\n>                   soup.select(\n                        \"#ctl00_PlaceHolderMain_Waste_output > div:nth-child(4) > \"\n                        \"div:nth-child(3) > div:nth-child(2)\"\n                    )[0].text,\n                    \"%d/%m/%Y\",\n                ),\n            ),\n            (\n                \"Mixed recycling\",\n                datetime.strptime(\n                    soup.select(\n                        \"#ctl00_PlaceHolderMain_Waste_output > div:nth-child(6) > \"\n                        \"div:nth-child(3) > div:nth-child(2)\"\n                    )[0].text,\n                    \"%d/%m/%Y\",\n                ),\n            ),\n        ]\nE       IndexError: list index out of range\n\nuk_bin_collection/uk_bin_collection/councils/WakefieldCityCouncil.py:59: IndexError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"IndexError: list index out of range","statusTrace":"request = <FixtureRequest for <Function test_scenario_outline[WakefieldCityCouncil]>>\n_pytest_bdd_example = {'council': 'WakefieldCityCouncil'}\n\n    @pytest.mark.usefixtures(*func_args)\n    def scenario_wrapper(request: FixtureRequest, _pytest_bdd_example: dict[str, str]) -> Any:\n        scenario = templated_scenario.render(_pytest_bdd_example)\n>       _execute_scenario(feature, scenario, request)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/pytest_bdd/scenario.py:187: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/pytest_bdd/scenario.py:157: in _execute_scenario\n    _execute_step_function(request, scenario, step, step_func)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/pytest_bdd/scenario.py:127: in _execute_step_function\n    return_value = call_fixture_func(fixturefunc=step_func, request=request, kwargs=kwargs)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\nuk_bin_collection/tests/step_defs/test_validate_council.py:62: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:58: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:71: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:59: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:70: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <WakefieldCityCouncil.CouncilClass object at 0x7fd4e63d0910>, page = ''\nkwargs = {'paon': None, 'postcode': None, 'uprn': '63035490', 'usrn': None}\nuser_uprn = '63035490'\nheaders = {'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36'}\nparams = {'uprn': '63035490'}\ns = <requests.sessions.Session object at 0x7fd4e63d1b10>\nwakefield_session = <Response [200]>, response = <Response [404]>\nsoup = <!DOCTYPE html>\n\n<html lang=\"en-gb\">\n<head>\n<title>Page not found - Wakefield Council</title>\n<meta charset=\"utf-8\"/>\n...e?SWJIYLWA=719d34d31c8e3a6e6fffd425f7e032f3&amp;ns=2&amp;cb=1970334045\" type=\"text/javascript\"></script></body>\n</html>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        # UPRN passed in as an argument\n        user_uprn = kwargs.get(\"uprn\")\n        check_uprn(user_uprn)\n    \n        # cookies = {\n        #    'visid_incap_2049675':    'xZCc/tFgSzaFmZD7XkN3koJGuGMAAAAAQUIPAAAAAAB7QGC8d+Jmlk0i3y06Zer6',\n        #    'WSS_FullScreenMode':     'false',\n        #    'incap_ses_1184_2049675': 'a2ZQQ9lCM3wa4+23mWpuEHnAuGMAAAAAfl4ebLXAvItl6dCfbMEWoQ==',\n        # }\n        headers = {\n            \"User-Agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36\"\n        }\n    \n        params = {\n            \"uprn\": user_uprn,\n        }\n    \n        requests.packages.urllib3.disable_warnings()\n        s = requests.Session()  # gets cookies and keeps them\n    \n        wakefield_session = s.get(\"https://www.wakefield.gov.uk/\", headers=headers)\n        # Make a GET for the data with correct params and cookies\n        response = s.get(\n            \"https://www.wakefield.gov.uk/site/Where-I-Live-Results\",\n            params=params,\n            headers=headers,\n            verify=False,\n        )\n    \n        # Have BS4 process the page\n        soup = BeautifulSoup(response.text, features=\"html.parser\")\n        soup.prettify()\n        data = {\"bins\": []}\n    \n        # Start a tuple for collections with (TYPE:DATE). Add the first for the bin types since they're separate\n        # elements on the page. All dates are parsed from text to datetime\n        collections = [\n            (\n                \"Household waste\",\n                datetime.strptime(\n>                   soup.select(\n                        \"#ctl00_PlaceHolderMain_Waste_output > div:nth-child(4) > \"\n                        \"div:nth-child(3) > div:nth-child(2)\"\n                    )[0].text,\n                    \"%d/%m/%Y\",\n                ),\n            ),\n            (\n                \"Mixed recycling\",\n                datetime.strptime(\n                    soup.select(\n                        \"#ctl00_PlaceHolderMain_Waste_output > div:nth-child(6) > \"\n                        \"div:nth-child(3) > div:nth-child(2)\"\n                    )[0].text,\n                    \"%d/%m/%Y\",\n                ),\n            ),\n        ]\nE       IndexError: list index out of range\n\nuk_bin_collection/uk_bin_collection/councils/WakefieldCityCouncil.py:59: IndexError","steps":[{"name":"Given the council: WakefieldCityCouncil","time":{"start":1694049462798,"stop":1694049462798,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"When we scrape the data from WakefieldCityCouncil","time":{"start":1694049462799,"stop":1694049463644,"duration":845},"status":"failed","statusMessage":"list index out of range","statusTrace":"IndexError: list index out of range\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az244-550"},{"name":"thread","value":"2078-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"WakefieldCityCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":58,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":58},"items":[{"uid":"2e5dcae833b51e29","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/887//#testresult/2e5dcae833b51e29","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1693963130266,"stop":1693963131068,"duration":802}},{"uid":"98064e1ec0feb5c8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/885//#testresult/98064e1ec0feb5c8","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1693876604091,"stop":1693876605080,"duration":989}},{"uid":"270c330344de78e7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/884//#testresult/270c330344de78e7","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1693790323159,"stop":1693790324863,"duration":1704}},{"uid":"898b401582889f18","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/883//#testresult/898b401582889f18","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1693704137783,"stop":1693704138741,"duration":958}},{"uid":"7fc661ce8b3ad36","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/882//#testresult/7fc661ce8b3ad36","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1693617380303,"stop":1693617381169,"duration":866}},{"uid":"d9c51b28d469dbcc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/881//#testresult/d9c51b28d469dbcc","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1693531287890,"stop":1693531288736,"duration":846}},{"uid":"2bfe5a451f9239","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/880//#testresult/2bfe5a451f9239","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1693444667457,"stop":1693444668646,"duration":1189}},{"uid":"6a3a006253a38f68","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/879//#testresult/6a3a006253a38f68","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1693358193808,"stop":1693358194805,"duration":997}},{"uid":"5e630e181852407b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/878//#testresult/5e630e181852407b","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1693271962007,"stop":1693271963149,"duration":1142}},{"uid":"764c81b7066bb3fc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/877//#testresult/764c81b7066bb3fc","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1693185626238,"stop":1693185627870,"duration":1632}},{"uid":"2d5caf520573a800","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/876//#testresult/2d5caf520573a800","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1693099317303,"stop":1693099317981,"duration":678}},{"uid":"40c2ced91aceb47b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/875//#testresult/40c2ced91aceb47b","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1693012599241,"stop":1693012600985,"duration":1744}},{"uid":"fb09cf4e1bd7bd01","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/874//#testresult/fb09cf4e1bd7bd01","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1692926273105,"stop":1692926274050,"duration":945}},{"uid":"7d23131ff1194d57","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/873//#testresult/7d23131ff1194d57","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1692839717793,"stop":1692839718652,"duration":859}},{"uid":"435df1788cc37e6b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/871//#testresult/435df1788cc37e6b","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1692753332082,"stop":1692753333054,"duration":972}},{"uid":"be623b82785b6da","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/870//#testresult/be623b82785b6da","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1692666903996,"stop":1692666904653,"duration":657}},{"uid":"a9d6d4a8847cf2f9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/869//#testresult/a9d6d4a8847cf2f9","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1692624415629,"stop":1692624416326,"duration":697}},{"uid":"394e07716f021d70","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/867//#testresult/394e07716f021d70","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1692580450036,"stop":1692580450696,"duration":660}},{"uid":"bf091037a89b2729","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/866//#testresult/bf091037a89b2729","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1692494238182,"stop":1692494238870,"duration":688}},{"uid":"c9d7d6681209fd3f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/865//#testresult/c9d7d6681209fd3f","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1692407661852,"stop":1692407662546,"duration":694}}]},"tags":[]},"source":"48ed53642cbe9637.json","parameterValues":["WakefieldCityCouncil"]}