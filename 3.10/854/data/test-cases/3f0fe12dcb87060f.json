{"uid":"3f0fe12dcb87060f","name":"Validate Council Output [PrestonCityCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"adada69a336066ec844ff916b7714101","time":{"start":1691802641700,"stop":1691802648336,"duration":6636},"status":"failed","statusMessage":"IndexError: list index out of range","statusTrace":"request = <FixtureRequest for <Function test_scenario_outline[PrestonCityCouncil]>>\n_pytest_bdd_example = {'council': 'PrestonCityCouncil'}\n\n    @pytest.mark.usefixtures(*func_args)\n    def scenario_wrapper(request: FixtureRequest, _pytest_bdd_example: dict[str, str]) -> Any:\n        scenario = templated_scenario.render(_pytest_bdd_example)\n>       _execute_scenario(feature, scenario, request)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/pytest_bdd/scenario.py:187: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/pytest_bdd/scenario.py:157: in _execute_scenario\n    _execute_step_function(request, scenario, step, step_func)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/pytest_bdd/scenario.py:127: in _execute_step_function\n    return_value = call_fixture_func(fixturefunc=step_func, request=request, kwargs=kwargs)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\nuk_bin_collection/tests/step_defs/test_validate_council.py:62: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:58: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:71: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:59: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:70: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <PrestonCityCouncil.CouncilClass object at 0x7f9c4726ffa0>\npage = 'https://selfservice.preston.gov.uk/service/Forms/FindMyNearest.aspx?Service=bins'\nkwargs = {'paon': 'Town Hall', 'postcode': 'PR1 2RL', 'uprn': None, 'usrn': None}\ndata = {'bins': []}, user_paon = 'Town Hall', user_postcode = 'PR1 2RL'\noptions = <selenium.webdriver.chrome.options.Options object at 0x7f9c4726cf40>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"2f2cbebe5d2c0edc3a9bc231b239364f\")>\ninputElement_address = <selenium.webdriver.remote.webelement.WebElement (session=\"2f2cbebe5d2c0edc3a9bc231b239364f\", element=\"AB752F315B7634F99A93B674EA6A491E_element_16\")>\ndropdown = <selenium.webdriver.remote.webelement.WebElement (session=\"2f2cbebe5d2c0edc3a9bc231b239364f\", element=\"03EC20B9540CCD1214ED5400352FD86E_element_23\")>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        page = \"https://selfservice.preston.gov.uk/service/Forms/FindMyNearest.aspx?Service=bins\"\n    \n        data = {\"bins\": []}\n    \n        user_paon = kwargs.get(\"paon\")\n        user_postcode = kwargs.get(\"postcode\")\n        check_paon(user_paon)\n        check_postcode(user_postcode)\n    \n        # Set up Selenium to run 'headless'\n        options = webdriver.ChromeOptions()\n        options.add_argument(\"--headless\")\n        options.add_argument(\"--no-sandbox\")\n        options.add_argument(\"--disable-gpu\")\n        options.add_argument(\"--disable-dev-shm-usage\")\n        options.add_experimental_option(\"excludeSwitches\", [\"enable-logging\"])\n    \n        # Create Selenium webdriver\n        driver = webdriver.Chrome(options=options)\n        driver.get(page)\n    \n        # If you bang in the house number (or property name) and postcode in the box it should find your property\n        inputElement_address = driver.find_element(\n            By.ID,\n            \"MainContent_txtAddress\",\n        )\n    \n        inputElement_address.send_keys(user_paon)\n        inputElement_address.send_keys(\" \")\n        inputElement_address.send_keys(user_postcode)\n    \n        driver.find_element(\n            By.ID,\n            \"btnSearch\",\n        ).click()\n    \n        # Wait for the 'Select your property' dropdown to appear and select the first result\n        dropdown = WebDriverWait(driver, 10).until(\n            EC.presence_of_element_located((By.ID, \"MainContent_ddlSearchResults\"))\n        )\n        # Create a 'Select' for it, then select the first address in the list\n        # (Index 0 is \"Make a selection from the list\")\n        dropdownSelect = Select(dropdown)\n        dropdownSelect.select_by_index(1)\n    \n        # Wait for the 'View more' link to appear, then click it to get the full set of dates\n        viewMoreLink = WebDriverWait(driver, 10).until(\n            EC.presence_of_element_located((By.LINK_TEXT, \"View more collection dates\"))\n        )\n        viewMoreLink.click()\n    \n        soup = BeautifulSoup(driver.page_source, features=\"html.parser\")\n    \n        topLevelSpan = soup.find(\n            \"span\",\n            id=\"lblCollectionDates\"\n        )\n    \n        collectionDivs = topLevelSpan.findChildren(recursive=False)\n        for collectionDiv in collectionDivs:\n            # Each date has two child divs - the date and the bin type\n            # However both strings are in <b> tags so there are 4 children, the text is at:\n            # Index 1 - date string i.e. 'Monday 01/01/2023'\n            # Index 3 - bin type i.e. 'General waste'\n            typeAndDateDivs = collectionDiv.findChildren()\n    \n            # Strip the day (i.e. Monday) out of the collection date string for parsing\n            dateString = typeAndDateDivs[1].text.split(' ')[1]\n    \n            data[\"bins\"].append(\n                {\n>                   \"type\": typeAndDateDivs[3].text,\n                    \"collectionDate\": datetime.strptime(dateString, \"%d/%m/%Y\").strftime(date_format)\n                }\n            )\nE           IndexError: list index out of range\n\nuk_bin_collection/uk_bin_collection/councils/PrestonCityCouncil.py:98: IndexError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"IndexError: list index out of range","statusTrace":"request = <FixtureRequest for <Function test_scenario_outline[PrestonCityCouncil]>>\n_pytest_bdd_example = {'council': 'PrestonCityCouncil'}\n\n    @pytest.mark.usefixtures(*func_args)\n    def scenario_wrapper(request: FixtureRequest, _pytest_bdd_example: dict[str, str]) -> Any:\n        scenario = templated_scenario.render(_pytest_bdd_example)\n>       _execute_scenario(feature, scenario, request)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/pytest_bdd/scenario.py:187: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/pytest_bdd/scenario.py:157: in _execute_scenario\n    _execute_step_function(request, scenario, step, step_func)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/pytest_bdd/scenario.py:127: in _execute_step_function\n    return_value = call_fixture_func(fixturefunc=step_func, request=request, kwargs=kwargs)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\nuk_bin_collection/tests/step_defs/test_validate_council.py:62: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:58: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:71: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:59: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:70: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <PrestonCityCouncil.CouncilClass object at 0x7f9c4726ffa0>\npage = 'https://selfservice.preston.gov.uk/service/Forms/FindMyNearest.aspx?Service=bins'\nkwargs = {'paon': 'Town Hall', 'postcode': 'PR1 2RL', 'uprn': None, 'usrn': None}\ndata = {'bins': []}, user_paon = 'Town Hall', user_postcode = 'PR1 2RL'\noptions = <selenium.webdriver.chrome.options.Options object at 0x7f9c4726cf40>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"2f2cbebe5d2c0edc3a9bc231b239364f\")>\ninputElement_address = <selenium.webdriver.remote.webelement.WebElement (session=\"2f2cbebe5d2c0edc3a9bc231b239364f\", element=\"AB752F315B7634F99A93B674EA6A491E_element_16\")>\ndropdown = <selenium.webdriver.remote.webelement.WebElement (session=\"2f2cbebe5d2c0edc3a9bc231b239364f\", element=\"03EC20B9540CCD1214ED5400352FD86E_element_23\")>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        page = \"https://selfservice.preston.gov.uk/service/Forms/FindMyNearest.aspx?Service=bins\"\n    \n        data = {\"bins\": []}\n    \n        user_paon = kwargs.get(\"paon\")\n        user_postcode = kwargs.get(\"postcode\")\n        check_paon(user_paon)\n        check_postcode(user_postcode)\n    \n        # Set up Selenium to run 'headless'\n        options = webdriver.ChromeOptions()\n        options.add_argument(\"--headless\")\n        options.add_argument(\"--no-sandbox\")\n        options.add_argument(\"--disable-gpu\")\n        options.add_argument(\"--disable-dev-shm-usage\")\n        options.add_experimental_option(\"excludeSwitches\", [\"enable-logging\"])\n    \n        # Create Selenium webdriver\n        driver = webdriver.Chrome(options=options)\n        driver.get(page)\n    \n        # If you bang in the house number (or property name) and postcode in the box it should find your property\n        inputElement_address = driver.find_element(\n            By.ID,\n            \"MainContent_txtAddress\",\n        )\n    \n        inputElement_address.send_keys(user_paon)\n        inputElement_address.send_keys(\" \")\n        inputElement_address.send_keys(user_postcode)\n    \n        driver.find_element(\n            By.ID,\n            \"btnSearch\",\n        ).click()\n    \n        # Wait for the 'Select your property' dropdown to appear and select the first result\n        dropdown = WebDriverWait(driver, 10).until(\n            EC.presence_of_element_located((By.ID, \"MainContent_ddlSearchResults\"))\n        )\n        # Create a 'Select' for it, then select the first address in the list\n        # (Index 0 is \"Make a selection from the list\")\n        dropdownSelect = Select(dropdown)\n        dropdownSelect.select_by_index(1)\n    \n        # Wait for the 'View more' link to appear, then click it to get the full set of dates\n        viewMoreLink = WebDriverWait(driver, 10).until(\n            EC.presence_of_element_located((By.LINK_TEXT, \"View more collection dates\"))\n        )\n        viewMoreLink.click()\n    \n        soup = BeautifulSoup(driver.page_source, features=\"html.parser\")\n    \n        topLevelSpan = soup.find(\n            \"span\",\n            id=\"lblCollectionDates\"\n        )\n    \n        collectionDivs = topLevelSpan.findChildren(recursive=False)\n        for collectionDiv in collectionDivs:\n            # Each date has two child divs - the date and the bin type\n            # However both strings are in <b> tags so there are 4 children, the text is at:\n            # Index 1 - date string i.e. 'Monday 01/01/2023'\n            # Index 3 - bin type i.e. 'General waste'\n            typeAndDateDivs = collectionDiv.findChildren()\n    \n            # Strip the day (i.e. Monday) out of the collection date string for parsing\n            dateString = typeAndDateDivs[1].text.split(' ')[1]\n    \n            data[\"bins\"].append(\n                {\n>                   \"type\": typeAndDateDivs[3].text,\n                    \"collectionDate\": datetime.strptime(dateString, \"%d/%m/%Y\").strftime(date_format)\n                }\n            )\nE           IndexError: list index out of range\n\nuk_bin_collection/uk_bin_collection/councils/PrestonCityCouncil.py:98: IndexError","steps":[{"name":"Given the council: PrestonCityCouncil","time":{"start":1691802641700,"stop":1691802641701,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"When we scrape the data from PrestonCityCouncil","time":{"start":1691802641701,"stop":1691802648336,"duration":6635},"status":"failed","statusMessage":"list index out of range","statusTrace":"IndexError: list index out of range\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[],"parameters":[],"stepsCount":2,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az1098-975"},{"name":"thread","value":"2167-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"PrestonCityCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":28,"broken":0,"skipped":0,"passed":1,"unknown":0,"total":29},"items":[{"uid":"89d473558b330f11","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/853//#testresult/89d473558b330f11","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1691716256402,"stop":1691716261109,"duration":4707}},{"uid":"9863fb77e1a41caa","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/852//#testresult/9863fb77e1a41caa","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1691630814721,"stop":1691630819420,"duration":4699}},{"uid":"2d9d121f5a58547f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/851//#testresult/2d9d121f5a58547f","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1691611986272,"stop":1691611991247,"duration":4975}},{"uid":"e65233d1be0c7a6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/847//#testresult/e65233d1be0c7a6","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1691544370945,"stop":1691544375602,"duration":4657}},{"uid":"b346866a2cbdb20","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/846//#testresult/b346866a2cbdb20","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1691457752490,"stop":1691457757779,"duration":5289}},{"uid":"2358372aff8792b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/845//#testresult/2358372aff8792b","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1691371652727,"stop":1691371657617,"duration":4890}},{"uid":"dfe26743b6c49620","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/844//#testresult/dfe26743b6c49620","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1691284809275,"stop":1691284815914,"duration":6639}},{"uid":"4156dda66ca8a043","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/843//#testresult/4156dda66ca8a043","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1691198525138,"stop":1691198534053,"duration":8915}},{"uid":"c5de28c113b4335b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/842//#testresult/c5de28c113b4335b","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1691112330104,"stop":1691112335694,"duration":5590}},{"uid":"9a33d549da71b0c1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/841//#testresult/9a33d549da71b0c1","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1691025995469,"stop":1691026001735,"duration":6266}},{"uid":"43be204bf8ba3db6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/840//#testresult/43be204bf8ba3db6","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1690939345769,"stop":1690939352081,"duration":6312}},{"uid":"12b5091a78563411","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/839//#testresult/12b5091a78563411","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1690854085671,"stop":1690854090669,"duration":4998}},{"uid":"3b3b225720cec8e9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/838//#testresult/3b3b225720cec8e9","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1690766797649,"stop":1690766802679,"duration":5030}},{"uid":"eb4447b06de76d78","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/837//#testresult/eb4447b06de76d78","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1690680463814,"stop":1690680469748,"duration":5934}},{"uid":"4a2568c18aefa6c6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/836//#testresult/4a2568c18aefa6c6","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1690593819156,"stop":1690593828735,"duration":9579}},{"uid":"870fbe6d7fad4e5d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/835//#testresult/870fbe6d7fad4e5d","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1690563396873,"stop":1690563403283,"duration":6410}},{"uid":"6a5edc4a52faf923","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/833//#testresult/6a5edc4a52faf923","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1690562750549,"stop":1690562755257,"duration":4708}},{"uid":"30db7ed7b1ad5a25","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/832//#testresult/30db7ed7b1ad5a25","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1690507396150,"stop":1690507401951,"duration":5801}},{"uid":"1391ab0022f0e3bc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/831//#testresult/1391ab0022f0e3bc","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1690420950159,"stop":1690420955776,"duration":5617}},{"uid":"d255b8cf64187869","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/830//#testresult/d255b8cf64187869","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1690335528267,"stop":1690335532582,"duration":4315}}]},"tags":[]},"source":"3f0fe12dcb87060f.json","parameterValues":["PrestonCityCouncil"]}