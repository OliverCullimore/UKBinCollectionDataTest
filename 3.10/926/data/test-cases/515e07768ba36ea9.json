{"uid":"515e07768ba36ea9","name":"Validate Council Output [WakefieldCityCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"532d749d88b4b8fb0bc694b350a3d71a","time":{"start":1694987884527,"stop":1694987885320,"duration":793},"status":"failed","statusMessage":"IndexError: list index out of range","statusTrace":"request = <FixtureRequest for <Function test_scenario_outline[WakefieldCityCouncil]>>\n_pytest_bdd_example = {'council': 'WakefieldCityCouncil'}\n\n    @pytest.mark.usefixtures(*func_args)\n    def scenario_wrapper(request: FixtureRequest, _pytest_bdd_example: dict[str, str]) -> Any:\n        scenario = templated_scenario.render(_pytest_bdd_example)\n>       _execute_scenario(feature, scenario, request)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/pytest_bdd/scenario.py:187: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/pytest_bdd/scenario.py:157: in _execute_scenario\n    _execute_step_function(request, scenario, step, step_func)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/pytest_bdd/scenario.py:127: in _execute_step_function\n    return_value = call_fixture_func(fixturefunc=step_func, request=request, kwargs=kwargs)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\nuk_bin_collection/tests/step_defs/test_validate_council.py:62: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:58: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:71: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:59: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:70: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <WakefieldCityCouncil.CouncilClass object at 0x7fa9b412afe0>, page = ''\nkwargs = {'paon': None, 'postcode': None, 'uprn': '63035490', 'usrn': None}\nuser_uprn = '63035490'\nheaders = {'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36'}\nparams = {'uprn': '63035490'}\ns = <requests.sessions.Session object at 0x7fa9b4129270>\nwakefield_session = <Response [200]>, response = <Response [404]>\nsoup = <!DOCTYPE html>\n\n<html lang=\"en-gb\">\n<head>\n<title>Page not found - Wakefield Council</title>\n<meta charset=\"utf-8\"/>\n...e?SWJIYLWA=719d34d31c8e3a6e6fffd425f7e032f3&amp;ns=2&amp;cb=1547178414\" type=\"text/javascript\"></script></body>\n</html>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        # UPRN passed in as an argument\n        user_uprn = kwargs.get(\"uprn\")\n        check_uprn(user_uprn)\n    \n        # cookies = {\n        #    'visid_incap_2049675':    'xZCc/tFgSzaFmZD7XkN3koJGuGMAAAAAQUIPAAAAAAB7QGC8d+Jmlk0i3y06Zer6',\n        #    'WSS_FullScreenMode':     'false',\n        #    'incap_ses_1184_2049675': 'a2ZQQ9lCM3wa4+23mWpuEHnAuGMAAAAAfl4ebLXAvItl6dCfbMEWoQ==',\n        # }\n        headers = {\n            \"User-Agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36\"\n        }\n    \n        params = {\n            \"uprn\": user_uprn,\n        }\n    \n        requests.packages.urllib3.disable_warnings()\n        s = requests.Session()  # gets cookies and keeps them\n    \n        wakefield_session = s.get(\"https://www.wakefield.gov.uk/\", headers=headers)\n        # Make a GET for the data with correct params and cookies\n        response = s.get(\n            \"https://www.wakefield.gov.uk/site/Where-I-Live-Results\",\n            params=params,\n            headers=headers,\n            verify=False,\n        )\n    \n        # Have BS4 process the page\n        soup = BeautifulSoup(response.text, features=\"html.parser\")\n        soup.prettify()\n        data = {\"bins\": []}\n    \n        # Start a tuple for collections with (TYPE:DATE). Add the first for the bin types since they're separate\n        # elements on the page. All dates are parsed from text to datetime\n        collections = [\n            (\n                \"Household waste\",\n                datetime.strptime(\n>                   soup.select(\n                        \"#ctl00_PlaceHolderMain_Waste_output > div:nth-child(4) > \"\n                        \"div:nth-child(3) > div:nth-child(2)\"\n                    )[0].text,\n                    \"%d/%m/%Y\",\n                ),\n            ),\n            (\n                \"Mixed recycling\",\n                datetime.strptime(\n                    soup.select(\n                        \"#ctl00_PlaceHolderMain_Waste_output > div:nth-child(6) > \"\n                        \"div:nth-child(3) > div:nth-child(2)\"\n                    )[0].text,\n                    \"%d/%m/%Y\",\n                ),\n            ),\n        ]\nE       IndexError: list index out of range\n\nuk_bin_collection/uk_bin_collection/councils/WakefieldCityCouncil.py:59: IndexError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"IndexError: list index out of range","statusTrace":"request = <FixtureRequest for <Function test_scenario_outline[WakefieldCityCouncil]>>\n_pytest_bdd_example = {'council': 'WakefieldCityCouncil'}\n\n    @pytest.mark.usefixtures(*func_args)\n    def scenario_wrapper(request: FixtureRequest, _pytest_bdd_example: dict[str, str]) -> Any:\n        scenario = templated_scenario.render(_pytest_bdd_example)\n>       _execute_scenario(feature, scenario, request)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/pytest_bdd/scenario.py:187: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/pytest_bdd/scenario.py:157: in _execute_scenario\n    _execute_step_function(request, scenario, step, step_func)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/pytest_bdd/scenario.py:127: in _execute_step_function\n    return_value = call_fixture_func(fixturefunc=step_func, request=request, kwargs=kwargs)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\nuk_bin_collection/tests/step_defs/test_validate_council.py:62: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:58: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:71: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:59: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:70: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <WakefieldCityCouncil.CouncilClass object at 0x7fa9b412afe0>, page = ''\nkwargs = {'paon': None, 'postcode': None, 'uprn': '63035490', 'usrn': None}\nuser_uprn = '63035490'\nheaders = {'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36'}\nparams = {'uprn': '63035490'}\ns = <requests.sessions.Session object at 0x7fa9b4129270>\nwakefield_session = <Response [200]>, response = <Response [404]>\nsoup = <!DOCTYPE html>\n\n<html lang=\"en-gb\">\n<head>\n<title>Page not found - Wakefield Council</title>\n<meta charset=\"utf-8\"/>\n...e?SWJIYLWA=719d34d31c8e3a6e6fffd425f7e032f3&amp;ns=2&amp;cb=1547178414\" type=\"text/javascript\"></script></body>\n</html>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        # UPRN passed in as an argument\n        user_uprn = kwargs.get(\"uprn\")\n        check_uprn(user_uprn)\n    \n        # cookies = {\n        #    'visid_incap_2049675':    'xZCc/tFgSzaFmZD7XkN3koJGuGMAAAAAQUIPAAAAAAB7QGC8d+Jmlk0i3y06Zer6',\n        #    'WSS_FullScreenMode':     'false',\n        #    'incap_ses_1184_2049675': 'a2ZQQ9lCM3wa4+23mWpuEHnAuGMAAAAAfl4ebLXAvItl6dCfbMEWoQ==',\n        # }\n        headers = {\n            \"User-Agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36\"\n        }\n    \n        params = {\n            \"uprn\": user_uprn,\n        }\n    \n        requests.packages.urllib3.disable_warnings()\n        s = requests.Session()  # gets cookies and keeps them\n    \n        wakefield_session = s.get(\"https://www.wakefield.gov.uk/\", headers=headers)\n        # Make a GET for the data with correct params and cookies\n        response = s.get(\n            \"https://www.wakefield.gov.uk/site/Where-I-Live-Results\",\n            params=params,\n            headers=headers,\n            verify=False,\n        )\n    \n        # Have BS4 process the page\n        soup = BeautifulSoup(response.text, features=\"html.parser\")\n        soup.prettify()\n        data = {\"bins\": []}\n    \n        # Start a tuple for collections with (TYPE:DATE). Add the first for the bin types since they're separate\n        # elements on the page. All dates are parsed from text to datetime\n        collections = [\n            (\n                \"Household waste\",\n                datetime.strptime(\n>                   soup.select(\n                        \"#ctl00_PlaceHolderMain_Waste_output > div:nth-child(4) > \"\n                        \"div:nth-child(3) > div:nth-child(2)\"\n                    )[0].text,\n                    \"%d/%m/%Y\",\n                ),\n            ),\n            (\n                \"Mixed recycling\",\n                datetime.strptime(\n                    soup.select(\n                        \"#ctl00_PlaceHolderMain_Waste_output > div:nth-child(6) > \"\n                        \"div:nth-child(3) > div:nth-child(2)\"\n                    )[0].text,\n                    \"%d/%m/%Y\",\n                ),\n            ),\n        ]\nE       IndexError: list index out of range\n\nuk_bin_collection/uk_bin_collection/councils/WakefieldCityCouncil.py:59: IndexError","steps":[{"name":"Given the council: WakefieldCityCouncil","time":{"start":1694987884528,"stop":1694987884528,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"When we scrape the data from WakefieldCityCouncil","time":{"start":1694987884528,"stop":1694987885320,"duration":792},"status":"failed","statusMessage":"list index out of range","statusTrace":"IndexError: list index out of range\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az955-970"},{"name":"thread","value":"2105-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"WakefieldCityCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":77,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":77},"items":[{"uid":"72195d14122256e8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/922//#testresult/72195d14122256e8","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1694971856785,"stop":1694971857538,"duration":753}},{"uid":"fc8ed2d7e76e24e3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/920//#testresult/fc8ed2d7e76e24e3","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1694913724925,"stop":1694913725893,"duration":968}},{"uid":"4c220493eec56851","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/919//#testresult/4c220493eec56851","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1694892972760,"stop":1694892973630,"duration":870}},{"uid":"9c4caf3e7fe558ae","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/917//#testresult/9c4caf3e7fe558ae","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1694890079133,"stop":1694890080328,"duration":1195}},{"uid":"8f16bce3b4a149d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/915//#testresult/8f16bce3b4a149d","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1694864978534,"stop":1694864979434,"duration":900}},{"uid":"3e9e8537fb15055d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/913//#testresult/3e9e8537fb15055d","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1694840560262,"stop":1694840561301,"duration":1039}},{"uid":"f9b2b948f1bf4ae1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/912//#testresult/f9b2b948f1bf4ae1","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1694826967376,"stop":1694826968164,"duration":788}},{"uid":"8c95f29f8be2c833","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/910//#testresult/8c95f29f8be2c833","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1694796998788,"stop":1694796999904,"duration":1116}},{"uid":"8033544bff342ebc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/906//#testresult/8033544bff342ebc","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1694740693420,"stop":1694740694750,"duration":1330}},{"uid":"18a4cc49fd6741dc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/905//#testresult/18a4cc49fd6741dc","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1694654150539,"stop":1694654151801,"duration":1262}},{"uid":"300d90f8f8a59a42","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/904//#testresult/300d90f8f8a59a42","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1694568048846,"stop":1694568049568,"duration":722}},{"uid":"179af697d9040847","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/903//#testresult/179af697d9040847","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1694481342986,"stop":1694481343667,"duration":681}},{"uid":"a25644f69005274a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/902//#testresult/a25644f69005274a","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1694395052483,"stop":1694395053147,"duration":664}},{"uid":"3df351c4488c3eca","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/901//#testresult/3df351c4488c3eca","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1694365457977,"stop":1694365458956,"duration":979}},{"uid":"d9ca07f7fe86d53d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/899//#testresult/d9ca07f7fe86d53d","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1694308987413,"stop":1694308988366,"duration":953}},{"uid":"34e97bc2da08dffe","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/891//#testresult/34e97bc2da08dffe","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1694240551521,"stop":1694240553008,"duration":1487}},{"uid":"3dd566bb37307066","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/890//#testresult/3dd566bb37307066","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1694222098214,"stop":1694222099088,"duration":874}},{"uid":"1a2a000ae0bbedc8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/889//#testresult/1a2a000ae0bbedc8","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1694135895435,"stop":1694135897558,"duration":2123}},{"uid":"48ed53642cbe9637","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/888//#testresult/48ed53642cbe9637","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1694049462797,"stop":1694049463644,"duration":847}},{"uid":"2e5dcae833b51e29","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/887//#testresult/2e5dcae833b51e29","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1693963130266,"stop":1693963131068,"duration":802}}]},"tags":[]},"source":"515e07768ba36ea9.json","parameterValues":["WakefieldCityCouncil"]}