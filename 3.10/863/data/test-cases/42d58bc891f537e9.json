{"uid":"42d58bc891f537e9","name":"Validate Council Output [CroydonCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"cc336f6dd92ae6b8042805cd6f13d13e","time":{"start":1692294221207,"stop":1692294225589,"duration":4382},"status":"failed","statusMessage":"AttributeError: 'NoneType' object has no attribute 'attrs'","statusTrace":"request = <FixtureRequest for <Function test_scenario_outline[CroydonCouncil]>>\n_pytest_bdd_example = {'council': 'CroydonCouncil'}\n\n    @pytest.mark.usefixtures(*func_args)\n    def scenario_wrapper(request: FixtureRequest, _pytest_bdd_example: dict[str, str]) -> Any:\n        scenario = templated_scenario.render(_pytest_bdd_example)\n>       _execute_scenario(feature, scenario, request)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/pytest_bdd/scenario.py:187: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/pytest_bdd/scenario.py:157: in _execute_scenario\n    _execute_step_function(request, scenario, step, step_func)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/pytest_bdd/scenario.py:127: in _execute_step_function\n    return_value = call_fixture_func(fixturefunc=step_func, request=request, kwargs=kwargs)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\nuk_bin_collection/tests/step_defs/test_validate_council.py:62: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:58: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:71: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:59: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:70: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <CroydonCouncil.CouncilClass object at 0x7f5d874e82b0>, page = ''\nkwargs = {'paon': '13', 'postcode': 'SE25 5DW', 'uprn': None, 'usrn': None}\ns = <requests.sessions.Session object at 0x7f5d874e9cf0>\nbase_url = 'https://service.croydon.gov.uk', paon = '13', postcode = 'SE25 5DW'\ncsrf_token = '0ae250ecfd14d162496fbf8a98636c037d471db6', address_id = '96383'\ncollection_data = '<input type=\"hidden\" id=\"page_title\" value=\"Check your bin collections - Croydon Council\"><script type=\"text/javascri...v>\\n</div></div></div></div></div>\\n\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n'\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        requests.packages.urllib3.disable_warnings()\n        s = requests.session()\n        base_url = \"https://service.croydon.gov.uk\"\n        paon = kwargs.get(\"paon\")\n        postcode = kwargs.get(\"postcode\")\n        check_paon(paon)\n        check_postcode(postcode)\n    \n        # Firstly, get a CSRF (cross-site request forgery) token\n        csrf_token = get_csrf_token(s, base_url)\n        # Next, get the address_id\n        address_id = get_address_id(s, base_url, csrf_token, postcode, paon)\n        # Finally, use the address_id to get the collection data\n        collection_data = get_collection_data(s, base_url, csrf_token, address_id)\n        if collection_data != \"\":\n            soup = BeautifulSoup(collection_data, features=\"html.parser\")\n            soup.prettify()\n    \n            # Find the list elements\n            collection_record_elements = soup.find_all(\n                \"div\", {\"class\": \"listing_template_record\"}\n            )\n    \n            # Form a JSON wrapper\n            data = {\"bins\": []}\n    \n            for e in collection_record_elements:\n                collection_type = e.find_all(\n                    \"div\", {\"class\": \"fragment_presenter_template_show\"}\n                )[0].text.strip()\n                collection_date = (\n                    e.find(\"div\", {\"class\": \"bin-collection-next\"})\n>                   .attrs[\"data-current_value\"]\n                    .strip()\n                )\nE               AttributeError: 'NoneType' object has no attribute 'attrs'\n\nuk_bin_collection/uk_bin_collection/councils/CroydonCouncil.py:275: AttributeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AttributeError: 'NoneType' object has no attribute 'attrs'","statusTrace":"request = <FixtureRequest for <Function test_scenario_outline[CroydonCouncil]>>\n_pytest_bdd_example = {'council': 'CroydonCouncil'}\n\n    @pytest.mark.usefixtures(*func_args)\n    def scenario_wrapper(request: FixtureRequest, _pytest_bdd_example: dict[str, str]) -> Any:\n        scenario = templated_scenario.render(_pytest_bdd_example)\n>       _execute_scenario(feature, scenario, request)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/pytest_bdd/scenario.py:187: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/pytest_bdd/scenario.py:157: in _execute_scenario\n    _execute_step_function(request, scenario, step, step_func)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/pytest_bdd/scenario.py:127: in _execute_step_function\n    return_value = call_fixture_func(fixturefunc=step_func, request=request, kwargs=kwargs)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\nuk_bin_collection/tests/step_defs/test_validate_council.py:62: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:58: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:71: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:59: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:70: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <CroydonCouncil.CouncilClass object at 0x7f5d874e82b0>, page = ''\nkwargs = {'paon': '13', 'postcode': 'SE25 5DW', 'uprn': None, 'usrn': None}\ns = <requests.sessions.Session object at 0x7f5d874e9cf0>\nbase_url = 'https://service.croydon.gov.uk', paon = '13', postcode = 'SE25 5DW'\ncsrf_token = '0ae250ecfd14d162496fbf8a98636c037d471db6', address_id = '96383'\ncollection_data = '<input type=\"hidden\" id=\"page_title\" value=\"Check your bin collections - Croydon Council\"><script type=\"text/javascri...v>\\n</div></div></div></div></div>\\n\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n'\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        requests.packages.urllib3.disable_warnings()\n        s = requests.session()\n        base_url = \"https://service.croydon.gov.uk\"\n        paon = kwargs.get(\"paon\")\n        postcode = kwargs.get(\"postcode\")\n        check_paon(paon)\n        check_postcode(postcode)\n    \n        # Firstly, get a CSRF (cross-site request forgery) token\n        csrf_token = get_csrf_token(s, base_url)\n        # Next, get the address_id\n        address_id = get_address_id(s, base_url, csrf_token, postcode, paon)\n        # Finally, use the address_id to get the collection data\n        collection_data = get_collection_data(s, base_url, csrf_token, address_id)\n        if collection_data != \"\":\n            soup = BeautifulSoup(collection_data, features=\"html.parser\")\n            soup.prettify()\n    \n            # Find the list elements\n            collection_record_elements = soup.find_all(\n                \"div\", {\"class\": \"listing_template_record\"}\n            )\n    \n            # Form a JSON wrapper\n            data = {\"bins\": []}\n    \n            for e in collection_record_elements:\n                collection_type = e.find_all(\n                    \"div\", {\"class\": \"fragment_presenter_template_show\"}\n                )[0].text.strip()\n                collection_date = (\n                    e.find(\"div\", {\"class\": \"bin-collection-next\"})\n>                   .attrs[\"data-current_value\"]\n                    .strip()\n                )\nE               AttributeError: 'NoneType' object has no attribute 'attrs'\n\nuk_bin_collection/uk_bin_collection/councils/CroydonCouncil.py:275: AttributeError","steps":[{"name":"Given the council: CroydonCouncil","time":{"start":1692294221208,"stop":1692294221208,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"When we scrape the data from CroydonCouncil","time":{"start":1692294221209,"stop":1692294225589,"duration":4380},"status":"failed","statusMessage":"'NoneType' object has no attribute 'attrs'","statusTrace":"AttributeError: 'NoneType' object has no attribute 'attrs'\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[],"parameters":[],"stepsCount":2,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az395-375"},{"name":"thread","value":"2153-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"CroydonCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":23,"broken":0,"skipped":0,"passed":13,"unknown":0,"total":36},"items":[{"uid":"1692c06a7e645f84","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/861//#testresult/1692c06a7e645f84","status":"failed","statusDetails":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","time":{"start":1692234603967,"stop":1692234605514,"duration":1547}},{"uid":"945c6d1228c70da7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/860//#testresult/945c6d1228c70da7","status":"failed","statusDetails":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","time":{"start":1692208450708,"stop":1692208452553,"duration":1845}},{"uid":"6d8f01c5c9cfdce2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/859//#testresult/6d8f01c5c9cfdce2","status":"failed","statusDetails":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","time":{"start":1692148267255,"stop":1692148268860,"duration":1605}},{"uid":"7ea376de980156f4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/858//#testresult/7ea376de980156f4","status":"failed","statusDetails":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","time":{"start":1692061884330,"stop":1692061886565,"duration":2235}},{"uid":"1f6dca05053b99bf","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/856//#testresult/1f6dca05053b99bf","status":"failed","statusDetails":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","time":{"start":1691975537560,"stop":1691975539283,"duration":1723}},{"uid":"a343abd348e3b9f9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/855//#testresult/a343abd348e3b9f9","status":"failed","statusDetails":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","time":{"start":1691889273767,"stop":1691889275906,"duration":2139}},{"uid":"76545f2b9cd85812","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/854//#testresult/76545f2b9cd85812","status":"failed","statusDetails":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","time":{"start":1691802598220,"stop":1691802599462,"duration":1242}},{"uid":"61a569a0be586148","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/853//#testresult/61a569a0be586148","status":"failed","statusDetails":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","time":{"start":1691716216073,"stop":1691716217636,"duration":1563}},{"uid":"1d5a1d5b6887417f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/852//#testresult/1d5a1d5b6887417f","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'attrs'","time":{"start":1691630773768,"stop":1691630779146,"duration":5378}},{"uid":"59fd3f68aab2ab85","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/851//#testresult/59fd3f68aab2ab85","status":"passed","time":{"start":1691611945756,"stop":1691611950792,"duration":5036}},{"uid":"536124a7fd7bd343","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/847//#testresult/536124a7fd7bd343","status":"passed","time":{"start":1691544329034,"stop":1691544334041,"duration":5007}},{"uid":"4a0979420d38bc49","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/846//#testresult/4a0979420d38bc49","status":"failed","statusDetails":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","time":{"start":1691457703194,"stop":1691457704809,"duration":1615}},{"uid":"6a65667001deb91f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/845//#testresult/6a65667001deb91f","status":"passed","time":{"start":1691371474521,"stop":1691371480070,"duration":5549}},{"uid":"782e2e1c67a820b7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/844//#testresult/782e2e1c67a820b7","status":"passed","time":{"start":1691284752865,"stop":1691284758597,"duration":5732}},{"uid":"5d778d751e83c817","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/843//#testresult/5d778d751e83c817","status":"passed","time":{"start":1691198478197,"stop":1691198484417,"duration":6220}},{"uid":"e607d8a721d13b8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/842//#testresult/e607d8a721d13b8","status":"failed","statusDetails":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","time":{"start":1691112274612,"stop":1691112276384,"duration":1772}},{"uid":"e892676a9b3ad145","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/841//#testresult/e892676a9b3ad145","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'attrs'","time":{"start":1691025796757,"stop":1691025803939,"duration":7182}},{"uid":"5a904629f9fe1a14","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/840//#testresult/5a904629f9fe1a14","status":"failed","statusDetails":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","time":{"start":1690939288405,"stop":1690939290260,"duration":1855}},{"uid":"ecb5ced7960f1aa0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/839//#testresult/ecb5ced7960f1aa0","status":"failed","statusDetails":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","time":{"start":1690854042387,"stop":1690854043635,"duration":1248}},{"uid":"2d890195814493a4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.10/838//#testresult/2d890195814493a4","status":"passed","time":{"start":1690766753800,"stop":1690766757777,"duration":3977}}]},"tags":[]},"source":"42d58bc891f537e9.json","parameterValues":["CroydonCouncil"]}