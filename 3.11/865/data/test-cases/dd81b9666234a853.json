{"uid":"dd81b9666234a853","name":"Validate Council Output [WakefieldCityCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"532d749d88b4b8fb0bc694b350a3d71a","time":{"start":1692407535037,"stop":1692407536002,"duration":965},"status":"failed","statusMessage":"IndexError: list index out of range","statusTrace":"request = <FixtureRequest for <Function test_scenario_outline[WakefieldCityCouncil]>>\n_pytest_bdd_example = {'council': 'WakefieldCityCouncil'}\n\n    @pytest.mark.usefixtures(*func_args)\n    def scenario_wrapper(request: FixtureRequest, _pytest_bdd_example: dict[str, str]) -> Any:\n        scenario = templated_scenario.render(_pytest_bdd_example)\n>       _execute_scenario(feature, scenario, request)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/pytest_bdd/scenario.py:187: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/pytest_bdd/scenario.py:157: in _execute_scenario\n    _execute_step_function(request, scenario, step, step_func)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/pytest_bdd/scenario.py:127: in _execute_step_function\n    return_value = call_fixture_func(fixturefunc=step_func, request=request, kwargs=kwargs)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\nuk_bin_collection/tests/step_defs/test_validate_council.py:62: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:58: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:71: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:59: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:70: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <WakefieldCityCouncil.CouncilClass object at 0x7f791f10c710>, page = ''\nkwargs = {'paon': None, 'postcode': None, 'uprn': '63035490', 'usrn': None}\nuser_uprn = '63035490'\nheaders = {'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36'}\nparams = {'uprn': '63035490'}\ns = <requests.sessions.Session object at 0x7f791f0dafd0>\nwakefield_session = <Response [200]>, response = <Response [404]>\nsoup = <!DOCTYPE html>\n\n<html lang=\"en-gb\">\n<head>\n<title>Page not found - Wakefield Council</title>\n<meta charset=\"utf-8\"/>\n...e?SWJIYLWA=719d34d31c8e3a6e6fffd425f7e032f3&amp;ns=2&amp;cb=2063343851\" type=\"text/javascript\"></script></body>\n</html>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        # UPRN passed in as an argument\n        user_uprn = kwargs.get(\"uprn\")\n        check_uprn(user_uprn)\n    \n        # cookies = {\n        #    'visid_incap_2049675':    'xZCc/tFgSzaFmZD7XkN3koJGuGMAAAAAQUIPAAAAAAB7QGC8d+Jmlk0i3y06Zer6',\n        #    'WSS_FullScreenMode':     'false',\n        #    'incap_ses_1184_2049675': 'a2ZQQ9lCM3wa4+23mWpuEHnAuGMAAAAAfl4ebLXAvItl6dCfbMEWoQ==',\n        # }\n        headers = {\n            \"User-Agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36\"\n        }\n    \n        params = {\n            \"uprn\": user_uprn,\n        }\n    \n        requests.packages.urllib3.disable_warnings()\n        s = requests.Session()  # gets cookies and keeps them\n    \n        wakefield_session = s.get(\"https://www.wakefield.gov.uk/\", headers=headers)\n        # Make a GET for the data with correct params and cookies\n        response = s.get(\n            \"https://www.wakefield.gov.uk/site/Where-I-Live-Results\",\n            params=params,\n            headers=headers,\n            verify=False,\n        )\n    \n        # Have BS4 process the page\n        soup = BeautifulSoup(response.text, features=\"html.parser\")\n        soup.prettify()\n        data = {\"bins\": []}\n    \n        # Start a tuple for collections with (TYPE:DATE). Add the first for the bin types since they're separate\n        # elements on the page. All dates are parsed from text to datetime\n        collections = [\n            (\n                \"Household waste\",\n                datetime.strptime(\n>                   soup.select(\n                        \"#ctl00_PlaceHolderMain_Waste_output > div:nth-child(4) > \"\n                        \"div:nth-child(3) > div:nth-child(2)\"\n                    )[0].text,\n                    \"%d/%m/%Y\",\n                ),\n            ),\n            (\n                \"Mixed recycling\",\n                datetime.strptime(\n                    soup.select(\n                        \"#ctl00_PlaceHolderMain_Waste_output > div:nth-child(6) > \"\n                        \"div:nth-child(3) > div:nth-child(2)\"\n                    )[0].text,\n                    \"%d/%m/%Y\",\n                ),\n            ),\n        ]\nE       IndexError: list index out of range\n\nuk_bin_collection/uk_bin_collection/councils/WakefieldCityCouncil.py:59: IndexError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"IndexError: list index out of range","statusTrace":"request = <FixtureRequest for <Function test_scenario_outline[WakefieldCityCouncil]>>\n_pytest_bdd_example = {'council': 'WakefieldCityCouncil'}\n\n    @pytest.mark.usefixtures(*func_args)\n    def scenario_wrapper(request: FixtureRequest, _pytest_bdd_example: dict[str, str]) -> Any:\n        scenario = templated_scenario.render(_pytest_bdd_example)\n>       _execute_scenario(feature, scenario, request)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/pytest_bdd/scenario.py:187: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/pytest_bdd/scenario.py:157: in _execute_scenario\n    _execute_step_function(request, scenario, step, step_func)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/pytest_bdd/scenario.py:127: in _execute_step_function\n    return_value = call_fixture_func(fixturefunc=step_func, request=request, kwargs=kwargs)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\nuk_bin_collection/tests/step_defs/test_validate_council.py:62: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:58: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:71: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:59: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:70: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <WakefieldCityCouncil.CouncilClass object at 0x7f791f10c710>, page = ''\nkwargs = {'paon': None, 'postcode': None, 'uprn': '63035490', 'usrn': None}\nuser_uprn = '63035490'\nheaders = {'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36'}\nparams = {'uprn': '63035490'}\ns = <requests.sessions.Session object at 0x7f791f0dafd0>\nwakefield_session = <Response [200]>, response = <Response [404]>\nsoup = <!DOCTYPE html>\n\n<html lang=\"en-gb\">\n<head>\n<title>Page not found - Wakefield Council</title>\n<meta charset=\"utf-8\"/>\n...e?SWJIYLWA=719d34d31c8e3a6e6fffd425f7e032f3&amp;ns=2&amp;cb=2063343851\" type=\"text/javascript\"></script></body>\n</html>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        # UPRN passed in as an argument\n        user_uprn = kwargs.get(\"uprn\")\n        check_uprn(user_uprn)\n    \n        # cookies = {\n        #    'visid_incap_2049675':    'xZCc/tFgSzaFmZD7XkN3koJGuGMAAAAAQUIPAAAAAAB7QGC8d+Jmlk0i3y06Zer6',\n        #    'WSS_FullScreenMode':     'false',\n        #    'incap_ses_1184_2049675': 'a2ZQQ9lCM3wa4+23mWpuEHnAuGMAAAAAfl4ebLXAvItl6dCfbMEWoQ==',\n        # }\n        headers = {\n            \"User-Agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36\"\n        }\n    \n        params = {\n            \"uprn\": user_uprn,\n        }\n    \n        requests.packages.urllib3.disable_warnings()\n        s = requests.Session()  # gets cookies and keeps them\n    \n        wakefield_session = s.get(\"https://www.wakefield.gov.uk/\", headers=headers)\n        # Make a GET for the data with correct params and cookies\n        response = s.get(\n            \"https://www.wakefield.gov.uk/site/Where-I-Live-Results\",\n            params=params,\n            headers=headers,\n            verify=False,\n        )\n    \n        # Have BS4 process the page\n        soup = BeautifulSoup(response.text, features=\"html.parser\")\n        soup.prettify()\n        data = {\"bins\": []}\n    \n        # Start a tuple for collections with (TYPE:DATE). Add the first for the bin types since they're separate\n        # elements on the page. All dates are parsed from text to datetime\n        collections = [\n            (\n                \"Household waste\",\n                datetime.strptime(\n>                   soup.select(\n                        \"#ctl00_PlaceHolderMain_Waste_output > div:nth-child(4) > \"\n                        \"div:nth-child(3) > div:nth-child(2)\"\n                    )[0].text,\n                    \"%d/%m/%Y\",\n                ),\n            ),\n            (\n                \"Mixed recycling\",\n                datetime.strptime(\n                    soup.select(\n                        \"#ctl00_PlaceHolderMain_Waste_output > div:nth-child(6) > \"\n                        \"div:nth-child(3) > div:nth-child(2)\"\n                    )[0].text,\n                    \"%d/%m/%Y\",\n                ),\n            ),\n        ]\nE       IndexError: list index out of range\n\nuk_bin_collection/uk_bin_collection/councils/WakefieldCityCouncil.py:59: IndexError","steps":[{"name":"Given the council: WakefieldCityCouncil","time":{"start":1692407535037,"stop":1692407535037,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"When we scrape the data from WakefieldCityCouncil","time":{"start":1692407535037,"stop":1692407536002,"duration":965},"status":"failed","statusMessage":"list index out of range","statusTrace":"IndexError: list index out of range\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[],"parameters":[],"stepsCount":2,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az560-164"},{"name":"thread","value":"2120-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"WakefieldCityCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":42,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":42},"items":[{"uid":"84edd7e732cec756","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/864//#testresult/84edd7e732cec756","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1692321332309,"stop":1692321333866,"duration":1557}},{"uid":"451dcc26ed2bb609","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/863//#testresult/451dcc26ed2bb609","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1692294448340,"stop":1692294449231,"duration":891}},{"uid":"6d32cfe8847b9d4e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/861//#testresult/6d32cfe8847b9d4e","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1692234833708,"stop":1692234834709,"duration":1001}},{"uid":"b57357ceed13fafb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/860//#testresult/b57357ceed13fafb","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1692208730167,"stop":1692208730880,"duration":713}},{"uid":"82d51d659ab76015","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/859//#testresult/82d51d659ab76015","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1692148517238,"stop":1692148518168,"duration":930}},{"uid":"33d5cbe933b12eaf","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/858//#testresult/33d5cbe933b12eaf","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1692062078922,"stop":1692062080028,"duration":1106}},{"uid":"bf9796a0ff36d274","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/856//#testresult/bf9796a0ff36d274","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1691975788761,"stop":1691975789804,"duration":1043}},{"uid":"99c2789836690b11","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/855//#testresult/99c2789836690b11","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1691889486414,"stop":1691889487576,"duration":1162}},{"uid":"e4725e4ad83db046","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/854//#testresult/e4725e4ad83db046","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1691802841692,"stop":1691802842756,"duration":1064}},{"uid":"f320547aeb001307","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/853//#testresult/f320547aeb001307","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1691716417880,"stop":1691716418575,"duration":695}},{"uid":"56767ce0dab210ae","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/852//#testresult/56767ce0dab210ae","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1691631019520,"stop":1691631021708,"duration":2188}},{"uid":"a5f4c5ed10e2074d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/851//#testresult/a5f4c5ed10e2074d","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1691612221921,"stop":1691612223504,"duration":1583}},{"uid":"6ae90b7b7b50f6ea","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/847//#testresult/6ae90b7b7b50f6ea","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1691544558783,"stop":1691544559811,"duration":1028}},{"uid":"a692eb81b0a24192","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/846//#testresult/a692eb81b0a24192","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1691457914323,"stop":1691457916570,"duration":2247}},{"uid":"b692b3a67b4ae1fa","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/845//#testresult/b692b3a67b4ae1fa","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1691371819925,"stop":1691371821531,"duration":1606}},{"uid":"1b6b2eefc38447bd","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/844//#testresult/1b6b2eefc38447bd","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1691285033251,"stop":1691285034410,"duration":1159}},{"uid":"a14d281fb250d162","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/843//#testresult/a14d281fb250d162","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1691198848508,"stop":1691198849815,"duration":1307}},{"uid":"43ba793a1d934b92","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/842//#testresult/43ba793a1d934b92","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1691112463859,"stop":1691112464723,"duration":864}},{"uid":"d3ee60266b564ae8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/841//#testresult/d3ee60266b564ae8","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1691026154689,"stop":1691026155929,"duration":1240}},{"uid":"fd547159584303b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/840//#testresult/fd547159584303b","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1690939511481,"stop":1690939512344,"duration":863}}]},"tags":[]},"source":"dd81b9666234a853.json","parameterValues":["WakefieldCityCouncil"]}