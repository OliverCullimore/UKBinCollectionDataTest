{"uid":"9d99f218750374cf","name":"Validate Council Output [PrestonCityCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"adada69a336066ec844ff916b7714101","time":{"start":1690593883730,"stop":1690593890561,"duration":6831},"status":"failed","statusMessage":"IndexError: list index out of range","statusTrace":"request = <FixtureRequest for <Function test_scenario_outline[PrestonCityCouncil]>>\n_pytest_bdd_example = {'council': 'PrestonCityCouncil'}\n\n    @pytest.mark.usefixtures(*func_args)\n    def scenario_wrapper(request: FixtureRequest, _pytest_bdd_example: dict[str, str]) -> Any:\n        scenario = templated_scenario.render(_pytest_bdd_example)\n>       _execute_scenario(feature, scenario, request)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/pytest_bdd/scenario.py:187: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/pytest_bdd/scenario.py:157: in _execute_scenario\n    _execute_step_function(request, scenario, step, step_func)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/pytest_bdd/scenario.py:127: in _execute_step_function\n    return_value = call_fixture_func(fixturefunc=step_func, request=request, kwargs=kwargs)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\nuk_bin_collection/tests/step_defs/test_validate_council.py:62: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:58: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:71: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:59: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:70: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <PrestonCityCouncil.CouncilClass object at 0x7f3ec22ac710>\npage = 'https://selfservice.preston.gov.uk/service/Forms/FindMyNearest.aspx?Service=bins'\nkwargs = {'paon': 'Town Hall', 'postcode': 'PR1 2RL', 'uprn': None, 'usrn': None}\ndata = {'bins': []}, user_paon = 'Town Hall', user_postcode = 'PR1 2RL'\noptions = <selenium.webdriver.chrome.options.Options object at 0x7f3ec1b9bf90>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"149be19ed0d362b6626146cbf862534b\")>\ninputElement_address = <selenium.webdriver.remote.webelement.WebElement (session=\"149be19ed0d362b6626146cbf862534b\", element=\"256A689A5BFE3DCBEB4C364706CA2937_element_16\")>\ndropdown = <selenium.webdriver.remote.webelement.WebElement (session=\"149be19ed0d362b6626146cbf862534b\", element=\"A67789B798A72810E0542CB0C2CFA2E3_element_23\")>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        page = \"https://selfservice.preston.gov.uk/service/Forms/FindMyNearest.aspx?Service=bins\"\n    \n        data = {\"bins\": []}\n    \n        user_paon = kwargs.get(\"paon\")\n        user_postcode = kwargs.get(\"postcode\")\n        check_paon(user_paon)\n        check_postcode(user_postcode)\n    \n        # Set up Selenium to run 'headless'\n        options = webdriver.ChromeOptions()\n        options.add_argument(\"--headless\")\n        options.add_argument(\"--no-sandbox\")\n        options.add_argument(\"--disable-gpu\")\n        options.add_argument(\"--disable-dev-shm-usage\")\n        options.add_experimental_option(\"excludeSwitches\", [\"enable-logging\"])\n    \n        # Create Selenium webdriver\n        driver = webdriver.Chrome(options=options)\n        driver.get(page)\n    \n        # If you bang in the house number (or property name) and postcode in the box it should find your property\n        inputElement_address = driver.find_element(\n            By.ID,\n            \"MainContent_txtAddress\",\n        )\n    \n        inputElement_address.send_keys(user_paon)\n        inputElement_address.send_keys(\" \")\n        inputElement_address.send_keys(user_postcode)\n    \n        driver.find_element(\n            By.ID,\n            \"btnSearch\",\n        ).click()\n    \n        # Wait for the 'Select your property' dropdown to appear and select the first result\n        dropdown = WebDriverWait(driver, 10).until(\n            EC.presence_of_element_located((By.ID, \"MainContent_ddlSearchResults\"))\n        )\n        # Create a 'Select' for it, then select the first address in the list\n        # (Index 0 is \"Make a selection from the list\")\n        dropdownSelect = Select(dropdown)\n        dropdownSelect.select_by_index(1)\n    \n        # Wait for the 'View more' link to appear, then click it to get the full set of dates\n        viewMoreLink = WebDriverWait(driver, 10).until(\n            EC.presence_of_element_located((By.LINK_TEXT, \"View more collection dates\"))\n        )\n        viewMoreLink.click()\n    \n        soup = BeautifulSoup(driver.page_source, features=\"html.parser\")\n    \n        topLevelSpan = soup.find(\n            \"span\",\n            id=\"lblCollectionDates\"\n        )\n    \n        collectionDivs = topLevelSpan.findChildren(recursive=False)\n        for collectionDiv in collectionDivs:\n            # Each date has two child divs - the date and the bin type\n            # However both strings are in <b> tags so there are 4 children, the text is at:\n            # Index 1 - date string i.e. 'Monday 01/01/2023'\n            # Index 3 - bin type i.e. 'General waste'\n            typeAndDateDivs = collectionDiv.findChildren()\n    \n            # Strip the day (i.e. Monday) out of the collection date string for parsing\n            dateString = typeAndDateDivs[1].text.split(' ')[1]\n    \n            data[\"bins\"].append(\n                {\n>                   \"type\": typeAndDateDivs[3].text,\n                    \"collectionDate\": datetime.strptime(dateString, \"%d/%m/%Y\").strftime(date_format)\n                }\n            )\nE           IndexError: list index out of range\n\nuk_bin_collection/uk_bin_collection/councils/PrestonCityCouncil.py:98: IndexError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"IndexError: list index out of range","statusTrace":"request = <FixtureRequest for <Function test_scenario_outline[PrestonCityCouncil]>>\n_pytest_bdd_example = {'council': 'PrestonCityCouncil'}\n\n    @pytest.mark.usefixtures(*func_args)\n    def scenario_wrapper(request: FixtureRequest, _pytest_bdd_example: dict[str, str]) -> Any:\n        scenario = templated_scenario.render(_pytest_bdd_example)\n>       _execute_scenario(feature, scenario, request)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/pytest_bdd/scenario.py:187: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/pytest_bdd/scenario.py:157: in _execute_scenario\n    _execute_step_function(request, scenario, step, step_func)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/pytest_bdd/scenario.py:127: in _execute_step_function\n    return_value = call_fixture_func(fixturefunc=step_func, request=request, kwargs=kwargs)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\nuk_bin_collection/tests/step_defs/test_validate_council.py:62: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:58: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:71: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:59: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:70: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <PrestonCityCouncil.CouncilClass object at 0x7f3ec22ac710>\npage = 'https://selfservice.preston.gov.uk/service/Forms/FindMyNearest.aspx?Service=bins'\nkwargs = {'paon': 'Town Hall', 'postcode': 'PR1 2RL', 'uprn': None, 'usrn': None}\ndata = {'bins': []}, user_paon = 'Town Hall', user_postcode = 'PR1 2RL'\noptions = <selenium.webdriver.chrome.options.Options object at 0x7f3ec1b9bf90>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"149be19ed0d362b6626146cbf862534b\")>\ninputElement_address = <selenium.webdriver.remote.webelement.WebElement (session=\"149be19ed0d362b6626146cbf862534b\", element=\"256A689A5BFE3DCBEB4C364706CA2937_element_16\")>\ndropdown = <selenium.webdriver.remote.webelement.WebElement (session=\"149be19ed0d362b6626146cbf862534b\", element=\"A67789B798A72810E0542CB0C2CFA2E3_element_23\")>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        page = \"https://selfservice.preston.gov.uk/service/Forms/FindMyNearest.aspx?Service=bins\"\n    \n        data = {\"bins\": []}\n    \n        user_paon = kwargs.get(\"paon\")\n        user_postcode = kwargs.get(\"postcode\")\n        check_paon(user_paon)\n        check_postcode(user_postcode)\n    \n        # Set up Selenium to run 'headless'\n        options = webdriver.ChromeOptions()\n        options.add_argument(\"--headless\")\n        options.add_argument(\"--no-sandbox\")\n        options.add_argument(\"--disable-gpu\")\n        options.add_argument(\"--disable-dev-shm-usage\")\n        options.add_experimental_option(\"excludeSwitches\", [\"enable-logging\"])\n    \n        # Create Selenium webdriver\n        driver = webdriver.Chrome(options=options)\n        driver.get(page)\n    \n        # If you bang in the house number (or property name) and postcode in the box it should find your property\n        inputElement_address = driver.find_element(\n            By.ID,\n            \"MainContent_txtAddress\",\n        )\n    \n        inputElement_address.send_keys(user_paon)\n        inputElement_address.send_keys(\" \")\n        inputElement_address.send_keys(user_postcode)\n    \n        driver.find_element(\n            By.ID,\n            \"btnSearch\",\n        ).click()\n    \n        # Wait for the 'Select your property' dropdown to appear and select the first result\n        dropdown = WebDriverWait(driver, 10).until(\n            EC.presence_of_element_located((By.ID, \"MainContent_ddlSearchResults\"))\n        )\n        # Create a 'Select' for it, then select the first address in the list\n        # (Index 0 is \"Make a selection from the list\")\n        dropdownSelect = Select(dropdown)\n        dropdownSelect.select_by_index(1)\n    \n        # Wait for the 'View more' link to appear, then click it to get the full set of dates\n        viewMoreLink = WebDriverWait(driver, 10).until(\n            EC.presence_of_element_located((By.LINK_TEXT, \"View more collection dates\"))\n        )\n        viewMoreLink.click()\n    \n        soup = BeautifulSoup(driver.page_source, features=\"html.parser\")\n    \n        topLevelSpan = soup.find(\n            \"span\",\n            id=\"lblCollectionDates\"\n        )\n    \n        collectionDivs = topLevelSpan.findChildren(recursive=False)\n        for collectionDiv in collectionDivs:\n            # Each date has two child divs - the date and the bin type\n            # However both strings are in <b> tags so there are 4 children, the text is at:\n            # Index 1 - date string i.e. 'Monday 01/01/2023'\n            # Index 3 - bin type i.e. 'General waste'\n            typeAndDateDivs = collectionDiv.findChildren()\n    \n            # Strip the day (i.e. Monday) out of the collection date string for parsing\n            dateString = typeAndDateDivs[1].text.split(' ')[1]\n    \n            data[\"bins\"].append(\n                {\n>                   \"type\": typeAndDateDivs[3].text,\n                    \"collectionDate\": datetime.strptime(dateString, \"%d/%m/%Y\").strftime(date_format)\n                }\n            )\nE           IndexError: list index out of range\n\nuk_bin_collection/uk_bin_collection/councils/PrestonCityCouncil.py:98: IndexError","steps":[{"name":"Given the council: PrestonCityCouncil","time":{"start":1690593883730,"stop":1690593883731,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"When we scrape the data from PrestonCityCouncil","time":{"start":1690593883731,"stop":1690593890561,"duration":6830},"status":"failed","statusMessage":"list index out of range","statusTrace":"IndexError: list index out of range\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[],"parameters":[],"stepsCount":2,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az614-643"},{"name":"thread","value":"2270-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"PrestonCityCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":17,"broken":0,"skipped":0,"passed":1,"unknown":0,"total":18},"items":[{"uid":"e3c01b975a5da0df","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/835//#testresult/e3c01b975a5da0df","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1690563374051,"stop":1690563378834,"duration":4783}},{"uid":"7ec7e6fba419ada5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/833//#testresult/7ec7e6fba419ada5","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1690562763438,"stop":1690562770034,"duration":6596}},{"uid":"de319db69d870d2a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/832//#testresult/de319db69d870d2a","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1690507388423,"stop":1690507394514,"duration":6091}},{"uid":"9292ab3553063790","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/831//#testresult/9292ab3553063790","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1690420938022,"stop":1690420943054,"duration":5032}},{"uid":"67d9121df1df407","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/830//#testresult/67d9121df1df407","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1690335523481,"stop":1690335528694,"duration":5213}},{"uid":"d9da96a72936aade","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/829//#testresult/d9da96a72936aade","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1690249652871,"stop":1690249657612,"duration":4741}},{"uid":"2887a1bc406e4ae6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/828//#testresult/2887a1bc406e4ae6","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1690162678025,"stop":1690162682797,"duration":4772}},{"uid":"28b793b8e7727c81","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/827//#testresult/28b793b8e7727c81","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1690123375671,"stop":1690123382444,"duration":6773}},{"uid":"da233972db905956","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/824//#testresult/da233972db905956","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1690106945937,"stop":1690106951565,"duration":5628}},{"uid":"fd1a7d3faa9ca85f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/822//#testresult/fd1a7d3faa9ca85f","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1690076599991,"stop":1690076605531,"duration":5540}},{"uid":"66717b9ead92e4b3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/821//#testresult/66717b9ead92e4b3","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1690027404680,"stop":1690027409454,"duration":4774}},{"uid":"5ebe501ba847ec45","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/820//#testresult/5ebe501ba847ec45","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1690025842579,"stop":1690025848700,"duration":6121}},{"uid":"b70ac65830334077","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/817//#testresult/b70ac65830334077","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1689989772311,"stop":1689989778988,"duration":6677}},{"uid":"b4d66cc5f1cb198b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/816//#testresult/b4d66cc5f1cb198b","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1689957186598,"stop":1689957191085,"duration":4487}},{"uid":"a6551b8732e5b059","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/815//#testresult/a6551b8732e5b059","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1689957098784,"stop":1689957104868,"duration":6084}},{"uid":"45efb20173b4541d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/814//#testresult/45efb20173b4541d","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1689903592450,"stop":1689903599363,"duration":6913}},{"uid":"8ba11f7f88b7f43b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/813//#testresult/8ba11f7f88b7f43b","status":"passed","time":{"start":1689840956238,"stop":1689840961035,"duration":4797}}]},"tags":[]},"source":"9d99f218750374cf.json","parameterValues":["PrestonCityCouncil"]}