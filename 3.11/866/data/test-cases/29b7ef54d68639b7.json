{"uid":"29b7ef54d68639b7","name":"Validate Council Output [PrestonCityCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"adada69a336066ec844ff916b7714101","time":{"start":1692494154978,"stop":1692494160518,"duration":5540},"status":"failed","statusMessage":"IndexError: list index out of range","statusTrace":"request = <FixtureRequest for <Function test_scenario_outline[PrestonCityCouncil]>>\n_pytest_bdd_example = {'council': 'PrestonCityCouncil'}\n\n    @pytest.mark.usefixtures(*func_args)\n    def scenario_wrapper(request: FixtureRequest, _pytest_bdd_example: dict[str, str]) -> Any:\n        scenario = templated_scenario.render(_pytest_bdd_example)\n>       _execute_scenario(feature, scenario, request)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/pytest_bdd/scenario.py:187: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/pytest_bdd/scenario.py:157: in _execute_scenario\n    _execute_step_function(request, scenario, step, step_func)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/pytest_bdd/scenario.py:127: in _execute_step_function\n    return_value = call_fixture_func(fixturefunc=step_func, request=request, kwargs=kwargs)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\nuk_bin_collection/tests/step_defs/test_validate_council.py:62: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:58: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:71: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:59: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:70: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <PrestonCityCouncil.CouncilClass object at 0x7f9a636b85d0>\npage = 'https://selfservice.preston.gov.uk/service/Forms/FindMyNearest.aspx?Service=bins'\nkwargs = {'paon': 'Town Hall', 'postcode': 'PR1 2RL', 'uprn': None, 'usrn': None}\ndata = {'bins': []}, user_paon = 'Town Hall', user_postcode = 'PR1 2RL'\noptions = <selenium.webdriver.chrome.options.Options object at 0x7f9a636e3b90>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"31698bfb5415883c473c31fd74be601c\")>\ninputElement_address = <selenium.webdriver.remote.webelement.WebElement (session=\"31698bfb5415883c473c31fd74be601c\", element=\"8272A0C1E5973202518AEDD35A4221D9_element_16\")>\ndropdown = <selenium.webdriver.remote.webelement.WebElement (session=\"31698bfb5415883c473c31fd74be601c\", element=\"15050C5FCED25DBDB52C997EB4CCFF97_element_23\")>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        page = \"https://selfservice.preston.gov.uk/service/Forms/FindMyNearest.aspx?Service=bins\"\n    \n        data = {\"bins\": []}\n    \n        user_paon = kwargs.get(\"paon\")\n        user_postcode = kwargs.get(\"postcode\")\n        check_paon(user_paon)\n        check_postcode(user_postcode)\n    \n        # Set up Selenium to run 'headless'\n        options = webdriver.ChromeOptions()\n        options.add_argument(\"--headless\")\n        options.add_argument(\"--no-sandbox\")\n        options.add_argument(\"--disable-gpu\")\n        options.add_argument(\"--disable-dev-shm-usage\")\n        options.add_experimental_option(\"excludeSwitches\", [\"enable-logging\"])\n    \n        # Create Selenium webdriver\n        driver = webdriver.Chrome(options=options)\n        driver.get(page)\n    \n        # If you bang in the house number (or property name) and postcode in the box it should find your property\n        inputElement_address = driver.find_element(\n            By.ID,\n            \"MainContent_txtAddress\",\n        )\n    \n        inputElement_address.send_keys(user_paon)\n        inputElement_address.send_keys(\" \")\n        inputElement_address.send_keys(user_postcode)\n    \n        driver.find_element(\n            By.ID,\n            \"btnSearch\",\n        ).click()\n    \n        # Wait for the 'Select your property' dropdown to appear and select the first result\n        dropdown = WebDriverWait(driver, 10).until(\n            EC.presence_of_element_located((By.ID, \"MainContent_ddlSearchResults\"))\n        )\n        # Create a 'Select' for it, then select the first address in the list\n        # (Index 0 is \"Make a selection from the list\")\n        dropdownSelect = Select(dropdown)\n        dropdownSelect.select_by_index(1)\n    \n        # Wait for the 'View more' link to appear, then click it to get the full set of dates\n        viewMoreLink = WebDriverWait(driver, 10).until(\n            EC.presence_of_element_located((By.LINK_TEXT, \"View more collection dates\"))\n        )\n        viewMoreLink.click()\n    \n        soup = BeautifulSoup(driver.page_source, features=\"html.parser\")\n    \n        topLevelSpan = soup.find(\n            \"span\",\n            id=\"lblCollectionDates\"\n        )\n    \n        collectionDivs = topLevelSpan.findChildren(recursive=False)\n        for collectionDiv in collectionDivs:\n            # Each date has two child divs - the date and the bin type\n            # However both strings are in <b> tags so there are 4 children, the text is at:\n            # Index 1 - date string i.e. 'Monday 01/01/2023'\n            # Index 3 - bin type i.e. 'General waste'\n            typeAndDateDivs = collectionDiv.findChildren()\n    \n            # Strip the day (i.e. Monday) out of the collection date string for parsing\n            dateString = typeAndDateDivs[1].text.split(' ')[1]\n    \n            data[\"bins\"].append(\n                {\n>                   \"type\": typeAndDateDivs[3].text,\n                    \"collectionDate\": datetime.strptime(dateString, \"%d/%m/%Y\").strftime(date_format)\n                }\n            )\nE           IndexError: list index out of range\n\nuk_bin_collection/uk_bin_collection/councils/PrestonCityCouncil.py:98: IndexError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"IndexError: list index out of range","statusTrace":"request = <FixtureRequest for <Function test_scenario_outline[PrestonCityCouncil]>>\n_pytest_bdd_example = {'council': 'PrestonCityCouncil'}\n\n    @pytest.mark.usefixtures(*func_args)\n    def scenario_wrapper(request: FixtureRequest, _pytest_bdd_example: dict[str, str]) -> Any:\n        scenario = templated_scenario.render(_pytest_bdd_example)\n>       _execute_scenario(feature, scenario, request)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/pytest_bdd/scenario.py:187: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/pytest_bdd/scenario.py:157: in _execute_scenario\n    _execute_step_function(request, scenario, step, step_func)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/pytest_bdd/scenario.py:127: in _execute_step_function\n    return_value = call_fixture_func(fixturefunc=step_func, request=request, kwargs=kwargs)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\nuk_bin_collection/tests/step_defs/test_validate_council.py:62: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:58: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:71: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:59: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:70: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <PrestonCityCouncil.CouncilClass object at 0x7f9a636b85d0>\npage = 'https://selfservice.preston.gov.uk/service/Forms/FindMyNearest.aspx?Service=bins'\nkwargs = {'paon': 'Town Hall', 'postcode': 'PR1 2RL', 'uprn': None, 'usrn': None}\ndata = {'bins': []}, user_paon = 'Town Hall', user_postcode = 'PR1 2RL'\noptions = <selenium.webdriver.chrome.options.Options object at 0x7f9a636e3b90>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"31698bfb5415883c473c31fd74be601c\")>\ninputElement_address = <selenium.webdriver.remote.webelement.WebElement (session=\"31698bfb5415883c473c31fd74be601c\", element=\"8272A0C1E5973202518AEDD35A4221D9_element_16\")>\ndropdown = <selenium.webdriver.remote.webelement.WebElement (session=\"31698bfb5415883c473c31fd74be601c\", element=\"15050C5FCED25DBDB52C997EB4CCFF97_element_23\")>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        page = \"https://selfservice.preston.gov.uk/service/Forms/FindMyNearest.aspx?Service=bins\"\n    \n        data = {\"bins\": []}\n    \n        user_paon = kwargs.get(\"paon\")\n        user_postcode = kwargs.get(\"postcode\")\n        check_paon(user_paon)\n        check_postcode(user_postcode)\n    \n        # Set up Selenium to run 'headless'\n        options = webdriver.ChromeOptions()\n        options.add_argument(\"--headless\")\n        options.add_argument(\"--no-sandbox\")\n        options.add_argument(\"--disable-gpu\")\n        options.add_argument(\"--disable-dev-shm-usage\")\n        options.add_experimental_option(\"excludeSwitches\", [\"enable-logging\"])\n    \n        # Create Selenium webdriver\n        driver = webdriver.Chrome(options=options)\n        driver.get(page)\n    \n        # If you bang in the house number (or property name) and postcode in the box it should find your property\n        inputElement_address = driver.find_element(\n            By.ID,\n            \"MainContent_txtAddress\",\n        )\n    \n        inputElement_address.send_keys(user_paon)\n        inputElement_address.send_keys(\" \")\n        inputElement_address.send_keys(user_postcode)\n    \n        driver.find_element(\n            By.ID,\n            \"btnSearch\",\n        ).click()\n    \n        # Wait for the 'Select your property' dropdown to appear and select the first result\n        dropdown = WebDriverWait(driver, 10).until(\n            EC.presence_of_element_located((By.ID, \"MainContent_ddlSearchResults\"))\n        )\n        # Create a 'Select' for it, then select the first address in the list\n        # (Index 0 is \"Make a selection from the list\")\n        dropdownSelect = Select(dropdown)\n        dropdownSelect.select_by_index(1)\n    \n        # Wait for the 'View more' link to appear, then click it to get the full set of dates\n        viewMoreLink = WebDriverWait(driver, 10).until(\n            EC.presence_of_element_located((By.LINK_TEXT, \"View more collection dates\"))\n        )\n        viewMoreLink.click()\n    \n        soup = BeautifulSoup(driver.page_source, features=\"html.parser\")\n    \n        topLevelSpan = soup.find(\n            \"span\",\n            id=\"lblCollectionDates\"\n        )\n    \n        collectionDivs = topLevelSpan.findChildren(recursive=False)\n        for collectionDiv in collectionDivs:\n            # Each date has two child divs - the date and the bin type\n            # However both strings are in <b> tags so there are 4 children, the text is at:\n            # Index 1 - date string i.e. 'Monday 01/01/2023'\n            # Index 3 - bin type i.e. 'General waste'\n            typeAndDateDivs = collectionDiv.findChildren()\n    \n            # Strip the day (i.e. Monday) out of the collection date string for parsing\n            dateString = typeAndDateDivs[1].text.split(' ')[1]\n    \n            data[\"bins\"].append(\n                {\n>                   \"type\": typeAndDateDivs[3].text,\n                    \"collectionDate\": datetime.strptime(dateString, \"%d/%m/%Y\").strftime(date_format)\n                }\n            )\nE           IndexError: list index out of range\n\nuk_bin_collection/uk_bin_collection/councils/PrestonCityCouncil.py:98: IndexError","steps":[{"name":"Given the council: PrestonCityCouncil","time":{"start":1692494154978,"stop":1692494154978,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"When we scrape the data from PrestonCityCouncil","time":{"start":1692494154978,"stop":1692494160518,"duration":5540},"status":"failed","statusMessage":"list index out of range","statusTrace":"IndexError: list index out of range\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[],"parameters":[],"stepsCount":2,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az449-127"},{"name":"thread","value":"2140-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"PrestonCityCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":42,"broken":0,"skipped":0,"passed":1,"unknown":0,"total":43},"items":[{"uid":"3537f694f1453202","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/865//#testresult/3537f694f1453202","status":"failed","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55fd63954613 <unknown>\n#1 0x55fd63680537 <unknown>\n#2 0x55fd636bef53 <unknown>\n#3 0x55fd636bf041 <unknown>\n#4 0x55fd636fa2a4 <unknown>\n#5 0x55fd636dfa5d <unknown>\n#6 0x55fd636f7d09 <unknown>\n#7 0x55fd636df803 <unknown>\n#8 0x55fd636b368b <unknown>\n#9 0x55fd636b442e <unknown>\n#10 0x55fd63915c28 <unknown>\n#11 0x55fd63919af7 <unknown>\n#12 0x55fd6392401c <unknown>\n#13 0x55fd6391a723 <unknown>\n#14 0x55fd638e9457 <unknown>\n#15 0x55fd6393e628 <unknown>\n#16 0x55fd6393e7b7 <unknown>\n#17 0x55fd6394d483 <unknown>\n#18 0x7f6d11be0b43 <unknown>","time":{"start":1692407427288,"stop":1692407501655,"duration":74367}},{"uid":"baf93f181d56c122","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/864//#testresult/baf93f181d56c122","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1692321137679,"stop":1692321144748,"duration":7069}},{"uid":"9e1011a4d8868663","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/863//#testresult/9e1011a4d8868663","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1692294281647,"stop":1692294287078,"duration":5431}},{"uid":"a6f55d692a848716","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/861//#testresult/a6f55d692a848716","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1692234685468,"stop":1692234692016,"duration":6548}},{"uid":"ae3efffe7fa27db7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/860//#testresult/ae3efffe7fa27db7","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1692208482552,"stop":1692208487430,"duration":4878}},{"uid":"4b0a18f0a0b837aa","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/859//#testresult/4b0a18f0a0b837aa","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1692148305375,"stop":1692148310882,"duration":5507}},{"uid":"8255720468ab31f4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/858//#testresult/8255720468ab31f4","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1692061926703,"stop":1692061931324,"duration":4621}},{"uid":"4804b34eb6ef0200","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/856//#testresult/4804b34eb6ef0200","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1691975574790,"stop":1691975580589,"duration":5799}},{"uid":"38899f3bf2f411b8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/855//#testresult/38899f3bf2f411b8","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1691889314639,"stop":1691889319227,"duration":4588}},{"uid":"862ee6a5657cf62","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/854//#testresult/862ee6a5657cf62","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1691802658421,"stop":1691802665334,"duration":6913}},{"uid":"5416980329e21b83","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/853//#testresult/5416980329e21b83","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1691716257192,"stop":1691716261506,"duration":4314}},{"uid":"ebc33cd40f80178a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/852//#testresult/ebc33cd40f80178a","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1691630824454,"stop":1691630830862,"duration":6408}},{"uid":"484cefcddf67abbe","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/851//#testresult/484cefcddf67abbe","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1691612020099,"stop":1691612026575,"duration":6476}},{"uid":"747440e853450f5a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/847//#testresult/747440e853450f5a","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1691544376371,"stop":1691544381921,"duration":5550}},{"uid":"4cef7331a84cc39c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/846//#testresult/4cef7331a84cc39c","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1691457743921,"stop":1691457748802,"duration":4881}},{"uid":"6ce576ff0ee01e4b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/845//#testresult/6ce576ff0ee01e4b","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1691371659340,"stop":1691371664740,"duration":5400}},{"uid":"21838075651f5431","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/844//#testresult/21838075651f5431","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1691284834105,"stop":1691284840566,"duration":6461}},{"uid":"1d26052bd2c456b0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/843//#testresult/1d26052bd2c456b0","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1691198533642,"stop":1691198538201,"duration":4559}},{"uid":"27e7930f4df77a3d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/842//#testresult/27e7930f4df77a3d","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1691112317322,"stop":1691112322326,"duration":5004}},{"uid":"5bbf3fd10fd106a7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/841//#testresult/5bbf3fd10fd106a7","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1691025990980,"stop":1691025995699,"duration":4719}}]},"tags":[]},"source":"29b7ef54d68639b7.json","parameterValues":["PrestonCityCouncil"]}