{"uid":"ef3b12ad45454571","name":"Validate Council Output [CroydonCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"cc336f6dd92ae6b8042805cd6f13d13e","time":{"start":1693444387817,"stop":1693444392924,"duration":5107},"status":"failed","statusMessage":"AttributeError: 'NoneType' object has no attribute 'attrs'","statusTrace":"request = <FixtureRequest for <Function test_scenario_outline[CroydonCouncil]>>\n_pytest_bdd_example = {'council': 'CroydonCouncil'}\n\n    @pytest.mark.usefixtures(*func_args)\n    def scenario_wrapper(request: FixtureRequest, _pytest_bdd_example: dict[str, str]) -> Any:\n        scenario = templated_scenario.render(_pytest_bdd_example)\n>       _execute_scenario(feature, scenario, request)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/pytest_bdd/scenario.py:187: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/pytest_bdd/scenario.py:157: in _execute_scenario\n    _execute_step_function(request, scenario, step, step_func)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/pytest_bdd/scenario.py:127: in _execute_step_function\n    return_value = call_fixture_func(fixturefunc=step_func, request=request, kwargs=kwargs)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\nuk_bin_collection/tests/step_defs/test_validate_council.py:62: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:58: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:71: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:59: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:70: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <CroydonCouncil.CouncilClass object at 0x7fdece3a6c90>, page = ''\nkwargs = {'paon': '13', 'postcode': 'SE25 5DW', 'uprn': None, 'usrn': None}\ns = <requests.sessions.Session object at 0x7fdece3a6c10>\nbase_url = 'https://service.croydon.gov.uk', paon = '13', postcode = 'SE25 5DW'\ncsrf_token = '784a01dd2b61aa673f646b47f60bde701246b547', address_id = '96383'\ncollection_data = '<input type=\"hidden\" id=\"page_title\" value=\"Check your bin collections - Croydon Council\"><script type=\"text/javascri...v>\\n</div></div></div></div></div>\\n\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n'\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        requests.packages.urllib3.disable_warnings()\n        s = requests.session()\n        base_url = \"https://service.croydon.gov.uk\"\n        paon = kwargs.get(\"paon\")\n        postcode = kwargs.get(\"postcode\")\n        check_paon(paon)\n        check_postcode(postcode)\n    \n        # Firstly, get a CSRF (cross-site request forgery) token\n        csrf_token = get_csrf_token(s, base_url)\n        # Next, get the address_id\n        address_id = get_address_id(s, base_url, csrf_token, postcode, paon)\n        # Finally, use the address_id to get the collection data\n        collection_data = get_collection_data(s, base_url, csrf_token, address_id)\n        if collection_data != \"\":\n            soup = BeautifulSoup(collection_data, features=\"html.parser\")\n            soup.prettify()\n    \n            # Find the list elements\n            collection_record_elements = soup.find_all(\n                \"div\", {\"class\": \"listing_template_record\"}\n            )\n    \n            # Form a JSON wrapper\n            data = {\"bins\": []}\n    \n            for e in collection_record_elements:\n                collection_type = e.find_all(\n                    \"div\", {\"class\": \"fragment_presenter_template_show\"}\n                )[0].text.strip()\n                collection_date = (\n                    e.find(\"div\", {\"class\": \"bin-collection-next\"})\n>                   .attrs[\"data-current_value\"]\n                    .strip()\n                )\nE               AttributeError: 'NoneType' object has no attribute 'attrs'\n\nuk_bin_collection/uk_bin_collection/councils/CroydonCouncil.py:275: AttributeError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AttributeError: 'NoneType' object has no attribute 'attrs'","statusTrace":"request = <FixtureRequest for <Function test_scenario_outline[CroydonCouncil]>>\n_pytest_bdd_example = {'council': 'CroydonCouncil'}\n\n    @pytest.mark.usefixtures(*func_args)\n    def scenario_wrapper(request: FixtureRequest, _pytest_bdd_example: dict[str, str]) -> Any:\n        scenario = templated_scenario.render(_pytest_bdd_example)\n>       _execute_scenario(feature, scenario, request)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/pytest_bdd/scenario.py:187: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/pytest_bdd/scenario.py:157: in _execute_scenario\n    _execute_step_function(request, scenario, step, step_func)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/pytest_bdd/scenario.py:127: in _execute_step_function\n    return_value = call_fixture_func(fixturefunc=step_func, request=request, kwargs=kwargs)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\nuk_bin_collection/tests/step_defs/test_validate_council.py:62: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:58: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:71: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:59: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:70: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <CroydonCouncil.CouncilClass object at 0x7fdece3a6c90>, page = ''\nkwargs = {'paon': '13', 'postcode': 'SE25 5DW', 'uprn': None, 'usrn': None}\ns = <requests.sessions.Session object at 0x7fdece3a6c10>\nbase_url = 'https://service.croydon.gov.uk', paon = '13', postcode = 'SE25 5DW'\ncsrf_token = '784a01dd2b61aa673f646b47f60bde701246b547', address_id = '96383'\ncollection_data = '<input type=\"hidden\" id=\"page_title\" value=\"Check your bin collections - Croydon Council\"><script type=\"text/javascri...v>\\n</div></div></div></div></div>\\n\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n'\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        requests.packages.urllib3.disable_warnings()\n        s = requests.session()\n        base_url = \"https://service.croydon.gov.uk\"\n        paon = kwargs.get(\"paon\")\n        postcode = kwargs.get(\"postcode\")\n        check_paon(paon)\n        check_postcode(postcode)\n    \n        # Firstly, get a CSRF (cross-site request forgery) token\n        csrf_token = get_csrf_token(s, base_url)\n        # Next, get the address_id\n        address_id = get_address_id(s, base_url, csrf_token, postcode, paon)\n        # Finally, use the address_id to get the collection data\n        collection_data = get_collection_data(s, base_url, csrf_token, address_id)\n        if collection_data != \"\":\n            soup = BeautifulSoup(collection_data, features=\"html.parser\")\n            soup.prettify()\n    \n            # Find the list elements\n            collection_record_elements = soup.find_all(\n                \"div\", {\"class\": \"listing_template_record\"}\n            )\n    \n            # Form a JSON wrapper\n            data = {\"bins\": []}\n    \n            for e in collection_record_elements:\n                collection_type = e.find_all(\n                    \"div\", {\"class\": \"fragment_presenter_template_show\"}\n                )[0].text.strip()\n                collection_date = (\n                    e.find(\"div\", {\"class\": \"bin-collection-next\"})\n>                   .attrs[\"data-current_value\"]\n                    .strip()\n                )\nE               AttributeError: 'NoneType' object has no attribute 'attrs'\n\nuk_bin_collection/uk_bin_collection/councils/CroydonCouncil.py:275: AttributeError","steps":[{"name":"Given the council: CroydonCouncil","time":{"start":1693444387817,"stop":1693444387817,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"When we scrape the data from CroydonCouncil","time":{"start":1693444387818,"stop":1693444392924,"duration":5106},"status":"failed","statusMessage":"'NoneType' object has no attribute 'attrs'","statusTrace":"AttributeError: 'NoneType' object has no attribute 'attrs'\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[],"parameters":[],"stepsCount":2,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az622-914"},{"name":"thread","value":"2069-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"CroydonCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":30,"broken":0,"skipped":0,"passed":25,"unknown":0,"total":55},"items":[{"uid":"bd1175b01a4ebbec","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/879//#testresult/bd1175b01a4ebbec","status":"passed","time":{"start":1693357945233,"stop":1693357949603,"duration":4370}},{"uid":"49a9854b7638bea1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/878//#testresult/49a9854b7638bea1","status":"passed","time":{"start":1693271578438,"stop":1693271582915,"duration":4477}},{"uid":"7dd2c8f40fb2d804","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/877//#testresult/7dd2c8f40fb2d804","status":"passed","time":{"start":1693185205117,"stop":1693185209118,"duration":4001}},{"uid":"8dd42641ca31aee","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/876//#testresult/8dd42641ca31aee","status":"passed","time":{"start":1693098963795,"stop":1693098968474,"duration":4679}},{"uid":"247353fd74027e7d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/875//#testresult/247353fd74027e7d","status":"passed","time":{"start":1693012183982,"stop":1693012188616,"duration":4634}},{"uid":"d5014a29ccaa86b6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/874//#testresult/d5014a29ccaa86b6","status":"passed","time":{"start":1692925960565,"stop":1692925965093,"duration":4528}},{"uid":"4b20c9fa7c542775","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/873//#testresult/4b20c9fa7c542775","status":"failed","statusDetails":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","time":{"start":1692839471117,"stop":1692839473343,"duration":2226}},{"uid":"489446434f5738da","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/871//#testresult/489446434f5738da","status":"passed","time":{"start":1692753074792,"stop":1692753079407,"duration":4615}},{"uid":"852f97c9cb628a77","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/870//#testresult/852f97c9cb628a77","status":"failed","statusDetails":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","time":{"start":1692666738165,"stop":1692666739784,"duration":1619}},{"uid":"a802e1c49f8c27d4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/869//#testresult/a802e1c49f8c27d4","status":"passed","time":{"start":1692624229711,"stop":1692624234396,"duration":4685}},{"uid":"52bb87872933be6a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/867//#testresult/52bb87872933be6a","status":"passed","time":{"start":1692580267483,"stop":1692580271782,"duration":4299}},{"uid":"5ed54c6df7c47ae9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/866//#testresult/5ed54c6df7c47ae9","status":"failed","statusDetails":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","time":{"start":1692494059484,"stop":1692494061117,"duration":1633}},{"uid":"9e8652f4c9910262","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/865//#testresult/9e8652f4c9910262","status":"failed","statusDetails":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","time":{"start":1692407323739,"stop":1692407325249,"duration":1510}},{"uid":"fdb34b5186958cf6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/864//#testresult/fdb34b5186958cf6","status":"failed","statusDetails":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","time":{"start":1692321048291,"stop":1692321050281,"duration":1990}},{"uid":"287b6e1cd33fe86b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/863//#testresult/287b6e1cd33fe86b","status":"failed","statusDetails":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","time":{"start":1692294227453,"stop":1692294229147,"duration":1694}},{"uid":"f98ffe68ed7ddbf3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/861//#testresult/f98ffe68ed7ddbf3","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'attrs'","time":{"start":1692234600743,"stop":1692234605307,"duration":4564}},{"uid":"84919d74b4db7a74","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/860//#testresult/84919d74b4db7a74","status":"passed","time":{"start":1692208420378,"stop":1692208424648,"duration":4270}},{"uid":"b6c472d1dad75e57","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/859//#testresult/b6c472d1dad75e57","status":"passed","time":{"start":1692148255628,"stop":1692148260358,"duration":4730}},{"uid":"928a5c9099dedb02","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/858//#testresult/928a5c9099dedb02","status":"passed","time":{"start":1692061874881,"stop":1692061879049,"duration":4168}},{"uid":"94e98ff8c1653849","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/856//#testresult/94e98ff8c1653849","status":"passed","time":{"start":1691975527246,"stop":1691975532104,"duration":4858}}]},"tags":[]},"source":"ef3b12ad45454571.json","parameterValues":["CroydonCouncil"]}