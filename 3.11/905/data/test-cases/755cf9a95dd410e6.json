{"uid":"755cf9a95dd410e6","name":"Validate Council Output [CroydonCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"cc336f6dd92ae6b8042805cd6f13d13e","time":{"start":1694653936546,"stop":1694653940790,"duration":4244},"status":"failed","statusMessage":"AttributeError: 'NoneType' object has no attribute 'attrs'","statusTrace":"request = <FixtureRequest for <Function test_scenario_outline[CroydonCouncil]>>\n_pytest_bdd_example = {'council': 'CroydonCouncil'}\n\n    @pytest.mark.usefixtures(*func_args)\n    def scenario_wrapper(request: FixtureRequest, _pytest_bdd_example: dict[str, str]) -> Any:\n        scenario = templated_scenario.render(_pytest_bdd_example)\n>       _execute_scenario(feature, scenario, request)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/pytest_bdd/scenario.py:187: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/pytest_bdd/scenario.py:157: in _execute_scenario\n    _execute_step_function(request, scenario, step, step_func)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/pytest_bdd/scenario.py:127: in _execute_step_function\n    return_value = call_fixture_func(fixturefunc=step_func, request=request, kwargs=kwargs)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\nuk_bin_collection/tests/step_defs/test_validate_council.py:62: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:58: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:71: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:59: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:70: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <CroydonCouncil.CouncilClass object at 0x7ffa512a5c50>, page = ''\nkwargs = {'paon': '13', 'postcode': 'SE25 5DW', 'uprn': None, 'usrn': None}\ns = <requests.sessions.Session object at 0x7ffa514394d0>\nbase_url = 'https://service.croydon.gov.uk', paon = '13', postcode = 'SE25 5DW'\ncsrf_token = 'd5baa1eaada441c4a377212e75e290ae8b5b0f3a', address_id = '96383'\ncollection_data = '<input type=\"hidden\" id=\"page_title\" value=\"Check your bin collections - Croydon Council\"><script type=\"text/javascri...v>\\n</div></div></div></div></div>\\n\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n'\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        requests.packages.urllib3.disable_warnings()\n        s = requests.session()\n        base_url = \"https://service.croydon.gov.uk\"\n        paon = kwargs.get(\"paon\")\n        postcode = kwargs.get(\"postcode\")\n        check_paon(paon)\n        check_postcode(postcode)\n    \n        # Firstly, get a CSRF (cross-site request forgery) token\n        csrf_token = get_csrf_token(s, base_url)\n        # Next, get the address_id\n        address_id = get_address_id(s, base_url, csrf_token, postcode, paon)\n        # Finally, use the address_id to get the collection data\n        collection_data = get_collection_data(s, base_url, csrf_token, address_id)\n        if collection_data != \"\":\n            soup = BeautifulSoup(collection_data, features=\"html.parser\")\n            soup.prettify()\n    \n            # Find the list elements\n            collection_record_elements = soup.find_all(\n                \"div\", {\"class\": \"listing_template_record\"}\n            )\n    \n            # Form a JSON wrapper\n            data = {\"bins\": []}\n    \n            for e in collection_record_elements:\n                collection_type = e.find_all(\n                    \"div\", {\"class\": \"fragment_presenter_template_show\"}\n                )[0].text.strip()\n                collection_date = (\n                    e.find(\"div\", {\"class\": \"bin-collection-next\"})\n>                   .attrs[\"data-current_value\"]\n                    .strip()\n                )\nE               AttributeError: 'NoneType' object has no attribute 'attrs'\n\nuk_bin_collection/uk_bin_collection/councils/CroydonCouncil.py:275: AttributeError","flaky":true,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AttributeError: 'NoneType' object has no attribute 'attrs'","statusTrace":"request = <FixtureRequest for <Function test_scenario_outline[CroydonCouncil]>>\n_pytest_bdd_example = {'council': 'CroydonCouncil'}\n\n    @pytest.mark.usefixtures(*func_args)\n    def scenario_wrapper(request: FixtureRequest, _pytest_bdd_example: dict[str, str]) -> Any:\n        scenario = templated_scenario.render(_pytest_bdd_example)\n>       _execute_scenario(feature, scenario, request)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/pytest_bdd/scenario.py:187: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/pytest_bdd/scenario.py:157: in _execute_scenario\n    _execute_step_function(request, scenario, step, step_func)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/pytest_bdd/scenario.py:127: in _execute_step_function\n    return_value = call_fixture_func(fixturefunc=step_func, request=request, kwargs=kwargs)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\nuk_bin_collection/tests/step_defs/test_validate_council.py:62: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:58: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:71: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:59: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:70: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <CroydonCouncil.CouncilClass object at 0x7ffa512a5c50>, page = ''\nkwargs = {'paon': '13', 'postcode': 'SE25 5DW', 'uprn': None, 'usrn': None}\ns = <requests.sessions.Session object at 0x7ffa514394d0>\nbase_url = 'https://service.croydon.gov.uk', paon = '13', postcode = 'SE25 5DW'\ncsrf_token = 'd5baa1eaada441c4a377212e75e290ae8b5b0f3a', address_id = '96383'\ncollection_data = '<input type=\"hidden\" id=\"page_title\" value=\"Check your bin collections - Croydon Council\"><script type=\"text/javascri...v>\\n</div></div></div></div></div>\\n\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n'\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        requests.packages.urllib3.disable_warnings()\n        s = requests.session()\n        base_url = \"https://service.croydon.gov.uk\"\n        paon = kwargs.get(\"paon\")\n        postcode = kwargs.get(\"postcode\")\n        check_paon(paon)\n        check_postcode(postcode)\n    \n        # Firstly, get a CSRF (cross-site request forgery) token\n        csrf_token = get_csrf_token(s, base_url)\n        # Next, get the address_id\n        address_id = get_address_id(s, base_url, csrf_token, postcode, paon)\n        # Finally, use the address_id to get the collection data\n        collection_data = get_collection_data(s, base_url, csrf_token, address_id)\n        if collection_data != \"\":\n            soup = BeautifulSoup(collection_data, features=\"html.parser\")\n            soup.prettify()\n    \n            # Find the list elements\n            collection_record_elements = soup.find_all(\n                \"div\", {\"class\": \"listing_template_record\"}\n            )\n    \n            # Form a JSON wrapper\n            data = {\"bins\": []}\n    \n            for e in collection_record_elements:\n                collection_type = e.find_all(\n                    \"div\", {\"class\": \"fragment_presenter_template_show\"}\n                )[0].text.strip()\n                collection_date = (\n                    e.find(\"div\", {\"class\": \"bin-collection-next\"})\n>                   .attrs[\"data-current_value\"]\n                    .strip()\n                )\nE               AttributeError: 'NoneType' object has no attribute 'attrs'\n\nuk_bin_collection/uk_bin_collection/councils/CroydonCouncil.py:275: AttributeError","steps":[{"name":"Given the council: CroydonCouncil","time":{"start":1694653936547,"stop":1694653936547,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"When we scrape the data from CroydonCouncil","time":{"start":1694653936547,"stop":1694653940790,"duration":4243},"status":"failed","statusMessage":"'NoneType' object has no attribute 'attrs'","statusTrace":"AttributeError: 'NoneType' object has no attribute 'attrs'\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az887-453"},{"name":"thread","value":"2189-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"CroydonCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":36,"broken":0,"skipped":0,"passed":35,"unknown":0,"total":71},"items":[{"uid":"23f82eb4fcded661","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/904//#testresult/23f82eb4fcded661","status":"failed","statusDetails":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","time":{"start":1694567667524,"stop":1694567669859,"duration":2335}},{"uid":"635ddbcdd441ef3d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/903//#testresult/635ddbcdd441ef3d","status":"passed","time":{"start":1694481082984,"stop":1694481087002,"duration":4018}},{"uid":"178ce9e1423c0e6b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/902//#testresult/178ce9e1423c0e6b","status":"failed","statusDetails":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","time":{"start":1694394842274,"stop":1694394843521,"duration":1247}},{"uid":"26ca588b66039377","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/901//#testresult/26ca588b66039377","status":"passed","time":{"start":1694365154699,"stop":1694365160473,"duration":5774}},{"uid":"8cf31d2add7bb5c3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/899//#testresult/8cf31d2add7bb5c3","status":"passed","time":{"start":1694308609861,"stop":1694308614636,"duration":4775}},{"uid":"c05c6d51b77eb541","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/891//#testresult/c05c6d51b77eb541","status":"passed","time":{"start":1694240272974,"stop":1694240277275,"duration":4301}},{"uid":"b9017caccfd7de97","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/890//#testresult/b9017caccfd7de97","status":"failed","statusDetails":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","time":{"start":1694221860287,"stop":1694221862401,"duration":2114}},{"uid":"676ceab4fd97d504","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/889//#testresult/676ceab4fd97d504","status":"passed","time":{"start":1694135604834,"stop":1694135609689,"duration":4855}},{"uid":"ec3337809b78b019","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/888//#testresult/ec3337809b78b019","status":"failed","statusDetails":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","time":{"start":1694049194926,"stop":1694049196840,"duration":1914}},{"uid":"55479c32796cc9db","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/887//#testresult/55479c32796cc9db","status":"passed","time":{"start":1693962761319,"stop":1693962765649,"duration":4330}},{"uid":"d143daa3ede218af","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/885//#testresult/d143daa3ede218af","status":"passed","time":{"start":1693876286343,"stop":1693876290710,"duration":4367}},{"uid":"96b93814498c1903","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/884//#testresult/96b93814498c1903","status":"passed","time":{"start":1693790030837,"stop":1693790035274,"duration":4437}},{"uid":"1dc6d2a90705db61","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/883//#testresult/1dc6d2a90705db61","status":"passed","time":{"start":1693703788010,"stop":1693703793255,"duration":5245}},{"uid":"fb934693923ad8ea","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/882//#testresult/fb934693923ad8ea","status":"passed","time":{"start":1693617013708,"stop":1693617021307,"duration":7599}},{"uid":"142228644282d555","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/881//#testresult/142228644282d555","status":"failed","statusDetails":"ValueError: Code 5: Failed to get bin data. Too many requests. Please wait a few minutes before trying again.","time":{"start":1693531036949,"stop":1693531038473,"duration":1524}},{"uid":"ef3b12ad45454571","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/880//#testresult/ef3b12ad45454571","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'attrs'","time":{"start":1693444387817,"stop":1693444392924,"duration":5107}},{"uid":"bd1175b01a4ebbec","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/879//#testresult/bd1175b01a4ebbec","status":"passed","time":{"start":1693357945233,"stop":1693357949603,"duration":4370}},{"uid":"49a9854b7638bea1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/878//#testresult/49a9854b7638bea1","status":"passed","time":{"start":1693271578438,"stop":1693271582915,"duration":4477}},{"uid":"7dd2c8f40fb2d804","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/877//#testresult/7dd2c8f40fb2d804","status":"passed","time":{"start":1693185205117,"stop":1693185209118,"duration":4001}},{"uid":"8dd42641ca31aee","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/876//#testresult/8dd42641ca31aee","status":"passed","time":{"start":1693098963795,"stop":1693098968474,"duration":4679}}]},"tags":[]},"source":"755cf9a95dd410e6.json","parameterValues":["CroydonCouncil"]}