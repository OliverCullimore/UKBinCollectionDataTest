{"uid":"41b6b44272b4aaef","name":"Validate Council Output [StHelensBC]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"aefb4666f5cfa7265d9db53c16df38b6","time":{"start":1694654126308,"stop":1694654134326,"duration":8018},"status":"failed","statusMessage":"ValueError: time data 'Fri 22 Sept 2023' does not match format '%a %d %b %Y'","statusTrace":"request = <FixtureRequest for <Function test_scenario_outline[StHelensBC]>>\n_pytest_bdd_example = {'council': 'StHelensBC'}\n\n    @pytest.mark.usefixtures(*func_args)\n    def scenario_wrapper(request: FixtureRequest, _pytest_bdd_example: dict[str, str]) -> Any:\n        scenario = templated_scenario.render(_pytest_bdd_example)\n>       _execute_scenario(feature, scenario, request)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/pytest_bdd/scenario.py:187: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/pytest_bdd/scenario.py:157: in _execute_scenario\n    _execute_step_function(request, scenario, step, step_func)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/pytest_bdd/scenario.py:127: in _execute_step_function\n    return_value = call_fixture_func(fixturefunc=step_func, request=request, kwargs=kwargs)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\nuk_bin_collection/tests/step_defs/test_validate_council.py:62: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:58: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:71: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:59: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:70: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/StHelensBC.py:43: in parse_data\n    collection_date = datetime.strptime(bin_date.get_text(strip=True), \"%a %d %b %Y\")\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/_strptime.py:568: in _strptime_datetime\n    tt, fraction, gmtoff_fraction = _strptime(data_string, format)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndata_string = 'Fri 22 Sept 2023', format = '%a %d %b %Y'\n\n    def _strptime(data_string, format=\"%a %b %d %H:%M:%S %Y\"):\n        \"\"\"Return a 2-tuple consisting of a time struct and an int containing\n        the number of microseconds based on the input string and the\n        format string.\"\"\"\n    \n        for index, arg in enumerate([data_string, format]):\n            if not isinstance(arg, str):\n                msg = \"strptime() argument {} must be str, not {}\"\n                raise TypeError(msg.format(index, type(arg)))\n    \n        global _TimeRE_cache, _regex_cache\n        with _cache_lock:\n            locale_time = _TimeRE_cache.locale_time\n            if (_getlang() != locale_time.lang or\n                time.tzname != locale_time.tzname or\n                time.daylight != locale_time.daylight):\n                _TimeRE_cache = TimeRE()\n                _regex_cache.clear()\n                locale_time = _TimeRE_cache.locale_time\n            if len(_regex_cache) > _CACHE_MAX_SIZE:\n                _regex_cache.clear()\n            format_regex = _regex_cache.get(format)\n            if not format_regex:\n                try:\n                    format_regex = _TimeRE_cache.compile(format)\n                # KeyError raised when a bad format is found; can be specified as\n                # \\\\, in which case it was a stray % but with a space after it\n                except KeyError as err:\n                    bad_directive = err.args[0]\n                    if bad_directive == \"\\\\\":\n                        bad_directive = \"%\"\n                    del err\n                    raise ValueError(\"'%s' is a bad directive in format '%s'\" %\n                                        (bad_directive, format)) from None\n                # IndexError only occurs when the format string is \"%\"\n                except IndexError:\n                    raise ValueError(\"stray %% in format '%s'\" % format) from None\n                _regex_cache[format] = format_regex\n        found = format_regex.match(data_string)\n        if not found:\n>           raise ValueError(\"time data %r does not match format %r\" %\n                             (data_string, format))\nE           ValueError: time data 'Fri 22 Sept 2023' does not match format '%a %d %b %Y'\n\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/_strptime.py:349: ValueError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"ValueError: time data 'Fri 22 Sept 2023' does not match format '%a %d %b %Y'","statusTrace":"request = <FixtureRequest for <Function test_scenario_outline[StHelensBC]>>\n_pytest_bdd_example = {'council': 'StHelensBC'}\n\n    @pytest.mark.usefixtures(*func_args)\n    def scenario_wrapper(request: FixtureRequest, _pytest_bdd_example: dict[str, str]) -> Any:\n        scenario = templated_scenario.render(_pytest_bdd_example)\n>       _execute_scenario(feature, scenario, request)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/pytest_bdd/scenario.py:187: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/pytest_bdd/scenario.py:157: in _execute_scenario\n    _execute_step_function(request, scenario, step, step_func)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/pytest_bdd/scenario.py:127: in _execute_step_function\n    return_value = call_fixture_func(fixturefunc=step_func, request=request, kwargs=kwargs)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\nuk_bin_collection/tests/step_defs/test_validate_council.py:62: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:58: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:71: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:59: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:70: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/StHelensBC.py:43: in parse_data\n    collection_date = datetime.strptime(bin_date.get_text(strip=True), \"%a %d %b %Y\")\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/_strptime.py:568: in _strptime_datetime\n    tt, fraction, gmtoff_fraction = _strptime(data_string, format)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndata_string = 'Fri 22 Sept 2023', format = '%a %d %b %Y'\n\n    def _strptime(data_string, format=\"%a %b %d %H:%M:%S %Y\"):\n        \"\"\"Return a 2-tuple consisting of a time struct and an int containing\n        the number of microseconds based on the input string and the\n        format string.\"\"\"\n    \n        for index, arg in enumerate([data_string, format]):\n            if not isinstance(arg, str):\n                msg = \"strptime() argument {} must be str, not {}\"\n                raise TypeError(msg.format(index, type(arg)))\n    \n        global _TimeRE_cache, _regex_cache\n        with _cache_lock:\n            locale_time = _TimeRE_cache.locale_time\n            if (_getlang() != locale_time.lang or\n                time.tzname != locale_time.tzname or\n                time.daylight != locale_time.daylight):\n                _TimeRE_cache = TimeRE()\n                _regex_cache.clear()\n                locale_time = _TimeRE_cache.locale_time\n            if len(_regex_cache) > _CACHE_MAX_SIZE:\n                _regex_cache.clear()\n            format_regex = _regex_cache.get(format)\n            if not format_regex:\n                try:\n                    format_regex = _TimeRE_cache.compile(format)\n                # KeyError raised when a bad format is found; can be specified as\n                # \\\\, in which case it was a stray % but with a space after it\n                except KeyError as err:\n                    bad_directive = err.args[0]\n                    if bad_directive == \"\\\\\":\n                        bad_directive = \"%\"\n                    del err\n                    raise ValueError(\"'%s' is a bad directive in format '%s'\" %\n                                        (bad_directive, format)) from None\n                # IndexError only occurs when the format string is \"%\"\n                except IndexError:\n                    raise ValueError(\"stray %% in format '%s'\" % format) from None\n                _regex_cache[format] = format_regex\n        found = format_regex.match(data_string)\n        if not found:\n>           raise ValueError(\"time data %r does not match format %r\" %\n                             (data_string, format))\nE           ValueError: time data 'Fri 22 Sept 2023' does not match format '%a %d %b %Y'\n\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/_strptime.py:349: ValueError","steps":[{"name":"Given the council: StHelensBC","time":{"start":1694654126308,"stop":1694654126309,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"When we scrape the data from StHelensBC","time":{"start":1694654126309,"stop":1694654134326,"duration":8017},"status":"failed","statusMessage":"time data 'Fri 22 Sept 2023' does not match format '%a %d %b %Y'","statusTrace":"ValueError: time data 'Fri 22 Sept 2023' does not match format '%a %d %b %Y'\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az887-453"},{"name":"thread","value":"2186-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"StHelensBC"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":56,"broken":0,"skipped":0,"passed":15,"unknown":0,"total":71},"items":[{"uid":"e356e6df251841ba","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/904//#testresult/e356e6df251841ba","status":"failed","statusDetails":"requests.exceptions.SSLError: HTTPSConnectionPool(host='secure.sthelens.net', port=443): Max retries exceeded with url: /website/CollectionDates.nsf/servlet.xsp/NextCollections?source=1&refid=39081672 (Caused by SSLError(SSLCertVerificationError(1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: certificate has expired (_ssl.c:1006)')))","time":{"start":1694567940597,"stop":1694567941173,"duration":576}},{"uid":"8a74c0047bddbdf7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/903//#testresult/8a74c0047bddbdf7","status":"failed","statusDetails":"ValueError: time data 'Fri 22 Sept 2023' does not match format '%a %d %b %Y'","time":{"start":1694481284464,"stop":1694481287506,"duration":3042}},{"uid":"47846d6e2e48fe09","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/902//#testresult/47846d6e2e48fe09","status":"failed","statusDetails":"ValueError: time data 'Fri 22 Sept 2023' does not match format '%a %d %b %Y'","time":{"start":1694395016533,"stop":1694395019113,"duration":2580}},{"uid":"840ad27157cd60e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/901//#testresult/840ad27157cd60e","status":"failed","statusDetails":"ValueError: time data 'Fri 22 Sept 2023' does not match format '%a %d %b %Y'","time":{"start":1694365385790,"stop":1694365386746,"duration":956}},{"uid":"7f60501ae0dc1e3c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/899//#testresult/7f60501ae0dc1e3c","status":"failed","statusDetails":"ValueError: time data 'Fri 22 Sept 2023' does not match format '%a %d %b %Y'","time":{"start":1694308846666,"stop":1694308847412,"duration":746}},{"uid":"ea437c2de6d931a9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/891//#testresult/ea437c2de6d931a9","status":"failed","statusDetails":"ValueError: time data 'Fri 22 Sept 2023' does not match format '%a %d %b %Y'","time":{"start":1694240465527,"stop":1694240473566,"duration":8039}},{"uid":"dc5d19b0ec9e6c11","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/890//#testresult/dc5d19b0ec9e6c11","status":"failed","statusDetails":"ValueError: time data 'Fri 22 Sept 2023' does not match format '%a %d %b %Y'","time":{"start":1694222135008,"stop":1694222140779,"duration":5771}},{"uid":"c85fcff705cddbe7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/889//#testresult/c85fcff705cddbe7","status":"failed","statusDetails":"ValueError: time data 'Fri 8 Sept 2023' does not match format '%a %d %b %Y'","time":{"start":1694135833656,"stop":1694135839406,"duration":5750}},{"uid":"fcd0844603c32b61","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/888//#testresult/fcd0844603c32b61","status":"failed","statusDetails":"ValueError: time data 'Fri 8 Sept 2023' does not match format '%a %d %b %Y'","time":{"start":1694049438702,"stop":1694049441939,"duration":3237}},{"uid":"d2767d8c4698e6e9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/887//#testresult/d2767d8c4698e6e9","status":"failed","statusDetails":"ValueError: time data 'Fri 8 Sept 2023' does not match format '%a %d %b %Y'","time":{"start":1693962971117,"stop":1693962971701,"duration":584}},{"uid":"e5504d290738f832","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/885//#testresult/e5504d290738f832","status":"failed","statusDetails":"ValueError: time data 'Fri 8 Sept 2023' does not match format '%a %d %b %Y'","time":{"start":1693876510945,"stop":1693876516572,"duration":5627}},{"uid":"fedfe2aef5dd54a7","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/884//#testresult/fedfe2aef5dd54a7","status":"failed","statusDetails":"ValueError: time data 'Fri 8 Sept 2023' does not match format '%a %d %b %Y'","time":{"start":1693790236816,"stop":1693790242421,"duration":5605}},{"uid":"53c779a1551344cf","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/883//#testresult/53c779a1551344cf","status":"failed","statusDetails":"ValueError: time data 'Fri 8 Sept 2023' does not match format '%a %d %b %Y'","time":{"start":1693704089897,"stop":1693704090886,"duration":989}},{"uid":"ce3659f812f98ae0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/882//#testresult/ce3659f812f98ae0","status":"failed","statusDetails":"ValueError: time data 'Fri 8 Sept 2023' does not match format '%a %d %b %Y'","time":{"start":1693617271303,"stop":1693617274553,"duration":3250}},{"uid":"9e6066cb36632dcc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/881//#testresult/9e6066cb36632dcc","status":"failed","statusDetails":"ValueError: time data 'Fri 8 Sept 2023' does not match format '%a %d %b %Y'","time":{"start":1693531235307,"stop":1693531243383,"duration":8076}},{"uid":"fb4527f8938b4f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/880//#testresult/fb4527f8938b4f","status":"failed","statusDetails":"ValueError: time data 'Fri 8 Sept 2023' does not match format '%a %d %b %Y'","time":{"start":1693444612312,"stop":1693444618072,"duration":5760}},{"uid":"c20fdd1e238dc53c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/879//#testresult/c20fdd1e238dc53c","status":"failed","statusDetails":"ValueError: time data 'Fri 8 Sept 2023' does not match format '%a %d %b %Y'","time":{"start":1693358149307,"stop":1693358149935,"duration":628}},{"uid":"6db879823b0bb39b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/878//#testresult/6db879823b0bb39b","status":"failed","statusDetails":"requests.exceptions.ConnectTimeout: HTTPSConnectionPool(host='secure.sthelens.net', port=443): Max retries exceeded with url: /website/CollectionDates.nsf/servlet.xsp/NextCollections?source=1&refid=39081672 (Caused by ConnectTimeoutError(<urllib3.connection.HTTPSConnection object at 0x7f9a510c8690>, 'Connection to secure.sthelens.net timed out. (connect timeout=None)'))","time":{"start":1693271781362,"stop":1693271911344,"duration":129982}},{"uid":"80d5c04babb9012f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/877//#testresult/80d5c04babb9012f","status":"failed","statusDetails":"requests.exceptions.ConnectTimeout: HTTPSConnectionPool(host='secure.sthelens.net', port=443): Max retries exceeded with url: /website/CollectionDates.nsf/servlet.xsp/NextCollections?source=1&refid=39081672 (Caused by ConnectTimeoutError(<urllib3.connection.HTTPSConnection object at 0x7f868ffb7890>, 'Connection to secure.sthelens.net timed out. (connect timeout=None)'))","time":{"start":1693185398912,"stop":1693185529064,"duration":130152}},{"uid":"4f0f48d7c2df4545","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/876//#testresult/4f0f48d7c2df4545","status":"failed","statusDetails":"requests.exceptions.ConnectTimeout: HTTPSConnectionPool(host='secure.sthelens.net', port=443): Max retries exceeded with url: /website/CollectionDates.nsf/servlet.xsp/NextCollections?source=1&refid=39081672 (Caused by ConnectTimeoutError(<urllib3.connection.HTTPSConnection object at 0x7f3b540a3650>, 'Connection to secure.sthelens.net timed out. (connect timeout=None)'))","time":{"start":1693099176091,"stop":1693099307306,"duration":131215}}]},"tags":[]},"source":"41b6b44272b4aaef.json","parameterValues":["StHelensBC"]}