{"uid":"4c2d6f897ef720d5","name":"Validate Council Output [WakefieldCityCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"532d749d88b4b8fb0bc694b350a3d71a","time":{"start":1694913660800,"stop":1694913661667,"duration":867},"status":"failed","statusMessage":"IndexError: list index out of range","statusTrace":"request = <FixtureRequest for <Function test_scenario_outline[WakefieldCityCouncil]>>\n_pytest_bdd_example = {'council': 'WakefieldCityCouncil'}\n\n    @pytest.mark.usefixtures(*func_args)\n    def scenario_wrapper(request: FixtureRequest, _pytest_bdd_example: dict[str, str]) -> Any:\n        scenario = templated_scenario.render(_pytest_bdd_example)\n>       _execute_scenario(feature, scenario, request)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/pytest_bdd/scenario.py:187: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/pytest_bdd/scenario.py:157: in _execute_scenario\n    _execute_step_function(request, scenario, step, step_func)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/pytest_bdd/scenario.py:127: in _execute_step_function\n    return_value = call_fixture_func(fixturefunc=step_func, request=request, kwargs=kwargs)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\nuk_bin_collection/tests/step_defs/test_validate_council.py:62: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:58: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:71: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:59: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:70: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <WakefieldCityCouncil.CouncilClass object at 0x7fe764732b50>, page = ''\nkwargs = {'paon': None, 'postcode': None, 'uprn': '63035490', 'usrn': None}\nuser_uprn = '63035490'\nheaders = {'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36'}\nparams = {'uprn': '63035490'}\ns = <requests.sessions.Session object at 0x7fe7641539d0>\nwakefield_session = <Response [200]>, response = <Response [404]>\nsoup = <!DOCTYPE html>\n\n<html lang=\"en-gb\">\n<head>\n<title>Page not found - Wakefield Council</title>\n<meta charset=\"utf-8\"/>\n...e?SWJIYLWA=719d34d31c8e3a6e6fffd425f7e032f3&amp;ns=2&amp;cb=1885052203\" type=\"text/javascript\"></script></body>\n</html>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        # UPRN passed in as an argument\n        user_uprn = kwargs.get(\"uprn\")\n        check_uprn(user_uprn)\n    \n        # cookies = {\n        #    'visid_incap_2049675':    'xZCc/tFgSzaFmZD7XkN3koJGuGMAAAAAQUIPAAAAAAB7QGC8d+Jmlk0i3y06Zer6',\n        #    'WSS_FullScreenMode':     'false',\n        #    'incap_ses_1184_2049675': 'a2ZQQ9lCM3wa4+23mWpuEHnAuGMAAAAAfl4ebLXAvItl6dCfbMEWoQ==',\n        # }\n        headers = {\n            \"User-Agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36\"\n        }\n    \n        params = {\n            \"uprn\": user_uprn,\n        }\n    \n        requests.packages.urllib3.disable_warnings()\n        s = requests.Session()  # gets cookies and keeps them\n    \n        wakefield_session = s.get(\"https://www.wakefield.gov.uk/\", headers=headers)\n        # Make a GET for the data with correct params and cookies\n        response = s.get(\n            \"https://www.wakefield.gov.uk/site/Where-I-Live-Results\",\n            params=params,\n            headers=headers,\n            verify=False,\n        )\n    \n        # Have BS4 process the page\n        soup = BeautifulSoup(response.text, features=\"html.parser\")\n        soup.prettify()\n        data = {\"bins\": []}\n    \n        # Start a tuple for collections with (TYPE:DATE). Add the first for the bin types since they're separate\n        # elements on the page. All dates are parsed from text to datetime\n        collections = [\n            (\n                \"Household waste\",\n                datetime.strptime(\n>                   soup.select(\n                        \"#ctl00_PlaceHolderMain_Waste_output > div:nth-child(4) > \"\n                        \"div:nth-child(3) > div:nth-child(2)\"\n                    )[0].text,\n                    \"%d/%m/%Y\",\n                ),\n            ),\n            (\n                \"Mixed recycling\",\n                datetime.strptime(\n                    soup.select(\n                        \"#ctl00_PlaceHolderMain_Waste_output > div:nth-child(6) > \"\n                        \"div:nth-child(3) > div:nth-child(2)\"\n                    )[0].text,\n                    \"%d/%m/%Y\",\n                ),\n            ),\n        ]\nE       IndexError: list index out of range\n\nuk_bin_collection/uk_bin_collection/councils/WakefieldCityCouncil.py:59: IndexError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"IndexError: list index out of range","statusTrace":"request = <FixtureRequest for <Function test_scenario_outline[WakefieldCityCouncil]>>\n_pytest_bdd_example = {'council': 'WakefieldCityCouncil'}\n\n    @pytest.mark.usefixtures(*func_args)\n    def scenario_wrapper(request: FixtureRequest, _pytest_bdd_example: dict[str, str]) -> Any:\n        scenario = templated_scenario.render(_pytest_bdd_example)\n>       _execute_scenario(feature, scenario, request)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/pytest_bdd/scenario.py:187: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/pytest_bdd/scenario.py:157: in _execute_scenario\n    _execute_step_function(request, scenario, step, step_func)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/pytest_bdd/scenario.py:127: in _execute_step_function\n    return_value = call_fixture_func(fixturefunc=step_func, request=request, kwargs=kwargs)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\nuk_bin_collection/tests/step_defs/test_validate_council.py:62: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:58: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:71: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:59: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:70: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <WakefieldCityCouncil.CouncilClass object at 0x7fe764732b50>, page = ''\nkwargs = {'paon': None, 'postcode': None, 'uprn': '63035490', 'usrn': None}\nuser_uprn = '63035490'\nheaders = {'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36'}\nparams = {'uprn': '63035490'}\ns = <requests.sessions.Session object at 0x7fe7641539d0>\nwakefield_session = <Response [200]>, response = <Response [404]>\nsoup = <!DOCTYPE html>\n\n<html lang=\"en-gb\">\n<head>\n<title>Page not found - Wakefield Council</title>\n<meta charset=\"utf-8\"/>\n...e?SWJIYLWA=719d34d31c8e3a6e6fffd425f7e032f3&amp;ns=2&amp;cb=1885052203\" type=\"text/javascript\"></script></body>\n</html>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        # UPRN passed in as an argument\n        user_uprn = kwargs.get(\"uprn\")\n        check_uprn(user_uprn)\n    \n        # cookies = {\n        #    'visid_incap_2049675':    'xZCc/tFgSzaFmZD7XkN3koJGuGMAAAAAQUIPAAAAAAB7QGC8d+Jmlk0i3y06Zer6',\n        #    'WSS_FullScreenMode':     'false',\n        #    'incap_ses_1184_2049675': 'a2ZQQ9lCM3wa4+23mWpuEHnAuGMAAAAAfl4ebLXAvItl6dCfbMEWoQ==',\n        # }\n        headers = {\n            \"User-Agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36\"\n        }\n    \n        params = {\n            \"uprn\": user_uprn,\n        }\n    \n        requests.packages.urllib3.disable_warnings()\n        s = requests.Session()  # gets cookies and keeps them\n    \n        wakefield_session = s.get(\"https://www.wakefield.gov.uk/\", headers=headers)\n        # Make a GET for the data with correct params and cookies\n        response = s.get(\n            \"https://www.wakefield.gov.uk/site/Where-I-Live-Results\",\n            params=params,\n            headers=headers,\n            verify=False,\n        )\n    \n        # Have BS4 process the page\n        soup = BeautifulSoup(response.text, features=\"html.parser\")\n        soup.prettify()\n        data = {\"bins\": []}\n    \n        # Start a tuple for collections with (TYPE:DATE). Add the first for the bin types since they're separate\n        # elements on the page. All dates are parsed from text to datetime\n        collections = [\n            (\n                \"Household waste\",\n                datetime.strptime(\n>                   soup.select(\n                        \"#ctl00_PlaceHolderMain_Waste_output > div:nth-child(4) > \"\n                        \"div:nth-child(3) > div:nth-child(2)\"\n                    )[0].text,\n                    \"%d/%m/%Y\",\n                ),\n            ),\n            (\n                \"Mixed recycling\",\n                datetime.strptime(\n                    soup.select(\n                        \"#ctl00_PlaceHolderMain_Waste_output > div:nth-child(6) > \"\n                        \"div:nth-child(3) > div:nth-child(2)\"\n                    )[0].text,\n                    \"%d/%m/%Y\",\n                ),\n            ),\n        ]\nE       IndexError: list index out of range\n\nuk_bin_collection/uk_bin_collection/councils/WakefieldCityCouncil.py:59: IndexError","steps":[{"name":"Given the council: WakefieldCityCouncil","time":{"start":1694913660800,"stop":1694913660801,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"When we scrape the data from WakefieldCityCouncil","time":{"start":1694913660801,"stop":1694913661667,"duration":866},"status":"failed","statusMessage":"list index out of range","statusTrace":"IndexError: list index out of range\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az805-170"},{"name":"thread","value":"2127-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"WakefieldCityCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":79,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":79},"items":[{"uid":"9351d9c54051a7a8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/919//#testresult/9351d9c54051a7a8","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1694892985332,"stop":1694892986363,"duration":1031}},{"uid":"617cdcfb647f8e31","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/917//#testresult/617cdcfb647f8e31","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1694890072695,"stop":1694890073355,"duration":660}},{"uid":"c1d85771a6616035","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/915//#testresult/c1d85771a6616035","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1694864905559,"stop":1694864908006,"duration":2447}},{"uid":"17959b8275dbd069","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/913//#testresult/17959b8275dbd069","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1694840563653,"stop":1694840564656,"duration":1003}},{"uid":"5d74661eb7783460","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/912//#testresult/5d74661eb7783460","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1694826964247,"stop":1694826965219,"duration":972}},{"uid":"986a325359f11c61","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/910//#testresult/986a325359f11c61","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1694797003930,"stop":1694797004943,"duration":1013}},{"uid":"fcb395fabcc1f08e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/906//#testresult/fcb395fabcc1f08e","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1694740683204,"stop":1694740684014,"duration":810}},{"uid":"6c05e8b68da1bafa","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/905//#testresult/6c05e8b68da1bafa","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1694654153081,"stop":1694654154155,"duration":1074}},{"uid":"aadadbb735d36435","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/904//#testresult/aadadbb735d36435","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1694567952596,"stop":1694567953532,"duration":936}},{"uid":"62217c87257b3c82","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/903//#testresult/62217c87257b3c82","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1694481344221,"stop":1694481344877,"duration":656}},{"uid":"e8f4bd171e4c5061","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/902//#testresult/e8f4bd171e4c5061","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1694395049067,"stop":1694395050365,"duration":1298}},{"uid":"7f949f43e3a01af5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/901//#testresult/7f949f43e3a01af5","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1694365445123,"stop":1694365446098,"duration":975}},{"uid":"16f817c8da0c41e5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/899//#testresult/16f817c8da0c41e5","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1694308860488,"stop":1694308861690,"duration":1202}},{"uid":"5280b3df616b2baa","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/891//#testresult/5280b3df616b2baa","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1694240539025,"stop":1694240540401,"duration":1376}},{"uid":"804a720616d0f9d8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/890//#testresult/804a720616d0f9d8","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1694222154985,"stop":1694222155934,"duration":949}},{"uid":"a48c92db886bb5c0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/889//#testresult/a48c92db886bb5c0","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1694135857377,"stop":1694135859194,"duration":1817}},{"uid":"96bd951d6ea54374","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/888//#testresult/96bd951d6ea54374","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1694049500245,"stop":1694049503513,"duration":3268}},{"uid":"c1f9bf6fd0ab8b86","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/887//#testresult/c1f9bf6fd0ab8b86","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1693963003579,"stop":1693963004772,"duration":1193}},{"uid":"c45f5982725b8117","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/885//#testresult/c45f5982725b8117","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1693876526507,"stop":1693876527214,"duration":707}},{"uid":"943e1d852379b600","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/884//#testresult/943e1d852379b600","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1693790253777,"stop":1693790254635,"duration":858}}]},"tags":[]},"source":"4c2d6f897ef720d5.json","parameterValues":["WakefieldCityCouncil"]}