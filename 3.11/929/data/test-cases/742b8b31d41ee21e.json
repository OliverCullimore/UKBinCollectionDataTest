{"uid":"742b8b31d41ee21e","name":"Validate Council Output [CharnwoodBoroughCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"801248c9ab954856945dc1ac5bef1fab","time":{"start":1694999580261,"stop":1694999581964,"duration":1703},"status":"failed","statusMessage":"ValueError: time data 'Tomorrow' does not match format '%a %d %b'","statusTrace":"request = <FixtureRequest for <Function test_scenario_outline[CharnwoodBoroughCouncil]>>\n_pytest_bdd_example = {'council': 'CharnwoodBoroughCouncil'}\n\n    @pytest.mark.usefixtures(*func_args)\n    def scenario_wrapper(request: FixtureRequest, _pytest_bdd_example: dict[str, str]) -> Any:\n        scenario = templated_scenario.render(_pytest_bdd_example)\n>       _execute_scenario(feature, scenario, request)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/pytest_bdd/scenario.py:187: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/pytest_bdd/scenario.py:157: in _execute_scenario\n    _execute_step_function(request, scenario, step, step_func)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/pytest_bdd/scenario.py:127: in _execute_step_function\n    return_value = call_fixture_func(fixturefunc=step_func, request=request, kwargs=kwargs)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\nuk_bin_collection/tests/step_defs/test_validate_council.py:62: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:58: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:71: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:59: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:65: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/CharnwoodBoroughCouncil.py:31: in parse_data\n    collection_date = datetime.strptime(\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/_strptime.py:568: in _strptime_datetime\n    tt, fraction, gmtoff_fraction = _strptime(data_string, format)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndata_string = 'Tomorrow', format = '%a %d %b'\n\n    def _strptime(data_string, format=\"%a %b %d %H:%M:%S %Y\"):\n        \"\"\"Return a 2-tuple consisting of a time struct and an int containing\n        the number of microseconds based on the input string and the\n        format string.\"\"\"\n    \n        for index, arg in enumerate([data_string, format]):\n            if not isinstance(arg, str):\n                msg = \"strptime() argument {} must be str, not {}\"\n                raise TypeError(msg.format(index, type(arg)))\n    \n        global _TimeRE_cache, _regex_cache\n        with _cache_lock:\n            locale_time = _TimeRE_cache.locale_time\n            if (_getlang() != locale_time.lang or\n                time.tzname != locale_time.tzname or\n                time.daylight != locale_time.daylight):\n                _TimeRE_cache = TimeRE()\n                _regex_cache.clear()\n                locale_time = _TimeRE_cache.locale_time\n            if len(_regex_cache) > _CACHE_MAX_SIZE:\n                _regex_cache.clear()\n            format_regex = _regex_cache.get(format)\n            if not format_regex:\n                try:\n                    format_regex = _TimeRE_cache.compile(format)\n                # KeyError raised when a bad format is found; can be specified as\n                # \\\\, in which case it was a stray % but with a space after it\n                except KeyError as err:\n                    bad_directive = err.args[0]\n                    if bad_directive == \"\\\\\":\n                        bad_directive = \"%\"\n                    del err\n                    raise ValueError(\"'%s' is a bad directive in format '%s'\" %\n                                        (bad_directive, format)) from None\n                # IndexError only occurs when the format string is \"%\"\n                except IndexError:\n                    raise ValueError(\"stray %% in format '%s'\" % format) from None\n                _regex_cache[format] = format_regex\n        found = format_regex.match(data_string)\n        if not found:\n>           raise ValueError(\"time data %r does not match format %r\" %\n                             (data_string, format))\nE           ValueError: time data 'Tomorrow' does not match format '%a %d %b'\n\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/_strptime.py:349: ValueError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"ValueError: time data 'Tomorrow' does not match format '%a %d %b'","statusTrace":"request = <FixtureRequest for <Function test_scenario_outline[CharnwoodBoroughCouncil]>>\n_pytest_bdd_example = {'council': 'CharnwoodBoroughCouncil'}\n\n    @pytest.mark.usefixtures(*func_args)\n    def scenario_wrapper(request: FixtureRequest, _pytest_bdd_example: dict[str, str]) -> Any:\n        scenario = templated_scenario.render(_pytest_bdd_example)\n>       _execute_scenario(feature, scenario, request)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/pytest_bdd/scenario.py:187: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/pytest_bdd/scenario.py:157: in _execute_scenario\n    _execute_step_function(request, scenario, step, step_func)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/pytest_bdd/scenario.py:127: in _execute_step_function\n    return_value = call_fixture_func(fixturefunc=step_func, request=request, kwargs=kwargs)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\nuk_bin_collection/tests/step_defs/test_validate_council.py:62: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:58: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:71: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:59: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:65: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/CharnwoodBoroughCouncil.py:31: in parse_data\n    collection_date = datetime.strptime(\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/_strptime.py:568: in _strptime_datetime\n    tt, fraction, gmtoff_fraction = _strptime(data_string, format)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndata_string = 'Tomorrow', format = '%a %d %b'\n\n    def _strptime(data_string, format=\"%a %b %d %H:%M:%S %Y\"):\n        \"\"\"Return a 2-tuple consisting of a time struct and an int containing\n        the number of microseconds based on the input string and the\n        format string.\"\"\"\n    \n        for index, arg in enumerate([data_string, format]):\n            if not isinstance(arg, str):\n                msg = \"strptime() argument {} must be str, not {}\"\n                raise TypeError(msg.format(index, type(arg)))\n    \n        global _TimeRE_cache, _regex_cache\n        with _cache_lock:\n            locale_time = _TimeRE_cache.locale_time\n            if (_getlang() != locale_time.lang or\n                time.tzname != locale_time.tzname or\n                time.daylight != locale_time.daylight):\n                _TimeRE_cache = TimeRE()\n                _regex_cache.clear()\n                locale_time = _TimeRE_cache.locale_time\n            if len(_regex_cache) > _CACHE_MAX_SIZE:\n                _regex_cache.clear()\n            format_regex = _regex_cache.get(format)\n            if not format_regex:\n                try:\n                    format_regex = _TimeRE_cache.compile(format)\n                # KeyError raised when a bad format is found; can be specified as\n                # \\\\, in which case it was a stray % but with a space after it\n                except KeyError as err:\n                    bad_directive = err.args[0]\n                    if bad_directive == \"\\\\\":\n                        bad_directive = \"%\"\n                    del err\n                    raise ValueError(\"'%s' is a bad directive in format '%s'\" %\n                                        (bad_directive, format)) from None\n                # IndexError only occurs when the format string is \"%\"\n                except IndexError:\n                    raise ValueError(\"stray %% in format '%s'\" % format) from None\n                _regex_cache[format] = format_regex\n        found = format_regex.match(data_string)\n        if not found:\n>           raise ValueError(\"time data %r does not match format %r\" %\n                             (data_string, format))\nE           ValueError: time data 'Tomorrow' does not match format '%a %d %b'\n\n/opt/hostedtoolcache/Python/3.11.5/x64/lib/python3.11/_strptime.py:349: ValueError","steps":[{"name":"Given the council: CharnwoodBoroughCouncil","time":{"start":1694999580261,"stop":1694999580262,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"When we scrape the data from CharnwoodBoroughCouncil","time":{"start":1694999580262,"stop":1694999581964,"duration":1702},"status":"failed","statusMessage":"time data 'Tomorrow' does not match format '%a %d %b'","statusTrace":"ValueError: time data 'Tomorrow' does not match format '%a %d %b'\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az262-625"},{"name":"thread","value":"2129-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"CharnwoodBoroughCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":12,"broken":0,"skipped":0,"passed":71,"unknown":0,"total":83},"items":[{"uid":"cbc38cc62b401909","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/928//#testresult/cbc38cc62b401909","status":"passed","time":{"start":1694987789360,"stop":1694987790614,"duration":1254}},{"uid":"ecc26f03320ebb06","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/926//#testresult/ecc26f03320ebb06","status":"passed","time":{"start":1694987650642,"stop":1694987652998,"duration":2356}},{"uid":"e0403291e0f79651","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/922//#testresult/e0403291e0f79651","status":"passed","time":{"start":1694971596783,"stop":1694971598726,"duration":1943}},{"uid":"f41e37f9241a3e52","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/920//#testresult/f41e37f9241a3e52","status":"passed","time":{"start":1694913389677,"stop":1694913391067,"duration":1390}},{"uid":"5aea2912d8d50715","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/919//#testresult/5aea2912d8d50715","status":"passed","time":{"start":1694892718346,"stop":1694892719872,"duration":1526}},{"uid":"7e2b336e054fd4a3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/917//#testresult/7e2b336e054fd4a3","status":"passed","time":{"start":1694889719636,"stop":1694889720997,"duration":1361}},{"uid":"a6281ae49d6e377f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/915//#testresult/a6281ae49d6e377f","status":"passed","time":{"start":1694864581274,"stop":1694864583196,"duration":1922}},{"uid":"88c6954ad5e7da51","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/913//#testresult/88c6954ad5e7da51","status":"passed","time":{"start":1694840268399,"stop":1694840269970,"duration":1571}},{"uid":"2f0afeb2d71111bb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/912//#testresult/2f0afeb2d71111bb","status":"passed","time":{"start":1694826660829,"stop":1694826662223,"duration":1394}},{"uid":"e45011dcf8395ca4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/910//#testresult/e45011dcf8395ca4","status":"passed","time":{"start":1694796682030,"stop":1694796683204,"duration":1174}},{"uid":"20804dff7a6273c3","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/906//#testresult/20804dff7a6273c3","status":"passed","time":{"start":1694740405763,"stop":1694740407109,"duration":1346}},{"uid":"8883aa1eed3a57ad","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/905//#testresult/8883aa1eed3a57ad","status":"passed","time":{"start":1694653894685,"stop":1694653896000,"duration":1315}},{"uid":"ac61ba850e80df4b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/904//#testresult/ac61ba850e80df4b","status":"passed","time":{"start":1694567626311,"stop":1694567628199,"duration":1888}},{"uid":"98a0b97066a04e55","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/903//#testresult/98a0b97066a04e55","status":"passed","time":{"start":1694481042728,"stop":1694481044083,"duration":1355}},{"uid":"67bc2bd7126c4794","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/902//#testresult/67bc2bd7126c4794","status":"failed","statusDetails":"ValueError: time data 'Tomorrow' does not match format '%a %d %b'","time":{"start":1694394797534,"stop":1694394799918,"duration":2384}},{"uid":"b724b303e9e4f9f0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/901//#testresult/b724b303e9e4f9f0","status":"passed","time":{"start":1694365119795,"stop":1694365121702,"duration":1907}},{"uid":"c7477dfac3d054bb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/899//#testresult/c7477dfac3d054bb","status":"passed","time":{"start":1694308578484,"stop":1694308580221,"duration":1737}},{"uid":"d71e215283f6f1eb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/891//#testresult/d71e215283f6f1eb","status":"passed","time":{"start":1694240242929,"stop":1694240244290,"duration":1361}},{"uid":"f5a4272a4caf366f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/890//#testresult/f5a4272a4caf366f","status":"passed","time":{"start":1694221816183,"stop":1694221817844,"duration":1661}},{"uid":"a8425f828bb4a09f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/889//#testresult/a8425f828bb4a09f","status":"passed","time":{"start":1694135564104,"stop":1694135565776,"duration":1672}}]},"tags":[]},"source":"742b8b31d41ee21e.json","parameterValues":["CharnwoodBoroughCouncil"]}