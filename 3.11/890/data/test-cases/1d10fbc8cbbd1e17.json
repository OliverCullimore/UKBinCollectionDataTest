{"uid":"1d10fbc8cbbd1e17","name":"Validate Council Output [EastCambridgeshireCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"94109bff7ef580f8a70ff49447a40d87","time":{"start":1694221850182,"stop":1694221881427,"duration":31245},"status":"failed","statusMessage":"ValueError: not enough values to unpack (expected 3, got 1)","statusTrace":"request = <FixtureRequest for <Function test_scenario_outline[EastCambridgeshireCouncil]>>\n_pytest_bdd_example = {'council': 'EastCambridgeshireCouncil'}\n\n    @pytest.mark.usefixtures(*func_args)\n    def scenario_wrapper(request: FixtureRequest, _pytest_bdd_example: dict[str, str]) -> Any:\n        scenario = templated_scenario.render(_pytest_bdd_example)\n>       _execute_scenario(feature, scenario, request)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/pytest_bdd/scenario.py:187: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/pytest_bdd/scenario.py:157: in _execute_scenario\n    _execute_step_function(request, scenario, step, step_func)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/pytest_bdd/scenario.py:127: in _execute_step_function\n    return_value = call_fixture_func(fixturefunc=step_func, request=request, kwargs=kwargs)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\nuk_bin_collection/tests/step_defs/test_validate_council.py:62: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:58: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:71: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:59: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:70: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <EastCambridgeshireCouncil.CouncilClass object at 0x7f54f2aa3490>\npage = <Response [200]>\nkwargs = {'paon': None, 'postcode': None, 'uprn': '10002597178', 'usrn': None}\nuprn = '10002597178'\nurl = 'https://eastcambs-self.achieveservice.com/appshost/firmstep/self/apps/custompage/bincollections?language=en&uprn=10002597178'\ns = <requests.sessions.Session object at 0x7f54f2742d90>\nsoup = <!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\">\n\n<html>\n<he...\n\r\n    $('#collectionaddress').attr('src', '/fillform/?iframe_id=collectionaddress');\r\n\r\n})();</script></body>\n</html>\n\ndata = {'bins': []}\nbins = <div class=\"row collectionsrow\"><div class=\"col-xs-12 title collectionscell\">\n          \t\t\t\t            Please select an address to view the upcoming collections.\n          \t\t\t\t          </div></div>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        uprn = kwargs.get(\"uprn\")\n        # Check the UPRN is valid\n        check_uprn(uprn)\n    \n        # Request URL\n        url = f\"https://eastcambs-self.achieveservice.com/appshost/firmstep/self/apps/custompage/bincollections?language=en&uprn={uprn}\"\n    \n        # Make Request\n        requests.packages.urllib3.disable_warnings()\n        s = requests.session()\n        page = s.get(url)\n    \n        # Make a BS4 object\n        soup = BeautifulSoup(page.text, features=\"html.parser\")\n        soup.prettify()\n    \n        # Form a JSON wrapper\n        data = {\"bins\": []}\n    \n        for bins in soup.find_all(\"div\", {\"class\": \"row collectionsrow\"}):\n            # Find the collection dates\n>           _, bin_type, date = bins.find_all(\"div\")\nE           ValueError: not enough values to unpack (expected 3, got 1)\n\nuk_bin_collection/uk_bin_collection/councils/EastCambridgeshireCouncil.py:37: ValueError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"ValueError: not enough values to unpack (expected 3, got 1)","statusTrace":"request = <FixtureRequest for <Function test_scenario_outline[EastCambridgeshireCouncil]>>\n_pytest_bdd_example = {'council': 'EastCambridgeshireCouncil'}\n\n    @pytest.mark.usefixtures(*func_args)\n    def scenario_wrapper(request: FixtureRequest, _pytest_bdd_example: dict[str, str]) -> Any:\n        scenario = templated_scenario.render(_pytest_bdd_example)\n>       _execute_scenario(feature, scenario, request)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/pytest_bdd/scenario.py:187: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/pytest_bdd/scenario.py:157: in _execute_scenario\n    _execute_step_function(request, scenario, step, step_func)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/pytest_bdd/scenario.py:127: in _execute_step_function\n    return_value = call_fixture_func(fixturefunc=step_func, request=request, kwargs=kwargs)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\nuk_bin_collection/tests/step_defs/test_validate_council.py:62: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:58: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:71: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:59: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:70: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <EastCambridgeshireCouncil.CouncilClass object at 0x7f54f2aa3490>\npage = <Response [200]>\nkwargs = {'paon': None, 'postcode': None, 'uprn': '10002597178', 'usrn': None}\nuprn = '10002597178'\nurl = 'https://eastcambs-self.achieveservice.com/appshost/firmstep/self/apps/custompage/bincollections?language=en&uprn=10002597178'\ns = <requests.sessions.Session object at 0x7f54f2742d90>\nsoup = <!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"http://www.w3.org/TR/REC-html40/loose.dtd\">\n\n<html>\n<he...\n\r\n    $('#collectionaddress').attr('src', '/fillform/?iframe_id=collectionaddress');\r\n\r\n})();</script></body>\n</html>\n\ndata = {'bins': []}\nbins = <div class=\"row collectionsrow\"><div class=\"col-xs-12 title collectionscell\">\n          \t\t\t\t            Please select an address to view the upcoming collections.\n          \t\t\t\t          </div></div>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        uprn = kwargs.get(\"uprn\")\n        # Check the UPRN is valid\n        check_uprn(uprn)\n    \n        # Request URL\n        url = f\"https://eastcambs-self.achieveservice.com/appshost/firmstep/self/apps/custompage/bincollections?language=en&uprn={uprn}\"\n    \n        # Make Request\n        requests.packages.urllib3.disable_warnings()\n        s = requests.session()\n        page = s.get(url)\n    \n        # Make a BS4 object\n        soup = BeautifulSoup(page.text, features=\"html.parser\")\n        soup.prettify()\n    \n        # Form a JSON wrapper\n        data = {\"bins\": []}\n    \n        for bins in soup.find_all(\"div\", {\"class\": \"row collectionsrow\"}):\n            # Find the collection dates\n>           _, bin_type, date = bins.find_all(\"div\")\nE           ValueError: not enough values to unpack (expected 3, got 1)\n\nuk_bin_collection/uk_bin_collection/councils/EastCambridgeshireCouncil.py:37: ValueError","steps":[{"name":"Given the council: EastCambridgeshireCouncil","time":{"start":1694221850183,"stop":1694221850183,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"When we scrape the data from EastCambridgeshireCouncil","time":{"start":1694221850183,"stop":1694221881427,"duration":31244},"status":"failed","statusMessage":"not enough values to unpack (expected 3, got 1)","statusTrace":"ValueError: not enough values to unpack (expected 3, got 1)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az339-509"},{"name":"thread","value":"2084-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"EastCambridgeshireCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":3,"broken":0,"skipped":0,"passed":61,"unknown":0,"total":64},"items":[{"uid":"3bc7b31dd75f4cb6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/889//#testresult/3bc7b31dd75f4cb6","status":"passed","time":{"start":1694135592205,"stop":1694135593704,"duration":1499}},{"uid":"ef883e7cdd3bdf01","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/888//#testresult/ef883e7cdd3bdf01","status":"passed","time":{"start":1694049184388,"stop":1694049185920,"duration":1532}},{"uid":"1fec77f1b27bde52","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/887//#testresult/1fec77f1b27bde52","status":"passed","time":{"start":1693962749721,"stop":1693962751279,"duration":1558}},{"uid":"a058d9273c56e24c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/885//#testresult/a058d9273c56e24c","status":"passed","time":{"start":1693876273186,"stop":1693876274511,"duration":1325}},{"uid":"2714f5fcb691126c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/884//#testresult/2714f5fcb691126c","status":"passed","time":{"start":1693790019821,"stop":1693790021210,"duration":1389}},{"uid":"f9bac6f4370ac648","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/883//#testresult/f9bac6f4370ac648","status":"passed","time":{"start":1693703783864,"stop":1693703785454,"duration":1590}},{"uid":"52c20e613dbe5e24","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/882//#testresult/52c20e613dbe5e24","status":"passed","time":{"start":1693617005391,"stop":1693617006925,"duration":1534}},{"uid":"139b31f5f37abd95","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/881//#testresult/139b31f5f37abd95","status":"passed","time":{"start":1693531019917,"stop":1693531021485,"duration":1568}},{"uid":"f5ff7cf66f346141","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/880//#testresult/f5ff7cf66f346141","status":"passed","time":{"start":1693444366499,"stop":1693444368056,"duration":1557}},{"uid":"d97c25c20c6611b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/879//#testresult/d97c25c20c6611b","status":"passed","time":{"start":1693357936452,"stop":1693357937941,"duration":1489}},{"uid":"4925bb807dde2597","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/878//#testresult/4925bb807dde2597","status":"passed","time":{"start":1693271568020,"stop":1693271569396,"duration":1376}},{"uid":"357b59e7277c0a09","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/877//#testresult/357b59e7277c0a09","status":"passed","time":{"start":1693185194697,"stop":1693185196141,"duration":1444}},{"uid":"5692f88f21cc033c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/876//#testresult/5692f88f21cc033c","status":"passed","time":{"start":1693098955803,"stop":1693098957237,"duration":1434}},{"uid":"205ab14d3c68cd8b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/875//#testresult/205ab14d3c68cd8b","status":"passed","time":{"start":1693012176383,"stop":1693012177769,"duration":1386}},{"uid":"3e01c2088fe2ca89","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/874//#testresult/3e01c2088fe2ca89","status":"passed","time":{"start":1692925943092,"stop":1692925945129,"duration":2037}},{"uid":"5d0abc7cb6a96623","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/873//#testresult/5d0abc7cb6a96623","status":"passed","time":{"start":1692839449195,"stop":1692839450794,"duration":1599}},{"uid":"c638f4f50b8f478b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/871//#testresult/c638f4f50b8f478b","status":"passed","time":{"start":1692753065399,"stop":1692753066814,"duration":1415}},{"uid":"d5d70aeea82ea7d4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/870//#testresult/d5d70aeea82ea7d4","status":"passed","time":{"start":1692666731034,"stop":1692666732456,"duration":1422}},{"uid":"9159101dfd97411b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/869//#testresult/9159101dfd97411b","status":"passed","time":{"start":1692624216918,"stop":1692624219475,"duration":2557}},{"uid":"91bff3e205c44edb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/867//#testresult/91bff3e205c44edb","status":"passed","time":{"start":1692580248370,"stop":1692580249576,"duration":1206}}]},"tags":[]},"source":"1d10fbc8cbbd1e17.json","parameterValues":["EastCambridgeshireCouncil"]}