{"uid":"b9cc2f8636498eca","name":"Validate Council Output [StHelensBC]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"aefb4666f5cfa7265d9db53c16df38b6","time":{"start":1692839741858,"stop":1692839742833,"duration":975},"status":"failed","statusMessage":"ValueError: time data 'Fri 8 Sept 2023' does not match format '%a %d %b %Y'","statusTrace":"request = <FixtureRequest for <Function test_scenario_outline[StHelensBC]>>\n_pytest_bdd_example = {'council': 'StHelensBC'}\n\n    @pytest.mark.usefixtures(*func_args)\n    def scenario_wrapper(request: FixtureRequest, _pytest_bdd_example: dict[str, str]) -> Any:\n        scenario = templated_scenario.render(_pytest_bdd_example)\n>       _execute_scenario(feature, scenario, request)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/pytest_bdd/scenario.py:187: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/pytest_bdd/scenario.py:157: in _execute_scenario\n    _execute_step_function(request, scenario, step, step_func)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/pytest_bdd/scenario.py:127: in _execute_step_function\n    return_value = call_fixture_func(fixturefunc=step_func, request=request, kwargs=kwargs)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\nuk_bin_collection/tests/step_defs/test_validate_council.py:62: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:58: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:71: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:59: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:70: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/StHelensBC.py:43: in parse_data\n    collection_date = datetime.strptime(bin_date.get_text(strip=True), \"%a %d %b %Y\")\n/opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/_strptime.py:568: in _strptime_datetime\n    tt, fraction, gmtoff_fraction = _strptime(data_string, format)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndata_string = 'Fri 8 Sept 2023', format = '%a %d %b %Y'\n\n    def _strptime(data_string, format=\"%a %b %d %H:%M:%S %Y\"):\n        \"\"\"Return a 2-tuple consisting of a time struct and an int containing\n        the number of microseconds based on the input string and the\n        format string.\"\"\"\n    \n        for index, arg in enumerate([data_string, format]):\n            if not isinstance(arg, str):\n                msg = \"strptime() argument {} must be str, not {}\"\n                raise TypeError(msg.format(index, type(arg)))\n    \n        global _TimeRE_cache, _regex_cache\n        with _cache_lock:\n            locale_time = _TimeRE_cache.locale_time\n            if (_getlang() != locale_time.lang or\n                time.tzname != locale_time.tzname or\n                time.daylight != locale_time.daylight):\n                _TimeRE_cache = TimeRE()\n                _regex_cache.clear()\n                locale_time = _TimeRE_cache.locale_time\n            if len(_regex_cache) > _CACHE_MAX_SIZE:\n                _regex_cache.clear()\n            format_regex = _regex_cache.get(format)\n            if not format_regex:\n                try:\n                    format_regex = _TimeRE_cache.compile(format)\n                # KeyError raised when a bad format is found; can be specified as\n                # \\\\, in which case it was a stray % but with a space after it\n                except KeyError as err:\n                    bad_directive = err.args[0]\n                    if bad_directive == \"\\\\\":\n                        bad_directive = \"%\"\n                    del err\n                    raise ValueError(\"'%s' is a bad directive in format '%s'\" %\n                                        (bad_directive, format)) from None\n                # IndexError only occurs when the format string is \"%\"\n                except IndexError:\n                    raise ValueError(\"stray %% in format '%s'\" % format) from None\n                _regex_cache[format] = format_regex\n        found = format_regex.match(data_string)\n        if not found:\n>           raise ValueError(\"time data %r does not match format %r\" %\n                             (data_string, format))\nE           ValueError: time data 'Fri 8 Sept 2023' does not match format '%a %d %b %Y'\n\n/opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/_strptime.py:349: ValueError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"ValueError: time data 'Fri 8 Sept 2023' does not match format '%a %d %b %Y'","statusTrace":"request = <FixtureRequest for <Function test_scenario_outline[StHelensBC]>>\n_pytest_bdd_example = {'council': 'StHelensBC'}\n\n    @pytest.mark.usefixtures(*func_args)\n    def scenario_wrapper(request: FixtureRequest, _pytest_bdd_example: dict[str, str]) -> Any:\n        scenario = templated_scenario.render(_pytest_bdd_example)\n>       _execute_scenario(feature, scenario, request)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/pytest_bdd/scenario.py:187: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/pytest_bdd/scenario.py:157: in _execute_scenario\n    _execute_step_function(request, scenario, step, step_func)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/pytest_bdd/scenario.py:127: in _execute_step_function\n    return_value = call_fixture_func(fixturefunc=step_func, request=request, kwargs=kwargs)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\nuk_bin_collection/tests/step_defs/test_validate_council.py:62: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:58: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:71: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:59: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:70: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/StHelensBC.py:43: in parse_data\n    collection_date = datetime.strptime(bin_date.get_text(strip=True), \"%a %d %b %Y\")\n/opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/_strptime.py:568: in _strptime_datetime\n    tt, fraction, gmtoff_fraction = _strptime(data_string, format)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndata_string = 'Fri 8 Sept 2023', format = '%a %d %b %Y'\n\n    def _strptime(data_string, format=\"%a %b %d %H:%M:%S %Y\"):\n        \"\"\"Return a 2-tuple consisting of a time struct and an int containing\n        the number of microseconds based on the input string and the\n        format string.\"\"\"\n    \n        for index, arg in enumerate([data_string, format]):\n            if not isinstance(arg, str):\n                msg = \"strptime() argument {} must be str, not {}\"\n                raise TypeError(msg.format(index, type(arg)))\n    \n        global _TimeRE_cache, _regex_cache\n        with _cache_lock:\n            locale_time = _TimeRE_cache.locale_time\n            if (_getlang() != locale_time.lang or\n                time.tzname != locale_time.tzname or\n                time.daylight != locale_time.daylight):\n                _TimeRE_cache = TimeRE()\n                _regex_cache.clear()\n                locale_time = _TimeRE_cache.locale_time\n            if len(_regex_cache) > _CACHE_MAX_SIZE:\n                _regex_cache.clear()\n            format_regex = _regex_cache.get(format)\n            if not format_regex:\n                try:\n                    format_regex = _TimeRE_cache.compile(format)\n                # KeyError raised when a bad format is found; can be specified as\n                # \\\\, in which case it was a stray % but with a space after it\n                except KeyError as err:\n                    bad_directive = err.args[0]\n                    if bad_directive == \"\\\\\":\n                        bad_directive = \"%\"\n                    del err\n                    raise ValueError(\"'%s' is a bad directive in format '%s'\" %\n                                        (bad_directive, format)) from None\n                # IndexError only occurs when the format string is \"%\"\n                except IndexError:\n                    raise ValueError(\"stray %% in format '%s'\" % format) from None\n                _regex_cache[format] = format_regex\n        found = format_regex.match(data_string)\n        if not found:\n>           raise ValueError(\"time data %r does not match format %r\" %\n                             (data_string, format))\nE           ValueError: time data 'Fri 8 Sept 2023' does not match format '%a %d %b %Y'\n\n/opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/_strptime.py:349: ValueError","steps":[{"name":"Given the council: StHelensBC","time":{"start":1692839741858,"stop":1692839741859,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"When we scrape the data from StHelensBC","time":{"start":1692839741859,"stop":1692839742833,"duration":974},"status":"failed","statusMessage":"time data 'Fri 8 Sept 2023' does not match format '%a %d %b %Y'","statusTrace":"ValueError: time data 'Fri 8 Sept 2023' does not match format '%a %d %b %Y'\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[],"parameters":[],"stepsCount":2,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az1109-745"},{"name":"thread","value":"2165-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"StHelensBC"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":33,"broken":0,"skipped":0,"passed":15,"unknown":0,"total":48},"items":[{"uid":"c3aaa4c46c9bb1e1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/871//#testresult/c3aaa4c46c9bb1e1","status":"failed","statusDetails":"ValueError: time data 'Fri 8 Sept 2023' does not match format '%a %d %b %Y'","time":{"start":1692753306060,"stop":1692753306835,"duration":775}},{"uid":"a71e797e76797fa2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/870//#testresult/a71e797e76797fa2","status":"failed","statusDetails":"ValueError: time data 'Fri 8 Sept 2023' does not match format '%a %d %b %Y'","time":{"start":1692666853525,"stop":1692666854335,"duration":810}},{"uid":"a67dab958d0fa47e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/869//#testresult/a67dab958d0fa47e","status":"failed","statusDetails":"ValueError: time data 'Fri 8 Sept 2023' does not match format '%a %d %b %Y'","time":{"start":1692624328319,"stop":1692624329123,"duration":804}},{"uid":"3e2391720c064d5a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/867//#testresult/3e2391720c064d5a","status":"failed","statusDetails":"ValueError: time data 'Fri 8 Sept 2023' does not match format '%a %d %b %Y'","time":{"start":1692580373840,"stop":1692580374471,"duration":631}},{"uid":"c1bebc792d16b38a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/866//#testresult/c1bebc792d16b38a","status":"failed","statusDetails":"ValueError: time data 'Fri 8 Sept 2023' does not match format '%a %d %b %Y'","time":{"start":1692494195058,"stop":1692494195859,"duration":801}},{"uid":"eecdef49692011bd","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/865//#testresult/eecdef49692011bd","status":"failed","statusDetails":"ValueError: time data 'Fri 8 Sept 2023' does not match format '%a %d %b %Y'","time":{"start":1692407517641,"stop":1692407518270,"duration":629}},{"uid":"75cd685abbde7f17","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/864//#testresult/75cd685abbde7f17","status":"failed","statusDetails":"ValueError: time data 'Fri 8 Sept 2023' does not match format '%a %d %b %Y'","time":{"start":1692321184827,"stop":1692321185770,"duration":943}},{"uid":"e365bb5948fc69d8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/863//#testresult/e365bb5948fc69d8","status":"failed","statusDetails":"ValueError: time data 'Fri 8 Sept 2023' does not match format '%a %d %b %Y'","time":{"start":1692294423421,"stop":1692294424178,"duration":757}},{"uid":"a12340688bd5ce32","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/861//#testresult/a12340688bd5ce32","status":"failed","statusDetails":"ValueError: time data 'Fri 8 Sept 2023' does not match format '%a %d %b %Y'","time":{"start":1692234737796,"stop":1692234740983,"duration":3187}},{"uid":"7739244200152787","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/860//#testresult/7739244200152787","status":"failed","statusDetails":"ValueError: time data 'Fri 8 Sept 2023' does not match format '%a %d %b %Y'","time":{"start":1692208522520,"stop":1692208523152,"duration":632}},{"uid":"dc05b934605be5d1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/859//#testresult/dc05b934605be5d1","status":"failed","statusDetails":"ValueError: time data 'Fri 8 Sept 2023' does not match format '%a %d %b %Y'","time":{"start":1692148450389,"stop":1692148453484,"duration":3095}},{"uid":"127ead626a0377b9","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/858//#testresult/127ead626a0377b9","status":"failed","statusDetails":"ValueError: time data 'Fri 8 Sept 2023' does not match format '%a %d %b %Y'","time":{"start":1692061964705,"stop":1692061967780,"duration":3075}},{"uid":"9e1cff17d43eb96b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/856//#testresult/9e1cff17d43eb96b","status":"failed","statusDetails":"ValueError: time data 'Fri 8 Sept 2023' does not match format '%a %d %b %Y'","time":{"start":1691975735022,"stop":1691975738247,"duration":3225}},{"uid":"1a785b4feb67042c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/855//#testresult/1a785b4feb67042c","status":"failed","statusDetails":"ValueError: time data 'Fri 8 Sept 2023' does not match format '%a %d %b %Y'","time":{"start":1691889470330,"stop":1691889473328,"duration":2998}},{"uid":"2bc323b1f7f83793","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/854//#testresult/2bc323b1f7f83793","status":"failed","statusDetails":"ValueError: time data 'Fri 8 Sept 2023' does not match format '%a %d %b %Y'","time":{"start":1691802700208,"stop":1691802701045,"duration":837}},{"uid":"466fcc1055c16db8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/853//#testresult/466fcc1055c16db8","status":"failed","statusDetails":"ValueError: time data 'Fri 8 Sept 2023' does not match format '%a %d %b %Y'","time":{"start":1691716396710,"stop":1691716399736,"duration":3026}},{"uid":"5940291f71f0a60d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/852//#testresult/5940291f71f0a60d","status":"failed","statusDetails":"ValueError: time data 'Fri 8 Sept 2023' does not match format '%a %d %b %Y'","time":{"start":1691630867947,"stop":1691630868901,"duration":954}},{"uid":"47c4baa0fa5f15c4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/851//#testresult/47c4baa0fa5f15c4","status":"failed","statusDetails":"ValueError: time data 'Fri 8 Sept 2023' does not match format '%a %d %b %Y'","time":{"start":1691612064268,"stop":1691612065207,"duration":939}},{"uid":"d30e44f423506f01","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/847//#testresult/d30e44f423506f01","status":"failed","statusDetails":"ValueError: time data 'Fri 8 Sept 2023' does not match format '%a %d %b %Y'","time":{"start":1691544416780,"stop":1691544417574,"duration":794}},{"uid":"bfd44b3296476bbc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/846//#testresult/bfd44b3296476bbc","status":"failed","statusDetails":"ValueError: time data 'Fri 8 Sept 2023' does not match format '%a %d %b %Y'","time":{"start":1691457798246,"stop":1691457798787,"duration":541}}]},"tags":[]},"source":"b9cc2f8636498eca.json","parameterValues":["StHelensBC"]}