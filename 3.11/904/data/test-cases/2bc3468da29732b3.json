{"uid":"2bc3468da29732b3","name":"Validate Council Output [BexleyCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"b14d94c00a7a02b15ede5862fe9627b6","time":{"start":1694567630929,"stop":1694567631821,"duration":892},"status":"failed","statusMessage":"ValueError: Error parsing API. Please check your email is correct and registered on the @Home app.","statusTrace":"request = <FixtureRequest for <Function test_scenario_outline[BexleyCouncil]>>\n_pytest_bdd_example = {'council': 'BexleyCouncil'}\n\n    @pytest.mark.usefixtures(*func_args)\n    def scenario_wrapper(request: FixtureRequest, _pytest_bdd_example: dict[str, str]) -> Any:\n        scenario = templated_scenario.render(_pytest_bdd_example)\n>       _execute_scenario(feature, scenario, request)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/pytest_bdd/scenario.py:187: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/pytest_bdd/scenario.py:157: in _execute_scenario\n    _execute_step_function(request, scenario, step, step_func)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/pytest_bdd/scenario.py:127: in _execute_step_function\n    return_value = call_fixture_func(fixturefunc=step_func, request=request, kwargs=kwargs)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\nuk_bin_collection/tests/step_defs/test_validate_council.py:62: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:58: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:71: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:59: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:70: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <BexleyCouncil.CouncilClass object at 0x7fe3a0f385d0>, page = ''\nkwargs = {'paon': None, 'postcode': None, 'uprn': 'spamstorage@live.co.uk', 'usrn': None}\nuser_email = 'spamstorage@live.co.uk'\nheaders = {'Connection': 'Keep-Alive', 'X-country': 'gb', 'X-email': 'spamstorage@live.co.uk'}\nresponse = <Response [400]>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        # User email from @Home app as UPRN\n        user_email = kwargs.get(\"uprn\")\n        headers = {\n            \"X-country\": \"gb\",\n            \"X-email\": user_email,\n            \"Connection\": \"Keep-Alive\",\n        }\n    \n        # Sniffed from the app\n        requests.packages.urllib3.disable_warnings()\n        response = requests.get(\n            \"https://services.athomeapp.net/ServiceData/GetUserRoundJson\",\n            headers=headers,\n        )\n    \n        # 200 is OK. Sometimes it times out and gives this, but I'm not parsing HTTP codes\n        if response.status_code != 200:\n>           raise ValueError(\n                \"Error parsing API. Please check your email is correct and registered on the @Home app.\"\n            )\nE           ValueError: Error parsing API. Please check your email is correct and registered on the @Home app.\n\nuk_bin_collection/uk_bin_collection/councils/BexleyCouncil.py:34: ValueError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"ValueError: Error parsing API. Please check your email is correct and registered on the @Home app.","statusTrace":"request = <FixtureRequest for <Function test_scenario_outline[BexleyCouncil]>>\n_pytest_bdd_example = {'council': 'BexleyCouncil'}\n\n    @pytest.mark.usefixtures(*func_args)\n    def scenario_wrapper(request: FixtureRequest, _pytest_bdd_example: dict[str, str]) -> Any:\n        scenario = templated_scenario.render(_pytest_bdd_example)\n>       _execute_scenario(feature, scenario, request)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/pytest_bdd/scenario.py:187: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/pytest_bdd/scenario.py:157: in _execute_scenario\n    _execute_step_function(request, scenario, step, step_func)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/pytest_bdd/scenario.py:127: in _execute_step_function\n    return_value = call_fixture_func(fixturefunc=step_func, request=request, kwargs=kwargs)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\nuk_bin_collection/tests/step_defs/test_validate_council.py:62: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:58: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:71: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:59: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:70: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <BexleyCouncil.CouncilClass object at 0x7fe3a0f385d0>, page = ''\nkwargs = {'paon': None, 'postcode': None, 'uprn': 'spamstorage@live.co.uk', 'usrn': None}\nuser_email = 'spamstorage@live.co.uk'\nheaders = {'Connection': 'Keep-Alive', 'X-country': 'gb', 'X-email': 'spamstorage@live.co.uk'}\nresponse = <Response [400]>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        # User email from @Home app as UPRN\n        user_email = kwargs.get(\"uprn\")\n        headers = {\n            \"X-country\": \"gb\",\n            \"X-email\": user_email,\n            \"Connection\": \"Keep-Alive\",\n        }\n    \n        # Sniffed from the app\n        requests.packages.urllib3.disable_warnings()\n        response = requests.get(\n            \"https://services.athomeapp.net/ServiceData/GetUserRoundJson\",\n            headers=headers,\n        )\n    \n        # 200 is OK. Sometimes it times out and gives this, but I'm not parsing HTTP codes\n        if response.status_code != 200:\n>           raise ValueError(\n                \"Error parsing API. Please check your email is correct and registered on the @Home app.\"\n            )\nE           ValueError: Error parsing API. Please check your email is correct and registered on the @Home app.\n\nuk_bin_collection/uk_bin_collection/councils/BexleyCouncil.py:34: ValueError","steps":[{"name":"Given the council: BexleyCouncil","time":{"start":1694567630929,"stop":1694567630929,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"When we scrape the data from BexleyCouncil","time":{"start":1694567630930,"stop":1694567631821,"duration":891},"status":"failed","statusMessage":"Error parsing API. Please check your email is correct and registered on the @Home app.","statusTrace":"ValueError: Error parsing API. Please check your email is correct and registered on the @Home app.\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"host","value":"fv-az470-47"},{"name":"thread","value":"2118-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"BexleyCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":14,"broken":0,"skipped":0,"passed":56,"unknown":0,"total":70},"items":[{"uid":"59845101c386e098","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/903//#testresult/59845101c386e098","status":"failed","statusDetails":"ValueError: Error parsing API. Please check your email is correct and registered on the @Home app.","time":{"start":1694481051902,"stop":1694481052322,"duration":420}},{"uid":"b1e4fea712d4e170","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/902//#testresult/b1e4fea712d4e170","status":"failed","statusDetails":"ValueError: Error parsing API. Please check your email is correct and registered on the @Home app.","time":{"start":1694394799781,"stop":1694394800217,"duration":436}},{"uid":"d185373b9f14f43f","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/901//#testresult/d185373b9f14f43f","status":"failed","statusDetails":"ValueError: Error parsing API. Please check your email is correct and registered on the @Home app.","time":{"start":1694365123205,"stop":1694365123880,"duration":675}},{"uid":"f47cfdb9c438010c","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/899//#testresult/f47cfdb9c438010c","status":"failed","statusDetails":"ValueError: Error parsing API. Please check your email is correct and registered on the @Home app.","time":{"start":1694308581192,"stop":1694308581684,"duration":492}},{"uid":"21fe98803c048c4d","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/891//#testresult/21fe98803c048c4d","status":"failed","statusDetails":"ValueError: Error parsing API. Please check your email is correct and registered on the @Home app.","time":{"start":1694240245558,"stop":1694240246016,"duration":458}},{"uid":"7daed77cde792114","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/890//#testresult/7daed77cde792114","status":"failed","statusDetails":"ValueError: Error parsing API. Please check your email is correct and registered on the @Home app.","time":{"start":1694221819252,"stop":1694221819770,"duration":518}},{"uid":"962875a34761ef26","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/889//#testresult/962875a34761ef26","status":"failed","statusDetails":"ValueError: Error parsing API. Please check your email is correct and registered on the @Home app.","time":{"start":1694135569702,"stop":1694135570260,"duration":558}},{"uid":"40461274aabc100b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/888//#testresult/40461274aabc100b","status":"failed","statusDetails":"ValueError: Error parsing API. Please check your email is correct and registered on the @Home app.","time":{"start":1694049155664,"stop":1694049156346,"duration":682}},{"uid":"64bc136835fe4fd1","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/887//#testresult/64bc136835fe4fd1","status":"failed","statusDetails":"ValueError: Error parsing API. Please check your email is correct and registered on the @Home app.","time":{"start":1693962726104,"stop":1693962726586,"duration":482}},{"uid":"477623c32bce839e","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/885//#testresult/477623c32bce839e","status":"failed","statusDetails":"ValueError: Error parsing API. Please check your email is correct and registered on the @Home app.","time":{"start":1693876254951,"stop":1693876255377,"duration":426}},{"uid":"b2aa653fad2cb2a0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/884//#testresult/b2aa653fad2cb2a0","status":"passed","time":{"start":1693789995064,"stop":1693789996142,"duration":1078}},{"uid":"642bd7242b7e48f2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/883//#testresult/642bd7242b7e48f2","status":"passed","time":{"start":1693703746231,"stop":1693703747173,"duration":942}},{"uid":"4ea75b4502d589d4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/882//#testresult/4ea75b4502d589d4","status":"passed","time":{"start":1693616985017,"stop":1693616986148,"duration":1131}},{"uid":"f9ddaab82270a748","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/881//#testresult/f9ddaab82270a748","status":"passed","time":{"start":1693531002701,"stop":1693531003572,"duration":871}},{"uid":"f72b8a6d177441a","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/880//#testresult/f72b8a6d177441a","status":"passed","time":{"start":1693444342912,"stop":1693444343719,"duration":807}},{"uid":"6c2304abfc1e11b2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/879//#testresult/6c2304abfc1e11b2","status":"passed","time":{"start":1693357917701,"stop":1693357918567,"duration":866}},{"uid":"1e556624cb8b4b42","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/878//#testresult/1e556624cb8b4b42","status":"passed","time":{"start":1693271539937,"stop":1693271540624,"duration":687}},{"uid":"8ba6cb21fe0dc5bb","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/877//#testresult/8ba6cb21fe0dc5bb","status":"passed","time":{"start":1693185155199,"stop":1693185156085,"duration":886}},{"uid":"be60e6ac46ad4f4","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/876//#testresult/be60e6ac46ad4f4","status":"passed","time":{"start":1693098927232,"stop":1693098927903,"duration":671}},{"uid":"60e368f7229d6ea","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/875//#testresult/60e368f7229d6ea","status":"passed","time":{"start":1693012143908,"stop":1693012144807,"duration":899}}]},"tags":[]},"source":"2bc3468da29732b3.json","parameterValues":["BexleyCouncil"]}