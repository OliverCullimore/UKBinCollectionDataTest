{"uid":"a692eb81b0a24192","name":"Validate Council Output [WakefieldCityCouncil]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"532d749d88b4b8fb0bc694b350a3d71a","time":{"start":1691457914323,"stop":1691457916570,"duration":2247},"status":"failed","statusMessage":"IndexError: list index out of range","statusTrace":"request = <FixtureRequest for <Function test_scenario_outline[WakefieldCityCouncil]>>\n_pytest_bdd_example = {'council': 'WakefieldCityCouncil'}\n\n    @pytest.mark.usefixtures(*func_args)\n    def scenario_wrapper(request: FixtureRequest, _pytest_bdd_example: dict[str, str]) -> Any:\n        scenario = templated_scenario.render(_pytest_bdd_example)\n>       _execute_scenario(feature, scenario, request)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/pytest_bdd/scenario.py:187: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/pytest_bdd/scenario.py:157: in _execute_scenario\n    _execute_step_function(request, scenario, step, step_func)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/pytest_bdd/scenario.py:127: in _execute_step_function\n    return_value = call_fixture_func(fixturefunc=step_func, request=request, kwargs=kwargs)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\nuk_bin_collection/tests/step_defs/test_validate_council.py:62: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:58: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:71: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:59: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:70: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <WakefieldCityCouncil.CouncilClass object at 0x7f1ff08f2ed0>, page = ''\nkwargs = {'paon': None, 'postcode': None, 'uprn': '63035490', 'usrn': None}\nuser_uprn = '63035490'\nheaders = {'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36'}\nparams = {'uprn': '63035490'}\ns = <requests.sessions.Session object at 0x7f1fefd2efd0>\nwakefield_session = <Response [200]>, response = <Response [404]>\nsoup = <!DOCTYPE html>\n\n<html lang=\"en-gb\">\n<head>\n<title>Page not found - Wakefield Council</title>\n<meta charset=\"utf-8\"/>\n...e?SWJIYLWA=719d34d31c8e3a6e6fffd425f7e032f3&amp;ns=2&amp;cb=1732851440\" type=\"text/javascript\"></script></body>\n</html>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        # UPRN passed in as an argument\n        user_uprn = kwargs.get(\"uprn\")\n        check_uprn(user_uprn)\n    \n        # cookies = {\n        #    'visid_incap_2049675':    'xZCc/tFgSzaFmZD7XkN3koJGuGMAAAAAQUIPAAAAAAB7QGC8d+Jmlk0i3y06Zer6',\n        #    'WSS_FullScreenMode':     'false',\n        #    'incap_ses_1184_2049675': 'a2ZQQ9lCM3wa4+23mWpuEHnAuGMAAAAAfl4ebLXAvItl6dCfbMEWoQ==',\n        # }\n        headers = {\n            \"User-Agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36\"\n        }\n    \n        params = {\n            \"uprn\": user_uprn,\n        }\n    \n        requests.packages.urllib3.disable_warnings()\n        s = requests.Session()  # gets cookies and keeps them\n    \n        wakefield_session = s.get(\"https://www.wakefield.gov.uk/\", headers=headers)\n        # Make a GET for the data with correct params and cookies\n        response = s.get(\n            \"https://www.wakefield.gov.uk/site/Where-I-Live-Results\",\n            params=params,\n            headers=headers,\n            verify=False,\n        )\n    \n        # Have BS4 process the page\n        soup = BeautifulSoup(response.text, features=\"html.parser\")\n        soup.prettify()\n        data = {\"bins\": []}\n    \n        # Start a tuple for collections with (TYPE:DATE). Add the first for the bin types since they're separate\n        # elements on the page. All dates are parsed from text to datetime\n        collections = [\n            (\n                \"Household waste\",\n                datetime.strptime(\n>                   soup.select(\n                        \"#ctl00_PlaceHolderMain_Waste_output > div:nth-child(4) > \"\n                        \"div:nth-child(3) > div:nth-child(2)\"\n                    )[0].text,\n                    \"%d/%m/%Y\",\n                ),\n            ),\n            (\n                \"Mixed recycling\",\n                datetime.strptime(\n                    soup.select(\n                        \"#ctl00_PlaceHolderMain_Waste_output > div:nth-child(6) > \"\n                        \"div:nth-child(3) > div:nth-child(2)\"\n                    )[0].text,\n                    \"%d/%m/%Y\",\n                ),\n            ),\n        ]\nE       IndexError: list index out of range\n\nuk_bin_collection/uk_bin_collection/councils/WakefieldCityCouncil.py:59: IndexError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"IndexError: list index out of range","statusTrace":"request = <FixtureRequest for <Function test_scenario_outline[WakefieldCityCouncil]>>\n_pytest_bdd_example = {'council': 'WakefieldCityCouncil'}\n\n    @pytest.mark.usefixtures(*func_args)\n    def scenario_wrapper(request: FixtureRequest, _pytest_bdd_example: dict[str, str]) -> Any:\n        scenario = templated_scenario.render(_pytest_bdd_example)\n>       _execute_scenario(feature, scenario, request)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/pytest_bdd/scenario.py:187: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/pytest_bdd/scenario.py:157: in _execute_scenario\n    _execute_step_function(request, scenario, step, step_func)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/pytest_bdd/scenario.py:127: in _execute_step_function\n    return_value = call_fixture_func(fixturefunc=step_func, request=request, kwargs=kwargs)\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\nuk_bin_collection/tests/step_defs/test_validate_council.py:62: in scrape_step\n    raise (err)\nuk_bin_collection/tests/step_defs/test_validate_council.py:58: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:71: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:59: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:70: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <WakefieldCityCouncil.CouncilClass object at 0x7f1ff08f2ed0>, page = ''\nkwargs = {'paon': None, 'postcode': None, 'uprn': '63035490', 'usrn': None}\nuser_uprn = '63035490'\nheaders = {'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36'}\nparams = {'uprn': '63035490'}\ns = <requests.sessions.Session object at 0x7f1fefd2efd0>\nwakefield_session = <Response [200]>, response = <Response [404]>\nsoup = <!DOCTYPE html>\n\n<html lang=\"en-gb\">\n<head>\n<title>Page not found - Wakefield Council</title>\n<meta charset=\"utf-8\"/>\n...e?SWJIYLWA=719d34d31c8e3a6e6fffd425f7e032f3&amp;ns=2&amp;cb=1732851440\" type=\"text/javascript\"></script></body>\n</html>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        # UPRN passed in as an argument\n        user_uprn = kwargs.get(\"uprn\")\n        check_uprn(user_uprn)\n    \n        # cookies = {\n        #    'visid_incap_2049675':    'xZCc/tFgSzaFmZD7XkN3koJGuGMAAAAAQUIPAAAAAAB7QGC8d+Jmlk0i3y06Zer6',\n        #    'WSS_FullScreenMode':     'false',\n        #    'incap_ses_1184_2049675': 'a2ZQQ9lCM3wa4+23mWpuEHnAuGMAAAAAfl4ebLXAvItl6dCfbMEWoQ==',\n        # }\n        headers = {\n            \"User-Agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36\"\n        }\n    \n        params = {\n            \"uprn\": user_uprn,\n        }\n    \n        requests.packages.urllib3.disable_warnings()\n        s = requests.Session()  # gets cookies and keeps them\n    \n        wakefield_session = s.get(\"https://www.wakefield.gov.uk/\", headers=headers)\n        # Make a GET for the data with correct params and cookies\n        response = s.get(\n            \"https://www.wakefield.gov.uk/site/Where-I-Live-Results\",\n            params=params,\n            headers=headers,\n            verify=False,\n        )\n    \n        # Have BS4 process the page\n        soup = BeautifulSoup(response.text, features=\"html.parser\")\n        soup.prettify()\n        data = {\"bins\": []}\n    \n        # Start a tuple for collections with (TYPE:DATE). Add the first for the bin types since they're separate\n        # elements on the page. All dates are parsed from text to datetime\n        collections = [\n            (\n                \"Household waste\",\n                datetime.strptime(\n>                   soup.select(\n                        \"#ctl00_PlaceHolderMain_Waste_output > div:nth-child(4) > \"\n                        \"div:nth-child(3) > div:nth-child(2)\"\n                    )[0].text,\n                    \"%d/%m/%Y\",\n                ),\n            ),\n            (\n                \"Mixed recycling\",\n                datetime.strptime(\n                    soup.select(\n                        \"#ctl00_PlaceHolderMain_Waste_output > div:nth-child(6) > \"\n                        \"div:nth-child(3) > div:nth-child(2)\"\n                    )[0].text,\n                    \"%d/%m/%Y\",\n                ),\n            ),\n        ]\nE       IndexError: list index out of range\n\nuk_bin_collection/uk_bin_collection/councils/WakefieldCityCouncil.py:59: IndexError","steps":[{"name":"Given the council: WakefieldCityCouncil","time":{"start":1691457914323,"stop":1691457914324,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0},{"name":"When we scrape the data from WakefieldCityCouncil","time":{"start":1691457914324,"stop":1691457916570,"duration":2246},"status":"failed","statusMessage":"list index out of range","statusTrace":"IndexError: list index out of range\n","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true,"stepsCount":0}],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true,"stepsCount":2},"afterStages":[],"labels":[{"name":"host","value":"fv-az446-32"},{"name":"thread","value":"2116-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results in /outputs"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"WakefieldCityCouncil"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":28,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":28},"items":[{"uid":"b692b3a67b4ae1fa","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/845//#testresult/b692b3a67b4ae1fa","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1691371819925,"stop":1691371821531,"duration":1606}},{"uid":"1b6b2eefc38447bd","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/844//#testresult/1b6b2eefc38447bd","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1691285033251,"stop":1691285034410,"duration":1159}},{"uid":"a14d281fb250d162","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/843//#testresult/a14d281fb250d162","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1691198848508,"stop":1691198849815,"duration":1307}},{"uid":"43ba793a1d934b92","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/842//#testresult/43ba793a1d934b92","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1691112463859,"stop":1691112464723,"duration":864}},{"uid":"d3ee60266b564ae8","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/841//#testresult/d3ee60266b564ae8","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1691026154689,"stop":1691026155929,"duration":1240}},{"uid":"fd547159584303b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/840//#testresult/fd547159584303b","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1690939511481,"stop":1690939512344,"duration":863}},{"uid":"182dedf7c8ed4ef6","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/839//#testresult/182dedf7c8ed4ef6","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1690854235428,"stop":1690854236233,"duration":805}},{"uid":"5f5ae607358f331","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/838//#testresult/5f5ae607358f331","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1690767010867,"stop":1690767012124,"duration":1257}},{"uid":"42e726ebc5e520dc","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/837//#testresult/42e726ebc5e520dc","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1690680689152,"stop":1690680689996,"duration":844}},{"uid":"93b3944431c89829","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/836//#testresult/93b3944431c89829","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1690594015448,"stop":1690594016426,"duration":978}},{"uid":"86b7631dc971bce5","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/835//#testresult/86b7631dc971bce5","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1690563636365,"stop":1690563637054,"duration":689}},{"uid":"feb42ff6edc05679","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/833//#testresult/feb42ff6edc05679","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1690562959483,"stop":1690562960585,"duration":1102}},{"uid":"34572568680cd05b","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/832//#testresult/34572568680cd05b","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1690507585425,"stop":1690507586425,"duration":1000}},{"uid":"2faa98783b22a192","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/831//#testresult/2faa98783b22a192","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1690421098307,"stop":1690421098986,"duration":679}},{"uid":"b306441d13ee9e19","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/830//#testresult/b306441d13ee9e19","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1690335678714,"stop":1690335679579,"duration":865}},{"uid":"425419130e2313d0","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/829//#testresult/425419130e2313d0","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1690249812470,"stop":1690249813182,"duration":712}},{"uid":"14393c10639f3845","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/828//#testresult/14393c10639f3845","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1690162829878,"stop":1690162830525,"duration":647}},{"uid":"da239f666a530f89","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/827//#testresult/da239f666a530f89","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1690123570981,"stop":1690123572182,"duration":1201}},{"uid":"d7a3c0f7bb421102","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/824//#testresult/d7a3c0f7bb421102","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1690107123632,"stop":1690107124843,"duration":1211}},{"uid":"e0fa6a761a1818d2","reportUrl":"https://robbrad.github.io/UKBinCollectionData/3.11/822//#testresult/e0fa6a761a1818d2","status":"failed","statusDetails":"IndexError: list index out of range","time":{"start":1690076756243,"stop":1690076756910,"duration":667}}]},"tags":[]},"source":"a692eb81b0a24192.json","parameterValues":["WakefieldCityCouncil"]}